{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0","program":"/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"sync\"","-C","metadata=2ac6bd6357d2d64a","-C","extra-filename=-2ac6bd6357d2d64a","--out-dir","/Users/healer/Documents/RustTutorial/rust_flow/rust_tutorial/target/rls/debug/deps","-L","dependency=/Users/healer/Documents/RustTutorial/rust_flow/rust_tutorial/target/rls/debug/deps","--extern","pin_project_lite=/Users/healer/Documents/RustTutorial/rust_flow/rust_tutorial/target/rls/debug/deps/libpin_project_lite-34c7eb5ccf16e387.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/healer/Documents/RustTutorial/rust_flow/rust_tutorial/target/rls/debug/deps/libtokio-2ac6bd6357d2d64a.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[10022663429473287447,0]},"crate_root":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src","external_crates":[{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[731825893227783439,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/wake_list.rs","num":2,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17104879904101875706,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7171606794823467103,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1962125835969742563,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9581088599378972321,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[813795769934850431,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17725418628365393926,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5893038469516244934,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17002347431842942188,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3247696082052491306,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1250632192672038569,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6011250054333313481,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[13264462261958304631,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11374198430379246765,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[9483954524752636596,0]}}],"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":0,"byte_end":19457,"line_start":1,"line_end":542,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12755},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/support.rs","byte_start":33603,"byte_end":33609,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":2,"index":44742},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/support.rs","byte_start":33629,"byte_end":33632,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":2,"index":47430},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/support.rs","byte_start":33653,"byte_end":33657,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":55}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42684,"byte_end":42696,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42741,"byte_end":42750,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42795,"byte_end":42804,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42851,"byte_end":42861,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42902,"byte_end":42909,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":3806},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":43079,"byte_end":43084,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":10339},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":43086,"byte_end":43095,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":3804},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":43097,"byte_end":43103,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":1,"index":10472},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":43105,"byte_end":43113,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":102}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82430,"byte_end":82443,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":351}},{"kind":"Use","ref_id":{"krate":0,"index":3469},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031312,"byte_end":13031320,"line_start":433,"line_end":433,"column_start":32,"column_end":40},"alias_span":null,"name":"Notified","value":"","parent":{"krate":0,"index":1129}},{"kind":"Use","ref_id":{"krate":0,"index":3349},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031368,"byte_end":13031375,"line_start":437,"line_end":437,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3361},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031377,"byte_end":13031394,"line_start":437,"line_end":437,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":1497},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075981,"byte_end":13075988,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1491},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075990,"byte_end":13076001,"line_start":76,"line_end":76,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1487},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076003,"byte_end":13076009,"line_start":76,"line_end":76,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1494},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076011,"byte_end":13076019,"line_start":76,"line_end":76,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1484},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076021,"byte_end":13076027,"line_start":76,"line_end":76,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076105,"byte_end":13076122,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076124,"byte_end":13076141,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076143,"byte_end":13076158,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":1355}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031476,"byte_end":13031481,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2009},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031483,"byte_end":13031493,"line_start":444,"line_end":444,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3442},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031495,"byte_end":13031507,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3443},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031495,"byte_end":13031507,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2013},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031509,"byte_end":13031524,"line_start":444,"line_end":444,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2016},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031526,"byte_end":13031542,"line_start":444,"line_end":444,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3447},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031593,"byte_end":13031599,"line_start":447,"line_end":447,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3540},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031690,"byte_end":13031702,"line_start":452,"line_end":452,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3530},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031704,"byte_end":13031719,"line_start":452,"line_end":452,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3545},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031766,"byte_end":13031775,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3549},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031777,"byte_end":13031792,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3556},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031794,"byte_end":13031814,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031854,"byte_end":13031860,"line_start":458,"line_end":458,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2632},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031900,"byte_end":13031920,"line_start":459,"line_end":459,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2693},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031961,"byte_end":13031982,"line_start":460,"line_end":460,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2749},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032030,"byte_end":13032057,"line_start":461,"line_end":461,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2802},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032091,"byte_end":13032106,"line_start":462,"line_end":462,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2855},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032141,"byte_end":13032157,"line_start":463,"line_end":463,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":2909},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032199,"byte_end":13032221,"line_start":464,"line_end":464,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032326,"byte_end":13032334,"line_start":470,"line_end":470,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":1128}},{"kind":"Use","ref_id":{"krate":0,"index":3569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032336,"byte_end":13032344,"line_start":470,"line_end":470,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":1128}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":0,"byte_end":19457,"line_start":1,"line_end":542,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":65},{"krate":0,"index":102},{"krate":0,"index":351},{"krate":0,"index":442},{"krate":0,"index":720},{"krate":0,"index":852},{"krate":0,"index":1128},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":985},{"krate":0,"index":986}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_must_use)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":220,"byte_end":245,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":687,"byte_end":770,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":771,"byte_end":774,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":775,"byte_end":855,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":856,"byte_end":928,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":929,"byte_end":965,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":966,"byte_end":969,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":970,"byte_end":1037,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1038,"byte_end":1118,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1119,"byte_end":1142,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1143,"byte_end":1230,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1231,"byte_end":1304,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1305,"byte_end":1383,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1384,"byte_end":1464,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1465,"byte_end":1515,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1516,"byte_end":1519,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1520,"byte_end":1576,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1577,"byte_end":1580,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1581,"byte_end":1613,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1614,"byte_end":1637,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1638,"byte_end":1661,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1662,"byte_end":1688,"line_start":45,"line_end":45,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1689,"byte_end":1710,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1711,"byte_end":1730,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1731,"byte_end":1760,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1761,"byte_end":1788,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1789,"byte_end":1808,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1809,"byte_end":1838,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1839,"byte_end":1885,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1890,"byte_end":1911,"line_start":54,"line_end":54,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1912,"byte_end":1915,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1916,"byte_end":1995,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":1996,"byte_end":2069,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2070,"byte_end":2149,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2150,"byte_end":2165,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2166,"byte_end":2169,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2170,"byte_end":2242,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2243,"byte_end":2280,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2285,"byte_end":2296,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2297,"byte_end":2347,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2348,"byte_end":2355,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2356,"byte_end":2359,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2360,"byte_end":2390,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2391,"byte_end":2394,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2395,"byte_end":2476,"line_start":70,"line_end":70,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2477,"byte_end":2562,"line_start":71,"line_end":71,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2563,"byte_end":2647,"line_start":72,"line_end":72,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2648,"byte_end":2678,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2679,"byte_end":2682,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2683,"byte_end":2699,"line_start":75,"line_end":75,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2704,"byte_end":2770,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2771,"byte_end":2774,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2775,"byte_end":2786,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2787,"byte_end":2837,"line_start":80,"line_end":80,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2838,"byte_end":2845,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2846,"byte_end":2849,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2850,"byte_end":2877,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2878,"byte_end":2881,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2882,"byte_end":2962,"line_start":85,"line_end":85,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":2963,"byte_end":3045,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3046,"byte_end":3127,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3128,"byte_end":3163,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3164,"byte_end":3167,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3168,"byte_end":3184,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3185,"byte_end":3188,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3189,"byte_end":3271,"line_start":92,"line_end":92,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3272,"byte_end":3322,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3323,"byte_end":3326,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3327,"byte_end":3338,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3339,"byte_end":3394,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3395,"byte_end":3402,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3403,"byte_end":3406,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3407,"byte_end":3432,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3433,"byte_end":3436,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3437,"byte_end":3513,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3514,"byte_end":3597,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3598,"byte_end":3641,"line_start":103,"line_end":103,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3642,"byte_end":3645,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3646,"byte_end":3725,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3726,"byte_end":3809,"line_start":106,"line_end":106,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3810,"byte_end":3888,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3889,"byte_end":3908,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3913,"byte_end":3986,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":3987,"byte_end":4002,"line_start":111,"line_end":111,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4003,"byte_end":4006,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4007,"byte_end":4050,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4051,"byte_end":4083,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4084,"byte_end":4119,"line_start":115,"line_end":115,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4120,"byte_end":4163,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4164,"byte_end":4217,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4218,"byte_end":4221,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4222,"byte_end":4300,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4301,"byte_end":4357,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4358,"byte_end":4361,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4362,"byte_end":4435,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4436,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4457,"byte_end":4532,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4533,"byte_end":4545,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4546,"byte_end":4626,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4627,"byte_end":4657,"line_start":127,"line_end":127,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4662,"byte_end":4738,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4739,"byte_end":4751,"line_start":130,"line_end":130,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4752,"byte_end":4755,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4756,"byte_end":4788,"line_start":132,"line_end":132,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4789,"byte_end":4822,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4823,"byte_end":4860,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4861,"byte_end":4898,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4899,"byte_end":4930,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4931,"byte_end":4964,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4965,"byte_end":4968,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":4969,"byte_end":5040,"line_start":139,"line_end":139,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5041,"byte_end":5121,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5122,"byte_end":5210,"line_start":141,"line_end":141,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5211,"byte_end":5235,"line_start":142,"line_end":142,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5236,"byte_end":5239,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5240,"byte_end":5315,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5316,"byte_end":5319,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5320,"byte_end":5352,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5353,"byte_end":5386,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5387,"byte_end":5426,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5427,"byte_end":5464,"line_start":149,"line_end":149,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5465,"byte_end":5468,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5469,"byte_end":5547,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5548,"byte_end":5632,"line_start":152,"line_end":152,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5633,"byte_end":5717,"line_start":153,"line_end":153,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5718,"byte_end":5811,"line_start":154,"line_end":154,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5812,"byte_end":5903,"line_start":155,"line_end":155,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5904,"byte_end":5943,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5944,"byte_end":5947,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":5948,"byte_end":6026,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6027,"byte_end":6100,"line_start":159,"line_end":159,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6101,"byte_end":6173,"line_start":160,"line_end":160,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6174,"byte_end":6252,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6253,"byte_end":6323,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6328,"byte_end":6354,"line_start":164,"line_end":164,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6355,"byte_end":6393,"line_start":165,"line_end":165,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6394,"byte_end":6434,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6435,"byte_end":6475,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#current-thread-scheduler","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6476,"byte_end":6529,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/ [rt-multi-thread]: runtime/index.html#multi-thread-scheduler","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6530,"byte_end":6594,"line_start":169,"line_end":169,"column_start":1,"column_end":65}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6595,"byte_end":6650,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6651,"byte_end":6654,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6655,"byte_end":6695,"line_start":172,"line_end":172,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6696,"byte_end":6699,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6700,"byte_end":6779,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6780,"byte_end":6857,"line_start":175,"line_end":175,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6858,"byte_end":6938,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":6939,"byte_end":7013,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7014,"byte_end":7093,"line_start":178,"line_end":178,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7094,"byte_end":7171,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7172,"byte_end":7245,"line_start":180,"line_end":180,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7246,"byte_end":7322,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7323,"byte_end":7404,"line_start":182,"line_end":182,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7405,"byte_end":7475,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7476,"byte_end":7550,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7551,"byte_end":7627,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7628,"byte_end":7705,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7706,"byte_end":7709,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7710,"byte_end":7787,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7788,"byte_end":7791,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7792,"byte_end":7832,"line_start":190,"line_end":190,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7833,"byte_end":7886,"line_start":191,"line_end":191,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7887,"byte_end":7958,"line_start":192,"line_end":192,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7959,"byte_end":7962,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7963,"byte_end":7970,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7971,"byte_end":7989,"line_start":195,"line_end":195,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":7990,"byte_end":8011,"line_start":196,"line_end":196,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8012,"byte_end":8056,"line_start":197,"line_end":197,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8057,"byte_end":8060,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8061,"byte_end":8121,"line_start":199,"line_end":199,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8122,"byte_end":8174,"line_start":200,"line_end":200,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8175,"byte_end":8210,"line_start":201,"line_end":201,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8211,"byte_end":8222,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8223,"byte_end":8226,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8227,"byte_end":8282,"line_start":204,"line_end":204,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8283,"byte_end":8358,"line_start":205,"line_end":205,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8359,"byte_end":8376,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8377,"byte_end":8414,"line_start":207,"line_end":207,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8415,"byte_end":8420,"line_start":208,"line_end":208,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8421,"byte_end":8428,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8429,"byte_end":8432,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8433,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":79}},{"value":"/ to run it, you should use a separate thread pool dedicated to CPU bound tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8512,"byte_end":8594,"line_start":212,"line_end":212,"column_start":1,"column_end":83}},{"value":"/ For example, you could consider using the [rayon] library for CPU-bound","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8595,"byte_end":8670,"line_start":213,"line_end":213,"column_start":1,"column_end":76}},{"value":"/ tasks. It is also possible to create an extra Tokio runtime dedicated to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8671,"byte_end":8747,"line_start":214,"line_end":214,"column_start":1,"column_end":77}},{"value":"/ CPU-bound tasks, but if you do this, you should be careful that the extra","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8748,"byte_end":8825,"line_start":215,"line_end":215,"column_start":1,"column_end":78}},{"value":"/ runtime runs _only_ CPU-bound tasks, as IO-bound tasks on that runtime","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8826,"byte_end":8900,"line_start":216,"line_end":216,"column_start":1,"column_end":75}},{"value":"/ will behave poorly.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8901,"byte_end":8924,"line_start":217,"line_end":217,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8925,"byte_end":8928,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Hint: If using rayon, you can use a [`oneshot`] channel to send the result back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":8929,"byte_end":9012,"line_start":219,"line_end":219,"column_start":1,"column_end":84}},{"value":"/ to Tokio when the rayon task finishes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9013,"byte_end":9055,"line_start":220,"line_end":220,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9056,"byte_end":9059,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9060,"byte_end":9094,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9095,"byte_end":9132,"line_start":223,"line_end":223,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9133,"byte_end":9136,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9137,"byte_end":9159,"line_start":225,"line_end":225,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9160,"byte_end":9163,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9164,"byte_end":9243,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9244,"byte_end":9291,"line_start":228,"line_end":228,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9292,"byte_end":9295,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9296,"byte_end":9375,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9376,"byte_end":9456,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9457,"byte_end":9537,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9538,"byte_end":9609,"line_start":233,"line_end":233,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9610,"byte_end":9641,"line_start":234,"line_end":234,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9642,"byte_end":9645,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9646,"byte_end":9726,"line_start":236,"line_end":236,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9727,"byte_end":9787,"line_start":237,"line_end":237,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9788,"byte_end":9791,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9792,"byte_end":9871,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9872,"byte_end":9941,"line_start":240,"line_end":240,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":9942,"byte_end":10019,"line_start":241,"line_end":241,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10020,"byte_end":10076,"line_start":242,"line_end":242,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10077,"byte_end":10157,"line_start":243,"line_end":243,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10158,"byte_end":10203,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10204,"byte_end":10283,"line_start":245,"line_end":245,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10284,"byte_end":10318,"line_start":246,"line_end":246,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10319,"byte_end":10322,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10323,"byte_end":10351,"line_start":248,"line_end":248,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10352,"byte_end":10391,"line_start":249,"line_end":249,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10392,"byte_end":10433,"line_start":250,"line_end":250,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10434,"byte_end":10479,"line_start":251,"line_end":251,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10480,"byte_end":10504,"line_start":252,"line_end":252,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10505,"byte_end":10535,"line_start":253,"line_end":253,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10536,"byte_end":10562,"line_start":254,"line_end":254,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10563,"byte_end":10595,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10596,"byte_end":10623,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10624,"byte_end":10652,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10653,"byte_end":10677,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10678,"byte_end":10714,"line_start":259,"line_end":259,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10715,"byte_end":10753,"line_start":260,"line_end":260,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10754,"byte_end":10757,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10758,"byte_end":10772,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10773,"byte_end":10776,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10777,"byte_end":10806,"line_start":264,"line_end":264,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10807,"byte_end":10810,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10811,"byte_end":10824,"line_start":266,"line_end":266,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10825,"byte_end":10857,"line_start":267,"line_end":267,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10858,"byte_end":10907,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10908,"byte_end":10911,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10912,"byte_end":10930,"line_start":270,"line_end":270,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10931,"byte_end":10994,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":10995,"byte_end":11061,"line_start":272,"line_end":272,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11062,"byte_end":11065,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11066,"byte_end":11080,"line_start":274,"line_end":274,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11081,"byte_end":11140,"line_start":275,"line_end":275,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11141,"byte_end":11144,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11145,"byte_end":11182,"line_start":277,"line_end":277,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11183,"byte_end":11223,"line_start":278,"line_end":278,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11224,"byte_end":11227,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11228,"byte_end":11308,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11309,"byte_end":11331,"line_start":281,"line_end":281,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11332,"byte_end":11395,"line_start":282,"line_end":282,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11396,"byte_end":11436,"line_start":283,"line_end":283,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11437,"byte_end":11487,"line_start":284,"line_end":284,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11488,"byte_end":11523,"line_start":285,"line_end":285,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11524,"byte_end":11559,"line_start":286,"line_end":286,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11560,"byte_end":11643,"line_start":287,"line_end":287,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11644,"byte_end":11679,"line_start":288,"line_end":288,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11680,"byte_end":11705,"line_start":289,"line_end":289,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11706,"byte_end":11728,"line_start":290,"line_end":290,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11729,"byte_end":11732,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11733,"byte_end":11775,"line_start":292,"line_end":292,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11776,"byte_end":11848,"line_start":293,"line_end":293,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11849,"byte_end":11927,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11928,"byte_end":11959,"line_start":295,"line_end":295,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11960,"byte_end":11981,"line_start":296,"line_end":296,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":11982,"byte_end":11999,"line_start":297,"line_end":297,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12000,"byte_end":12015,"line_start":298,"line_end":298,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12016,"byte_end":12025,"line_start":299,"line_end":299,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12026,"byte_end":12031,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12032,"byte_end":12039,"line_start":301,"line_end":301,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12040,"byte_end":12043,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12044,"byte_end":12064,"line_start":303,"line_end":303,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12065,"byte_end":12068,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12069,"byte_end":12150,"line_start":305,"line_end":305,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12151,"byte_end":12229,"line_start":306,"line_end":306,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12230,"byte_end":12310,"line_start":307,"line_end":307,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12311,"byte_end":12388,"line_start":308,"line_end":308,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12389,"byte_end":12472,"line_start":309,"line_end":309,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12473,"byte_end":12550,"line_start":310,"line_end":310,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12551,"byte_end":12638,"line_start":311,"line_end":311,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12639,"byte_end":12720,"line_start":312,"line_end":312,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12721,"byte_end":12730,"line_start":313,"line_end":313,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12731,"byte_end":12734,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12735,"byte_end":12819,"line_start":315,"line_end":315,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12820,"byte_end":12893,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12894,"byte_end":12934,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":12935,"byte_end":13021,"line_start":318,"line_end":318,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13022,"byte_end":13073,"line_start":319,"line_end":319,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13074,"byte_end":13134,"line_start":320,"line_end":320,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13135,"byte_end":13212,"line_start":321,"line_end":321,"column_start":1,"column_end":78}},{"value":"/          `UdpSocket`, as well as (on Unix-like systems) `AsyncFd` and (on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13213,"byte_end":13290,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/          FreeBSD) `PollAio`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13291,"byte_end":13323,"line_start":323,"line_end":323,"column_start":1,"column_end":33}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13324,"byte_end":13401,"line_start":324,"line_end":324,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13402,"byte_end":13435,"line_start":325,"line_end":325,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13436,"byte_end":13484,"line_start":326,"line_end":326,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13485,"byte_end":13554,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13555,"byte_end":13601,"line_start":328,"line_end":328,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13602,"byte_end":13652,"line_start":329,"line_end":329,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13653,"byte_end":13691,"line_start":330,"line_end":330,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13692,"byte_end":13770,"line_start":331,"line_end":331,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13771,"byte_end":13774,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13775,"byte_end":13857,"line_start":333,"line_end":333,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13858,"byte_end":13880,"line_start":334,"line_end":334,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13881,"byte_end":13884,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13885,"byte_end":13910,"line_start":336,"line_end":336,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13911,"byte_end":13914,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13915,"byte_end":13983,"line_start":338,"line_end":338,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":13984,"byte_end":14047,"line_start":339,"line_end":339,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14048,"byte_end":14065,"line_start":340,"line_end":340,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14066,"byte_end":14069,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14070,"byte_end":14149,"line_start":342,"line_end":342,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14150,"byte_end":14227,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14228,"byte_end":14261,"line_start":344,"line_end":344,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14262,"byte_end":14265,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14266,"byte_end":14291,"line_start":346,"line_end":346,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14292,"byte_end":14295,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14296,"byte_end":14381,"line_start":348,"line_end":348,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14382,"byte_end":14466,"line_start":349,"line_end":349,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14467,"byte_end":14551,"line_start":350,"line_end":350,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14552,"byte_end":14591,"line_start":351,"line_end":351,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14592,"byte_end":14595,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14596,"byte_end":14636,"line_start":353,"line_end":353,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14637,"byte_end":14640,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":14641,"byte_end":14738,"line_start":355,"line_end":355,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15371,"byte_end":15383,"line_start":374,"line_end":374,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/mod.rs","byte_start":19494,"byte_end":19514,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":55},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015411,"byte_end":13015416,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015182,"byte_end":13015223,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015224,"byte_end":13015227,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015228,"byte_end":13015305,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015374,"byte_end":13015399,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35136,"byte_end":35213,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35214,"byte_end":35217,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35218,"byte_end":35289,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35290,"byte_end":35370,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35371,"byte_end":35445,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35446,"byte_end":35449,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35450,"byte_end":35480,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35481,"byte_end":35484,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35485,"byte_end":35565,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35566,"byte_end":35643,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35644,"byte_end":35721,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35722,"byte_end":35802,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35803,"byte_end":35881,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35882,"byte_end":35947,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35948,"byte_end":35951,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":35952,"byte_end":36024,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36025,"byte_end":36092,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36093,"byte_end":36172,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36173,"byte_end":36247,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36248,"byte_end":36322,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36323,"byte_end":36340,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36341,"byte_end":36344,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36345,"byte_end":36409,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36410,"byte_end":36485,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36486,"byte_end":36561,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36562,"byte_end":36639,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36640,"byte_end":36643,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36644,"byte_end":36720,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36721,"byte_end":36796,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36797,"byte_end":36877,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36878,"byte_end":36949,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":36950,"byte_end":37019,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37020,"byte_end":37023,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37024,"byte_end":37096,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37097,"byte_end":37177,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37178,"byte_end":37231,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37232,"byte_end":37235,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37236,"byte_end":37249,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37250,"byte_end":37290,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37291,"byte_end":37315,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37316,"byte_end":37319,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37320,"byte_end":37338,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37339,"byte_end":37378,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37379,"byte_end":37428,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37429,"byte_end":37462,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37463,"byte_end":37466,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37467,"byte_end":37497,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37498,"byte_end":37541,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37542,"byte_end":37545,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37546,"byte_end":37596,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37597,"byte_end":37611,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37612,"byte_end":37617,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37618,"byte_end":37625,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37626,"byte_end":37629,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37630,"byte_end":37659,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37660,"byte_end":37700,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37701,"byte_end":37737,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37738,"byte_end":37779,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37780,"byte_end":37783,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37784,"byte_end":37819,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37820,"byte_end":37823,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37824,"byte_end":37905,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37906,"byte_end":37980,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":37981,"byte_end":38059,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38060,"byte_end":38104,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38105,"byte_end":38108,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38109,"byte_end":38179,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38180,"byte_end":38258,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38259,"byte_end":38337,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38338,"byte_end":38415,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38416,"byte_end":38419,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38420,"byte_end":38495,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38496,"byte_end":38534,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38535,"byte_end":38538,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38539,"byte_end":38552,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38553,"byte_end":38607,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38608,"byte_end":38632,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38633,"byte_end":38636,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38637,"byte_end":38655,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38656,"byte_end":38695,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38696,"byte_end":38741,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38742,"byte_end":38785,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38786,"byte_end":38825,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38826,"byte_end":38829,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38830,"byte_end":38864,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38865,"byte_end":38910,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38911,"byte_end":38914,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38915,"byte_end":38946,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38947,"byte_end":38961,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38962,"byte_end":38967,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38968,"byte_end":38975,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38976,"byte_end":38979,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":38980,"byte_end":39061,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39062,"byte_end":39140,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39141,"byte_end":39203,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39204,"byte_end":39207,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39208,"byte_end":39221,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39222,"byte_end":39274,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39275,"byte_end":39299,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39300,"byte_end":39303,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39304,"byte_end":39322,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39323,"byte_end":39362,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39363,"byte_end":39410,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39411,"byte_end":39420,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39421,"byte_end":39468,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39469,"byte_end":39472,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39473,"byte_end":39515,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39516,"byte_end":39557,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39558,"byte_end":39561,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39562,"byte_end":39622,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39623,"byte_end":39657,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39658,"byte_end":39661,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39662,"byte_end":39752,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39753,"byte_end":39756,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39757,"byte_end":39771,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39772,"byte_end":39777,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39778,"byte_end":39785,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39786,"byte_end":39789,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39790,"byte_end":39835,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39836,"byte_end":39878,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39879,"byte_end":39924,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39925,"byte_end":39964,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":39965,"byte_end":40004,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40005,"byte_end":40008,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40009,"byte_end":40053,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40054,"byte_end":40057,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40058,"byte_end":40140,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40141,"byte_end":40220,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40221,"byte_end":40295,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40296,"byte_end":40369,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40370,"byte_end":40430,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40431,"byte_end":40434,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40435,"byte_end":40476,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40477,"byte_end":40480,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40481,"byte_end":40549,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40550,"byte_end":40619,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40620,"byte_end":40686,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40687,"byte_end":40750,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40751,"byte_end":40818,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40819,"byte_end":40888,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40889,"byte_end":40959,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":40960,"byte_end":41038,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41039,"byte_end":41064,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41065,"byte_end":41068,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41069,"byte_end":41145,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41146,"byte_end":41149,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41150,"byte_end":41181,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41182,"byte_end":41185,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41186,"byte_end":41266,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41267,"byte_end":41343,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41344,"byte_end":41391,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41392,"byte_end":41395,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41396,"byte_end":41469,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41470,"byte_end":41546,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41547,"byte_end":41623,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41624,"byte_end":41627,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41628,"byte_end":41649,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41650,"byte_end":41673,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41674,"byte_end":41696,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41697,"byte_end":41700,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41701,"byte_end":41723,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41724,"byte_end":41727,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41728,"byte_end":41804,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41805,"byte_end":41852,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41853,"byte_end":41856,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41857,"byte_end":41891,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41892,"byte_end":41928,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41929,"byte_end":41969,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":41970,"byte_end":42012,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42013,"byte_end":42086,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42087,"byte_end":42170,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42171,"byte_end":42254,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42255,"byte_end":42282,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42283,"byte_end":42316,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42317,"byte_end":42344,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42345,"byte_end":42372,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42373,"byte_end":42404,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42405,"byte_end":42475,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42476,"byte_end":42552,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/mod.rs","byte_start":42553,"byte_end":42582,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45427,"byte_end":45439,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":44750,"byte_end":44781,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":44782,"byte_end":44785,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":44786,"byte_end":44858,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":44859,"byte_end":44937,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":44938,"byte_end":45024,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45025,"byte_end":45102,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45103,"byte_end":45114,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45115,"byte_end":45118,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45119,"byte_end":45187,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45188,"byte_end":45212,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45213,"byte_end":45216,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45217,"byte_end":45259,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45260,"byte_end":45310,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45311,"byte_end":45364,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45365,"byte_end":45416,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46537,"byte_end":46550,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45457,"byte_end":45542,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45547,"byte_end":45588,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45593,"byte_end":45596,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45601,"byte_end":45648,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45653,"byte_end":45656,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45661,"byte_end":45720,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45725,"byte_end":45783,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45788,"byte_end":45869,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45874,"byte_end":45900,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45905,"byte_end":45908,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45913,"byte_end":45984,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45989,"byte_end":46051,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46056,"byte_end":46127,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46132,"byte_end":46213,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46218,"byte_end":46294,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46299,"byte_end":46350,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46355,"byte_end":46358,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46363,"byte_end":46434,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46439,"byte_end":46442,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46447,"byte_end":46486,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46491,"byte_end":46529,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47453,"byte_end":47460,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46628,"byte_end":46702,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46707,"byte_end":46774,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46779,"byte_end":46782,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46787,"byte_end":46858,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46863,"byte_end":46932,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":46937,"byte_end":47011,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47016,"byte_end":47093,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47098,"byte_end":47168,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47173,"byte_end":47226,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47231,"byte_end":47234,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47239,"byte_end":47311,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47316,"byte_end":47338,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47343,"byte_end":47346,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47351,"byte_end":47390,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47395,"byte_end":47445,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50774,"byte_end":50783,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49087,"byte_end":49117,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49118,"byte_end":49121,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49122,"byte_end":49201,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49202,"byte_end":49276,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49277,"byte_end":49356,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49357,"byte_end":49434,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49435,"byte_end":49446,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49447,"byte_end":49450,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49451,"byte_end":49528,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49529,"byte_end":49547,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49548,"byte_end":49551,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49552,"byte_end":49632,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49633,"byte_end":49706,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49707,"byte_end":49786,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49787,"byte_end":49831,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49832,"byte_end":49835,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49836,"byte_end":49901,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49902,"byte_end":49982,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":49983,"byte_end":50062,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50063,"byte_end":50136,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50137,"byte_end":50210,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50211,"byte_end":50232,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50233,"byte_end":50236,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50237,"byte_end":50321,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50322,"byte_end":50346,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50347,"byte_end":50350,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50351,"byte_end":50424,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50425,"byte_end":50504,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50505,"byte_end":50508,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50509,"byte_end":50574,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50575,"byte_end":50596,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50597,"byte_end":50600,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50601,"byte_end":50640,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50641,"byte_end":50677,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50678,"byte_end":50717,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50718,"byte_end":50763,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51300,"byte_end":51309,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50790,"byte_end":50843,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50848,"byte_end":50851,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50856,"byte_end":50924,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":50929,"byte_end":51004,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51009,"byte_end":51062,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51067,"byte_end":51070,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51075,"byte_end":51150,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51155,"byte_end":51224,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51229,"byte_end":51292,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53905,"byte_end":53914,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53423,"byte_end":53453,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53454,"byte_end":53457,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53458,"byte_end":53532,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53533,"byte_end":53603,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53604,"byte_end":53673,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53674,"byte_end":53677,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53678,"byte_end":53743,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53744,"byte_end":53765,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53766,"byte_end":53769,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53770,"byte_end":53806,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53807,"byte_end":53848,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53849,"byte_end":53894,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54556,"byte_end":54566,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53921,"byte_end":53978,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53983,"byte_end":53986,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":53991,"byte_end":54064,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54069,"byte_end":54095,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54100,"byte_end":54103,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54108,"byte_end":54183,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54188,"byte_end":54244,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54249,"byte_end":54252,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54257,"byte_end":54269,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54274,"byte_end":54277,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54282,"byte_end":54352,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54357,"byte_end":54431,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54436,"byte_end":54510,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54515,"byte_end":54548,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55089,"byte_end":55102,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54633,"byte_end":54676,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54681,"byte_end":54684,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54689,"byte_end":54738,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54743,"byte_end":54813,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54818,"byte_end":54890,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54895,"byte_end":54966,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54971,"byte_end":54987,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":54992,"byte_end":54995,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55000,"byte_end":55012,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55017,"byte_end":55020,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55025,"byte_end":55081,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58393,"byte_end":58403,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56530,"byte_end":56562,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56563,"byte_end":56566,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56567,"byte_end":56649,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56650,"byte_end":56725,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56726,"byte_end":56793,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56794,"byte_end":56797,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56798,"byte_end":56878,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56879,"byte_end":56897,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56898,"byte_end":56901,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56902,"byte_end":56973,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56974,"byte_end":56988,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56989,"byte_end":56992,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":56993,"byte_end":57061,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57062,"byte_end":57142,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57143,"byte_end":57222,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57223,"byte_end":57296,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57297,"byte_end":57370,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57371,"byte_end":57392,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57393,"byte_end":57396,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57397,"byte_end":57481,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57482,"byte_end":57506,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57507,"byte_end":57510,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57511,"byte_end":57593,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57594,"byte_end":57677,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57678,"byte_end":57681,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57682,"byte_end":57766,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57767,"byte_end":57851,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57852,"byte_end":57930,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":57931,"byte_end":58010,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58011,"byte_end":58072,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58073,"byte_end":58076,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58077,"byte_end":58143,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58144,"byte_end":58166,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58167,"byte_end":58170,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58171,"byte_end":58209,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58210,"byte_end":58254,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58255,"byte_end":58294,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58295,"byte_end":58334,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58335,"byte_end":58382,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59075,"byte_end":59085,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58410,"byte_end":58464,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58469,"byte_end":58472,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58477,"byte_end":58553,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58558,"byte_end":58633,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58638,"byte_end":58712,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58717,"byte_end":58792,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58797,"byte_end":58826,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58831,"byte_end":58834,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58839,"byte_end":58901,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58906,"byte_end":58964,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":58969,"byte_end":59036,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59041,"byte_end":59067,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59626,"byte_end":59636,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59213,"byte_end":59284,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59289,"byte_end":59311,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59316,"byte_end":59319,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59324,"byte_end":59370,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59375,"byte_end":59378,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59383,"byte_end":59447,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59452,"byte_end":59510,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59515,"byte_end":59583,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59588,"byte_end":59618,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62922,"byte_end":62935,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59718,"byte_end":59792,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59797,"byte_end":59845,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59850,"byte_end":59853,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59858,"byte_end":59929,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":59934,"byte_end":60010,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60015,"byte_end":60091,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60096,"byte_end":60171,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60176,"byte_end":60247,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60252,"byte_end":60328,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60333,"byte_end":60361,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60366,"byte_end":60369,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60374,"byte_end":60435,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60440,"byte_end":60511,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60516,"byte_end":60588,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60593,"byte_end":60668,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60673,"byte_end":60746,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60751,"byte_end":60826,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60831,"byte_end":60903,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60908,"byte_end":60919,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60924,"byte_end":60927,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":60932,"byte_end":61006,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61011,"byte_end":61083,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61088,"byte_end":61157,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61162,"byte_end":61230,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61235,"byte_end":61296,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61301,"byte_end":61304,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61309,"byte_end":61327,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61332,"byte_end":61335,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61340,"byte_end":61410,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61415,"byte_end":61418,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61423,"byte_end":61486,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61491,"byte_end":61560,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61565,"byte_end":61640,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61645,"byte_end":61718,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61723,"byte_end":61774,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61779,"byte_end":61782,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61787,"byte_end":61857,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61862,"byte_end":61937,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":61942,"byte_end":62014,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62019,"byte_end":62089,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62094,"byte_end":62169,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62174,"byte_end":62177,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62182,"byte_end":62263,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62268,"byte_end":62343,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62348,"byte_end":62415,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62420,"byte_end":62423,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62428,"byte_end":62440,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62445,"byte_end":62448,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62453,"byte_end":62524,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62529,"byte_end":62595,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62600,"byte_end":62674,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62679,"byte_end":62743,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62748,"byte_end":62787,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62792,"byte_end":62795,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62800,"byte_end":62812,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62817,"byte_end":62820,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62825,"byte_end":62900,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":62905,"byte_end":62914,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64048,"byte_end":64067,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63017,"byte_end":63088,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63093,"byte_end":63096,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63101,"byte_end":63168,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63173,"byte_end":63243,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63248,"byte_end":63318,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63323,"byte_end":63326,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63331,"byte_end":63413,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63418,"byte_end":63470,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63475,"byte_end":63478,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63483,"byte_end":63544,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63549,"byte_end":63552,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63557,"byte_end":63619,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63624,"byte_end":63682,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63687,"byte_end":63754,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63759,"byte_end":63785,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63790,"byte_end":63793,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63798,"byte_end":63808,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63813,"byte_end":63816,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63821,"byte_end":63893,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63898,"byte_end":63968,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63973,"byte_end":63985,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63990,"byte_end":63993,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":63998,"byte_end":64040,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64835,"byte_end":64852,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64365,"byte_end":64435,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64440,"byte_end":64459,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64464,"byte_end":64467,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64472,"byte_end":64541,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64546,"byte_end":64621,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64626,"byte_end":64694,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64699,"byte_end":64702,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64707,"byte_end":64754,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64759,"byte_end":64762,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":64767,"byte_end":64827,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72092,"byte_end":72099,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71144,"byte_end":71224,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71225,"byte_end":71228,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71229,"byte_end":71303,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71304,"byte_end":71379,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71380,"byte_end":71458,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71459,"byte_end":71535,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71536,"byte_end":71613,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71614,"byte_end":71617,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71618,"byte_end":71682,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71683,"byte_end":71686,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71687,"byte_end":71702,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71703,"byte_end":71744,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71745,"byte_end":71786,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71787,"byte_end":71828,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71829,"byte_end":71836,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71837,"byte_end":71840,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71841,"byte_end":71919,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71920,"byte_end":71998,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":71999,"byte_end":72080,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72301,"byte_end":72304,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72215,"byte_end":72275,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72280,"byte_end":72289,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72749,"byte_end":72755,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72569,"byte_end":72631,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72636,"byte_end":72639,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72644,"byte_end":72723,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72728,"byte_end":72737,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72983,"byte_end":72991,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72912,"byte_end":72957,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72962,"byte_end":72971,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73137,"byte_end":73143,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73044,"byte_end":73111,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73116,"byte_end":73125,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73597,"byte_end":73607,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73503,"byte_end":73571,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73576,"byte_end":73585,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74085,"byte_end":74089,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":73987,"byte_end":74059,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74064,"byte_end":74073,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74495,"byte_end":74506,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74347,"byte_end":74419,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74424,"byte_end":74427,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74432,"byte_end":74469,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74474,"byte_end":74483,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75018,"byte_end":75033,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74869,"byte_end":74942,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74947,"byte_end":74950,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74955,"byte_end":74992,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":74997,"byte_end":75006,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76256,"byte_end":76265,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75416,"byte_end":75509,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75514,"byte_end":75530,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75535,"byte_end":75538,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75543,"byte_end":75631,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75636,"byte_end":75727,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75732,"byte_end":75735,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75740,"byte_end":75835,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75840,"byte_end":75924,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":75929,"byte_end":76005,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76010,"byte_end":76013,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76018,"byte_end":76030,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76035,"byte_end":76038,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76043,"byte_end":76139,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76144,"byte_end":76223,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76228,"byte_end":76237,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76711,"byte_end":76723,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76333,"byte_end":76439,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76444,"byte_end":76460,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76465,"byte_end":76468,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76473,"byte_end":76485,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76490,"byte_end":76493,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76498,"byte_end":76594,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76599,"byte_end":76678,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76683,"byte_end":76692,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77085,"byte_end":77104,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76811,"byte_end":76912,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76917,"byte_end":76920,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":76925,"byte_end":77036,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77041,"byte_end":77059,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77064,"byte_end":77073,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77442,"byte_end":77464,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77196,"byte_end":77301,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77306,"byte_end":77328,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77333,"byte_end":77336,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77341,"byte_end":77353,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77358,"byte_end":77361,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77366,"byte_end":77416,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":77421,"byte_end":77430,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78309,"byte_end":78318,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78197,"byte_end":78283,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78288,"byte_end":78297,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78585,"byte_end":78590,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78386,"byte_end":78446,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78451,"byte_end":78454,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78459,"byte_end":78559,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78564,"byte_end":78573,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78919,"byte_end":78926,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78640,"byte_end":78697,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78702,"byte_end":78705,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78710,"byte_end":78761,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78766,"byte_end":78769,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78774,"byte_end":78786,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78791,"byte_end":78794,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78799,"byte_end":78893,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":78898,"byte_end":78907,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79537,"byte_end":79547,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79063,"byte_end":79116,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79121,"byte_end":79124,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79129,"byte_end":79180,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79185,"byte_end":79188,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79193,"byte_end":79298,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79303,"byte_end":79379,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79384,"byte_end":79387,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79392,"byte_end":79404,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79409,"byte_end":79412,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79417,"byte_end":79511,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79516,"byte_end":79525,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80151,"byte_end":80162,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79731,"byte_end":79807,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79812,"byte_end":79815,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79820,"byte_end":79929,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79934,"byte_end":79985,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79990,"byte_end":79993,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":79998,"byte_end":80010,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80015,"byte_end":80018,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80023,"byte_end":80118,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80123,"byte_end":80132,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80542,"byte_end":80551,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80314,"byte_end":80420,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80425,"byte_end":80428,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80433,"byte_end":80445,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80450,"byte_end":80453,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80458,"byte_end":80516,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":80521,"byte_end":80530,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":351},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":439}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81469,"byte_end":81487,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81489,"byte_end":81527,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81528,"byte_end":81531,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81532,"byte_end":81615,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81616,"byte_end":81681,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81682,"byte_end":81685,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81686,"byte_end":81704,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81705,"byte_end":81708,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81709,"byte_end":81797,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81798,"byte_end":81867,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81868,"byte_end":81956,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":81957,"byte_end":82015,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82016,"byte_end":82079,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82080,"byte_end":82145,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82147,"byte_end":82150,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82151,"byte_end":82183,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82184,"byte_end":82212,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82213,"byte_end":82241,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82242,"byte_end":82276,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82277,"byte_end":82307,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/mod.rs","byte_start":82308,"byte_end":82342,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83607,"byte_end":83620,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83019,"byte_end":83096,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83097,"byte_end":83100,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83101,"byte_end":83110,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83111,"byte_end":83114,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83115,"byte_end":83192,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83193,"byte_end":83196,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83197,"byte_end":83210,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83211,"byte_end":83214,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83215,"byte_end":83292,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83293,"byte_end":83365,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83366,"byte_end":83435,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83436,"byte_end":83439,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83440,"byte_end":83519,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83520,"byte_end":83596,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90060,"byte_end":90077,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90093,"byte_end":90097,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":435},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90158,"byte_end":90164,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90236,"byte_end":90251,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90362,"byte_end":90370,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":90307,"byte_end":90346,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":840},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":106010,"byte_end":106016,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":105947,"byte_end":106000,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":841},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":106070,"byte_end":106075,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":839},"children":[],"decl_id":null,"docs":" Error returned by `park`.\n","sig":null,"attributes":[{"value":"/ Error returned by `park`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":106031,"byte_end":106060,"line_start":53,"line_end":53,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1355},{"krate":0,"index":1975},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2397},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016254,"byte_end":13016318,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016319,"byte_end":13016322,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016323,"byte_end":13016398,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016399,"byte_end":13016479,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016480,"byte_end":13016559,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016560,"byte_end":13016594,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016595,"byte_end":13016598,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016599,"byte_end":13016623,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016624,"byte_end":13016627,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016628,"byte_end":13016649,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016650,"byte_end":13016653,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016654,"byte_end":13016727,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016728,"byte_end":13016807,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016808,"byte_end":13016877,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016878,"byte_end":13016881,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016882,"byte_end":13016961,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13016962,"byte_end":13017039,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017040,"byte_end":13017115,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017116,"byte_end":13017188,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017189,"byte_end":13017261,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017262,"byte_end":13017340,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017341,"byte_end":13017354,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017355,"byte_end":13017358,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017359,"byte_end":13017437,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017438,"byte_end":13017499,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017500,"byte_end":13017503,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017504,"byte_end":13017528,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017529,"byte_end":13017532,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017533,"byte_end":13017612,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017613,"byte_end":13017691,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017692,"byte_end":13017736,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017737,"byte_end":13017740,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017741,"byte_end":13017821,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017822,"byte_end":13017838,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017839,"byte_end":13017842,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017843,"byte_end":13017850,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017851,"byte_end":13017880,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017881,"byte_end":13017884,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017885,"byte_end":13017928,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017929,"byte_end":13017991,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017992,"byte_end":13017997,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13017998,"byte_end":13018001,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018002,"byte_end":13018020,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018021,"byte_end":13018042,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018043,"byte_end":13018085,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018086,"byte_end":13018089,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018090,"byte_end":13018123,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018124,"byte_end":13018171,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018172,"byte_end":13018206,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018207,"byte_end":13018218,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018219,"byte_end":13018222,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018223,"byte_end":13018300,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018301,"byte_end":13018304,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018305,"byte_end":13018347,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018348,"byte_end":13018384,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018385,"byte_end":13018390,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018391,"byte_end":13018398,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018399,"byte_end":13018402,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018403,"byte_end":13018467,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018468,"byte_end":13018532,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018533,"byte_end":13018595,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018596,"byte_end":13018666,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018667,"byte_end":13018732,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018733,"byte_end":13018743,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018744,"byte_end":13018747,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018748,"byte_end":13018764,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018765,"byte_end":13018768,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018769,"byte_end":13018776,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018777,"byte_end":13018820,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018821,"byte_end":13018872,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018873,"byte_end":13018878,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018879,"byte_end":13018882,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018883,"byte_end":13018901,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018902,"byte_end":13018923,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018924,"byte_end":13018975,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13018976,"byte_end":13019012,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019013,"byte_end":13019024,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019025,"byte_end":13019028,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019029,"byte_end":13019106,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019107,"byte_end":13019110,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019111,"byte_end":13019153,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019154,"byte_end":13019199,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019200,"byte_end":13019205,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019206,"byte_end":13019213,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019214,"byte_end":13019217,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019218,"byte_end":13019240,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019241,"byte_end":13019284,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019285,"byte_end":13019288,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019289,"byte_end":13019310,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019311,"byte_end":13019314,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019315,"byte_end":13019392,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019393,"byte_end":13019473,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019474,"byte_end":13019529,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019530,"byte_end":13019533,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019534,"byte_end":13019612,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019613,"byte_end":13019633,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019634,"byte_end":13019637,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019638,"byte_end":13019645,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019646,"byte_end":13019672,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019673,"byte_end":13019676,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019677,"byte_end":13019730,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019731,"byte_end":13019785,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019786,"byte_end":13019791,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019792,"byte_end":13019795,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019796,"byte_end":13019814,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019815,"byte_end":13019836,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019837,"byte_end":13019883,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019884,"byte_end":13019887,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019888,"byte_end":13019921,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019922,"byte_end":13019950,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13019951,"byte_end":13020003,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020004,"byte_end":13020048,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020049,"byte_end":13020062,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020063,"byte_end":13020074,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020075,"byte_end":13020078,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020079,"byte_end":13020126,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020127,"byte_end":13020165,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020166,"byte_end":13020175,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020176,"byte_end":13020181,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020182,"byte_end":13020189,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020190,"byte_end":13020193,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020194,"byte_end":13020274,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020275,"byte_end":13020352,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020353,"byte_end":13020426,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020427,"byte_end":13020502,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020503,"byte_end":13020516,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020517,"byte_end":13020520,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020521,"byte_end":13020596,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020597,"byte_end":13020676,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020677,"byte_end":13020755,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020756,"byte_end":13020835,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020836,"byte_end":13020916,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020917,"byte_end":13020982,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020983,"byte_end":13020986,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13020987,"byte_end":13021067,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021068,"byte_end":13021080,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021081,"byte_end":13021084,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021085,"byte_end":13021098,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021099,"byte_end":13021140,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021141,"byte_end":13021171,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021172,"byte_end":13021198,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021199,"byte_end":13021202,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021203,"byte_end":13021221,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021222,"byte_end":13021261,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021262,"byte_end":13021337,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021338,"byte_end":13021384,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021385,"byte_end":13021388,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021389,"byte_end":13021413,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021414,"byte_end":13021493,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021494,"byte_end":13021525,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021526,"byte_end":13021558,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021559,"byte_end":13021562,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021563,"byte_end":13021600,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021601,"byte_end":13021663,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021664,"byte_end":13021679,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021680,"byte_end":13021689,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021690,"byte_end":13021693,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021694,"byte_end":13021773,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021774,"byte_end":13021849,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021850,"byte_end":13021928,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021929,"byte_end":13021976,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021977,"byte_end":13021994,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021995,"byte_end":13021998,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13021999,"byte_end":13022046,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022047,"byte_end":13022088,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022089,"byte_end":13022098,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022099,"byte_end":13022102,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022103,"byte_end":13022117,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022118,"byte_end":13022123,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022124,"byte_end":13022131,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022132,"byte_end":13022135,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022136,"byte_end":13022211,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022212,"byte_end":13022287,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022288,"byte_end":13022367,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022368,"byte_end":13022433,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022434,"byte_end":13022511,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022512,"byte_end":13022515,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022516,"byte_end":13022594,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022595,"byte_end":13022675,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022676,"byte_end":13022721,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022722,"byte_end":13022725,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022726,"byte_end":13022733,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022734,"byte_end":13022771,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022772,"byte_end":13022799,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022800,"byte_end":13022803,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022804,"byte_end":13022822,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022823,"byte_end":13022841,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022842,"byte_end":13022885,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022886,"byte_end":13022891,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022892,"byte_end":13022895,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022896,"byte_end":13022914,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022915,"byte_end":13022936,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13022937,"byte_end":13023026,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023027,"byte_end":13023030,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023031,"byte_end":13023076,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023077,"byte_end":13023110,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023111,"byte_end":13023148,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023149,"byte_end":13023152,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023153,"byte_end":13023220,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023221,"byte_end":13023248,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023249,"byte_end":13023283,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023284,"byte_end":13023327,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023328,"byte_end":13023365,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023366,"byte_end":13023419,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023420,"byte_end":13023441,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023442,"byte_end":13023459,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023460,"byte_end":13023473,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023474,"byte_end":13023485,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023486,"byte_end":13023489,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023490,"byte_end":13023528,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023529,"byte_end":13023532,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023533,"byte_end":13023593,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023594,"byte_end":13023618,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023619,"byte_end":13023659,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023660,"byte_end":13023663,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023664,"byte_end":13023719,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023720,"byte_end":13023780,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023781,"byte_end":13023784,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023785,"byte_end":13023855,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023856,"byte_end":13023905,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023906,"byte_end":13023909,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023910,"byte_end":13023963,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023964,"byte_end":13023980,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023981,"byte_end":13023990,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023991,"byte_end":13023994,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13023995,"byte_end":13024036,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024037,"byte_end":13024088,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024089,"byte_end":13024128,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024129,"byte_end":13024138,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024139,"byte_end":13024144,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024145,"byte_end":13024152,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024153,"byte_end":13024156,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024157,"byte_end":13024173,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024174,"byte_end":13024177,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024178,"byte_end":13024204,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024205,"byte_end":13024208,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024209,"byte_end":13024276,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024277,"byte_end":13024349,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024350,"byte_end":13024423,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024424,"byte_end":13024477,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024478,"byte_end":13024481,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024482,"byte_end":13024562,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024563,"byte_end":13024585,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024586,"byte_end":13024589,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024590,"byte_end":13024605,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024606,"byte_end":13024609,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024610,"byte_end":13024617,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024618,"byte_end":13024649,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024650,"byte_end":13024653,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024654,"byte_end":13024672,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024673,"byte_end":13024694,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024695,"byte_end":13024746,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024747,"byte_end":13024784,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024785,"byte_end":13024788,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024789,"byte_end":13024822,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024823,"byte_end":13024877,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024878,"byte_end":13024932,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024933,"byte_end":13024944,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024945,"byte_end":13024948,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024949,"byte_end":13024982,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13024983,"byte_end":13025037,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025038,"byte_end":13025092,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025093,"byte_end":13025104,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025105,"byte_end":13025108,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025109,"byte_end":13025138,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025139,"byte_end":13025168,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025169,"byte_end":13025174,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025175,"byte_end":13025182,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025183,"byte_end":13025186,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025187,"byte_end":13025236,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025237,"byte_end":13025240,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025241,"byte_end":13025263,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025264,"byte_end":13025267,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025268,"byte_end":13025344,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025345,"byte_end":13025423,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025424,"byte_end":13025503,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025504,"byte_end":13025569,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025570,"byte_end":13025573,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025574,"byte_end":13025654,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025655,"byte_end":13025658,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025659,"byte_end":13025733,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025734,"byte_end":13025807,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025808,"byte_end":13025821,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025822,"byte_end":13025825,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025826,"byte_end":13025899,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025900,"byte_end":13025980,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13025981,"byte_end":13026056,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026057,"byte_end":13026060,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026061,"byte_end":13026068,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026069,"byte_end":13026096,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026097,"byte_end":13026144,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026145,"byte_end":13026148,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026149,"byte_end":13026165,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026166,"byte_end":13026169,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026170,"byte_end":13026212,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026213,"byte_end":13026232,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026233,"byte_end":13026259,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026260,"byte_end":13026265,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026266,"byte_end":13026269,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026270,"byte_end":13026287,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026288,"byte_end":13026345,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026346,"byte_end":13026404,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026405,"byte_end":13026457,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026458,"byte_end":13026467,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026468,"byte_end":13026473,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026474,"byte_end":13026477,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026478,"byte_end":13026513,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026514,"byte_end":13026542,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026543,"byte_end":13026548,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026549,"byte_end":13026552,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026553,"byte_end":13026571,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026572,"byte_end":13026593,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026594,"byte_end":13026637,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026638,"byte_end":13026703,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026704,"byte_end":13026707,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026708,"byte_end":13026786,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026787,"byte_end":13026841,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026842,"byte_end":13026845,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026846,"byte_end":13026890,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026891,"byte_end":13026924,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026925,"byte_end":13026943,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026944,"byte_end":13026993,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13026994,"byte_end":13027053,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027054,"byte_end":13027057,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027058,"byte_end":13027104,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027105,"byte_end":13027178,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027179,"byte_end":13027182,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027183,"byte_end":13027257,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027258,"byte_end":13027298,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027299,"byte_end":13027340,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027341,"byte_end":13027398,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027399,"byte_end":13027439,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027440,"byte_end":13027457,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027458,"byte_end":13027471,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027472,"byte_end":13027483,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027484,"byte_end":13027487,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027488,"byte_end":13027521,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027522,"byte_end":13027525,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027526,"byte_end":13027604,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027605,"byte_end":13027659,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027660,"byte_end":13027670,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027671,"byte_end":13027748,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027749,"byte_end":13027827,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027828,"byte_end":13027863,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027864,"byte_end":13027887,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027888,"byte_end":13027951,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027952,"byte_end":13027988,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027989,"byte_end":13027992,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13027993,"byte_end":13028043,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028044,"byte_end":13028123,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028124,"byte_end":13028199,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028200,"byte_end":13028253,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028254,"byte_end":13028300,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028301,"byte_end":13028333,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028334,"byte_end":13028337,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028338,"byte_end":13028385,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028386,"byte_end":13028437,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028438,"byte_end":13028441,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028442,"byte_end":13028492,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028493,"byte_end":13028564,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028565,"byte_end":13028600,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028601,"byte_end":13028604,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028605,"byte_end":13028627,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028628,"byte_end":13028664,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028665,"byte_end":13028708,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028709,"byte_end":13028773,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028774,"byte_end":13028831,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028832,"byte_end":13028835,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028836,"byte_end":13028891,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028892,"byte_end":13028946,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028947,"byte_end":13028950,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13028951,"byte_end":13029001,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029002,"byte_end":13029084,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029085,"byte_end":13029110,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029111,"byte_end":13029156,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029157,"byte_end":13029212,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029213,"byte_end":13029216,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029217,"byte_end":13029294,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029295,"byte_end":13029364,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029365,"byte_end":13029439,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029440,"byte_end":13029465,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029466,"byte_end":13029506,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029507,"byte_end":13029562,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029563,"byte_end":13029597,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029598,"byte_end":13029623,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029624,"byte_end":13029645,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029646,"byte_end":13029663,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029664,"byte_end":13029679,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029680,"byte_end":13029683,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029684,"byte_end":13029717,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029718,"byte_end":13029727,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029728,"byte_end":13029731,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029732,"byte_end":13029773,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029774,"byte_end":13029808,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029809,"byte_end":13029818,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029819,"byte_end":13029824,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029825,"byte_end":13029832,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029833,"byte_end":13029836,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029837,"byte_end":13029882,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029883,"byte_end":13029936,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029937,"byte_end":13029940,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029941,"byte_end":13029968,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029969,"byte_end":13029972,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13029973,"byte_end":13030047,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030048,"byte_end":13030122,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030123,"byte_end":13030193,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030194,"byte_end":13030244,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030245,"byte_end":13030248,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030249,"byte_end":13030326,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030327,"byte_end":13030404,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030405,"byte_end":13030408,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030409,"byte_end":13030486,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030487,"byte_end":13030542,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030543,"byte_end":13030546,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030547,"byte_end":13030626,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030627,"byte_end":13030705,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030706,"byte_end":13030731,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030732,"byte_end":13030735,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030736,"byte_end":13030811,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030812,"byte_end":13030888,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030889,"byte_end":13030956,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030957,"byte_end":13030960,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13030961,"byte_end":13031037,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031038,"byte_end":13031114,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031115,"byte_end":13031189,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031190,"byte_end":13031217,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031271,"byte_end":13031278,"line_start":432,"line_end":432,"column_start":13,"column_end":20},"name":"futures","qualname":"::sync::futures","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1130}],"decl_id":null,"docs":" Named future types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3349},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034060,"byte_end":13034067,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13032999,"byte_end":13033085,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033086,"byte_end":13033089,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033090,"byte_end":13033097,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033098,"byte_end":13033118,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033119,"byte_end":13033142,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033143,"byte_end":13033172,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033173,"byte_end":13033196,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033197,"byte_end":13033200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033201,"byte_end":13033246,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033247,"byte_end":13033292,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033293,"byte_end":13033313,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033314,"byte_end":13033346,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033347,"byte_end":13033401,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033402,"byte_end":13033447,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033448,"byte_end":13033494,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033495,"byte_end":13033531,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033532,"byte_end":13033577,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033578,"byte_end":13033613,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033614,"byte_end":13033637,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033638,"byte_end":13033650,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033651,"byte_end":13033656,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033657,"byte_end":13033660,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033661,"byte_end":13033734,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033735,"byte_end":13033763,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033764,"byte_end":13033791,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033792,"byte_end":13033840,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033841,"byte_end":13033877,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033878,"byte_end":13033907,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033908,"byte_end":13033917,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033918,"byte_end":13033923,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033924,"byte_end":13033927,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033928,"byte_end":13033983,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13033984,"byte_end":13034015,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034016,"byte_end":13034023,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034024,"byte_end":13034031,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034522,"byte_end":13034525,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034290,"byte_end":13034355,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034360,"byte_end":13034363,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034368,"byte_end":13034454,"line_start":56,"line_end":56,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034459,"byte_end":13034510,"line_start":57,"line_end":57,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035594,"byte_end":13035598,"line_start":87,"line_end":87,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035124,"byte_end":13035184,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035189,"byte_end":13035192,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035197,"byte_end":13035271,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035276,"byte_end":13035301,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035306,"byte_end":13035309,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035314,"byte_end":13035407,"line_start":84,"line_end":84,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035412,"byte_end":13035503,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13035508,"byte_end":13035576,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037508,"byte_end":13037525,"line_start":133,"line_end":133,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037374,"byte_end":13037472,"line_start":131,"line_end":131,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037765,"byte_end":13037774,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037563,"byte_end":13037626,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037631,"byte_end":13037634,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037639,"byte_end":13037727,"line_start":138,"line_end":138,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037732,"byte_end":13037753,"line_start":139,"line_end":139,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1219},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1246},{"krate":0,"index":1252},{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1306},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1320},{"krate":0,"index":1325},{"krate":0,"index":1331},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1348},{"krate":0,"index":1353}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13037816,"byte_end":13037896,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13037897,"byte_end":13037915,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13037916,"byte_end":13037919,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13037920,"byte_end":13037998,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13037999,"byte_end":13038074,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038075,"byte_end":13038153,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038154,"byte_end":13038208,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038209,"byte_end":13038212,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038213,"byte_end":13038289,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038290,"byte_end":13038370,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038371,"byte_end":13038448,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038449,"byte_end":13038499,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038500,"byte_end":13038503,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038504,"byte_end":13038582,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038583,"byte_end":13038640,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038641,"byte_end":13038644,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038645,"byte_end":13038723,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038724,"byte_end":13038796,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038797,"byte_end":13038813,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038814,"byte_end":13038817,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038818,"byte_end":13038832,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038833,"byte_end":13038836,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038837,"byte_end":13038917,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038918,"byte_end":13038997,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13038998,"byte_end":13039075,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039076,"byte_end":13039154,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039155,"byte_end":13039162,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039163,"byte_end":13039166,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039167,"byte_end":13039244,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039245,"byte_end":13039320,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039321,"byte_end":13039401,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039402,"byte_end":13039405,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039406,"byte_end":13039478,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039479,"byte_end":13039557,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039558,"byte_end":13039634,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039635,"byte_end":13039694,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039695,"byte_end":13039698,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039699,"byte_end":13039777,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039778,"byte_end":13039852,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039853,"byte_end":13039889,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039890,"byte_end":13039893,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039894,"byte_end":13039973,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13039974,"byte_end":13040051,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040052,"byte_end":13040127,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040128,"byte_end":13040159,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040160,"byte_end":13040163,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040164,"byte_end":13040178,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040179,"byte_end":13040182,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040183,"byte_end":13040258,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040259,"byte_end":13040337,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040338,"byte_end":13040415,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040416,"byte_end":13040447,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040448,"byte_end":13040451,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040452,"byte_end":13040498,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040499,"byte_end":13040567,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040568,"byte_end":13040618,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040619,"byte_end":13040667,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040668,"byte_end":13040743,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040744,"byte_end":13040819,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040820,"byte_end":13040872,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040873,"byte_end":13040876,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040877,"byte_end":13040891,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040892,"byte_end":13040895,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040896,"byte_end":13040911,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040912,"byte_end":13040915,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040916,"byte_end":13040923,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040924,"byte_end":13040955,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040956,"byte_end":13040959,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040960,"byte_end":13040978,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13040979,"byte_end":13041000,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041001,"byte_end":13041052,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041053,"byte_end":13041090,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041091,"byte_end":13041094,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041095,"byte_end":13041128,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041129,"byte_end":13041183,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041184,"byte_end":13041238,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041239,"byte_end":13041250,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041251,"byte_end":13041254,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041255,"byte_end":13041288,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041289,"byte_end":13041343,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041344,"byte_end":13041398,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041399,"byte_end":13041410,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041411,"byte_end":13041414,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041415,"byte_end":13041444,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041445,"byte_end":13041474,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041475,"byte_end":13041480,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041481,"byte_end":13041488,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041489,"byte_end":13041492,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041493,"byte_end":13041509,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041510,"byte_end":13041513,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041514,"byte_end":13041521,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041522,"byte_end":13041553,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041554,"byte_end":13041557,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041558,"byte_end":13041576,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041577,"byte_end":13041598,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041599,"byte_end":13041648,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041649,"byte_end":13041652,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041653,"byte_end":13041682,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041683,"byte_end":13041712,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041713,"byte_end":13041742,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041743,"byte_end":13041746,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041747,"byte_end":13041784,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041785,"byte_end":13041827,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041828,"byte_end":13041831,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041832,"byte_end":13041901,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041902,"byte_end":13041905,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041906,"byte_end":13041955,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13041956,"byte_end":13042005,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042006,"byte_end":13042011,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042012,"byte_end":13042019,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043216,"byte_end":13043222,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1214}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042423,"byte_end":13042469,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042470,"byte_end":13042473,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042474,"byte_end":13042534,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042535,"byte_end":13042562,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042563,"byte_end":13042566,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042567,"byte_end":13042581,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042582,"byte_end":13042585,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042586,"byte_end":13042593,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042594,"byte_end":13042625,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042626,"byte_end":13042629,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042630,"byte_end":13042648,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042649,"byte_end":13042670,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042671,"byte_end":13042722,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042723,"byte_end":13042760,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042761,"byte_end":13042764,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042765,"byte_end":13042798,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042799,"byte_end":13042853,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042854,"byte_end":13042908,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042909,"byte_end":13042920,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042921,"byte_end":13042924,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042925,"byte_end":13042958,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13042959,"byte_end":13043013,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043014,"byte_end":13043068,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043069,"byte_end":13043080,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043081,"byte_end":13043084,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043085,"byte_end":13043114,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043115,"byte_end":13043144,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043145,"byte_end":13043150,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043151,"byte_end":13043158,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043159,"byte_end":13043162,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043163,"byte_end":13043204,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044270,"byte_end":13044278,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043259,"byte_end":13043307,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043308,"byte_end":13043311,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043312,"byte_end":13043378,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043379,"byte_end":13043408,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043409,"byte_end":13043412,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043413,"byte_end":13043491,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043492,"byte_end":13043504,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043505,"byte_end":13043508,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043509,"byte_end":13043616,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043617,"byte_end":13043620,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043621,"byte_end":13043635,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043636,"byte_end":13043639,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043640,"byte_end":13043647,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043648,"byte_end":13043679,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043680,"byte_end":13043683,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043684,"byte_end":13043702,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043703,"byte_end":13043724,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043725,"byte_end":13043776,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043777,"byte_end":13043814,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043815,"byte_end":13043818,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043819,"byte_end":13043852,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043853,"byte_end":13043907,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043908,"byte_end":13043962,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043963,"byte_end":13043974,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043975,"byte_end":13043978,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13043979,"byte_end":13044012,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044013,"byte_end":13044067,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044068,"byte_end":13044122,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044123,"byte_end":13044134,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044135,"byte_end":13044138,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044139,"byte_end":13044168,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044169,"byte_end":13044198,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044199,"byte_end":13044204,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044205,"byte_end":13044212,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044213,"byte_end":13044216,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044217,"byte_end":13044258,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044427,"byte_end":13044432,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":1220},{"krate":0,"index":3368},{"krate":0,"index":3372},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":3375},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":3387},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":1231},{"krate":0,"index":1233}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044439,"byte_end":13044464,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044936,"byte_end":13044945,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044489,"byte_end":13044554,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044559,"byte_end":13044562,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044567,"byte_end":13044639,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044644,"byte_end":13044721,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044726,"byte_end":13044785,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044790,"byte_end":13044793,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044798,"byte_end":13044848,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044853,"byte_end":13044899,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044949,"byte_end":13044954,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":3368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3376},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045551,"byte_end":13045557,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":3375},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045446,"byte_end":13045521,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045530,"byte_end":13045542,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045783,"byte_end":13045789,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":3375},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045568,"byte_end":13045640,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045649,"byte_end":13045709,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045718,"byte_end":13045721,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045730,"byte_end":13045774,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045426,"byte_end":13045435,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3378}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045193,"byte_end":13045260,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045265,"byte_end":13045268,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045273,"byte_end":13045325,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045330,"byte_end":13045380,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3388},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046629,"byte_end":13046634,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046429,"byte_end":13046487,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046496,"byte_end":13046553,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046562,"byte_end":13046565,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046574,"byte_end":13046620,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046750,"byte_end":13046756,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046645,"byte_end":13046720,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046729,"byte_end":13046741,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13047029,"byte_end":13047035,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046767,"byte_end":13046841,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046850,"byte_end":13046918,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046927,"byte_end":13046955,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046964,"byte_end":13046967,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046976,"byte_end":13047020,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046406,"byte_end":13046418,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":3390},{"krate":0,"index":3392}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046161,"byte_end":13046232,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046237,"byte_end":13046240,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046245,"byte_end":13046305,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046310,"byte_end":13046360,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051246,"byte_end":13051253,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049620,"byte_end":13049696,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049697,"byte_end":13049746,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049747,"byte_end":13049750,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049751,"byte_end":13049820,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049821,"byte_end":13049871,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049872,"byte_end":13049875,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049876,"byte_end":13049950,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049951,"byte_end":13050026,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050027,"byte_end":13050095,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050096,"byte_end":13050099,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050100,"byte_end":13050176,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050177,"byte_end":13050258,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050259,"byte_end":13050298,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050299,"byte_end":13050302,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050303,"byte_end":13050349,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050350,"byte_end":13050418,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050419,"byte_end":13050469,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050470,"byte_end":13050522,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050523,"byte_end":13050582,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050583,"byte_end":13050642,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050643,"byte_end":13050646,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050647,"byte_end":13050661,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050662,"byte_end":13050665,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050666,"byte_end":13050673,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050674,"byte_end":13050705,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050706,"byte_end":13050709,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050710,"byte_end":13050728,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050729,"byte_end":13050750,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050751,"byte_end":13050802,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050803,"byte_end":13050840,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050841,"byte_end":13050844,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050845,"byte_end":13050878,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050879,"byte_end":13050933,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050934,"byte_end":13050988,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13050989,"byte_end":13051000,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051001,"byte_end":13051004,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051005,"byte_end":13051038,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051039,"byte_end":13051093,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051094,"byte_end":13051148,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051149,"byte_end":13051160,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051161,"byte_end":13051164,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051165,"byte_end":13051194,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051195,"byte_end":13051224,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051225,"byte_end":13051230,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13051231,"byte_end":13051238,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054305,"byte_end":13054309,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052455,"byte_end":13052529,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052534,"byte_end":13052570,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052575,"byte_end":13052578,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052583,"byte_end":13052658,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052663,"byte_end":13052729,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052734,"byte_end":13052785,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052790,"byte_end":13052793,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052798,"byte_end":13052810,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052815,"byte_end":13052818,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052823,"byte_end":13052897,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052902,"byte_end":13052978,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052983,"byte_end":13053036,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053041,"byte_end":13053044,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053049,"byte_end":13053059,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053064,"byte_end":13053067,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053072,"byte_end":13053144,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053149,"byte_end":13053224,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053229,"byte_end":13053290,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053295,"byte_end":13053298,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053303,"byte_end":13053376,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053381,"byte_end":13053446,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053451,"byte_end":13053469,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053474,"byte_end":13053477,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053482,"byte_end":13053532,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053537,"byte_end":13053597,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053602,"byte_end":13053605,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053610,"byte_end":13053624,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053629,"byte_end":13053632,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053637,"byte_end":13053644,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053649,"byte_end":13053680,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053685,"byte_end":13053688,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053693,"byte_end":13053711,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053716,"byte_end":13053737,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053742,"byte_end":13053793,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053798,"byte_end":13053835,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053840,"byte_end":13053843,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053848,"byte_end":13053881,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053886,"byte_end":13053940,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13053945,"byte_end":13053999,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054004,"byte_end":13054015,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054020,"byte_end":13054023,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054028,"byte_end":13054061,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054066,"byte_end":13054120,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054125,"byte_end":13054179,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054184,"byte_end":13054195,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054200,"byte_end":13054203,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054208,"byte_end":13054237,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054242,"byte_end":13054271,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054276,"byte_end":13054281,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054286,"byte_end":13054293,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055069,"byte_end":13055078,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054474,"byte_end":13054551,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054556,"byte_end":13054585,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054590,"byte_end":13054593,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054598,"byte_end":13054612,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054617,"byte_end":13054620,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054625,"byte_end":13054632,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054637,"byte_end":13054668,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054673,"byte_end":13054676,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054681,"byte_end":13054699,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054704,"byte_end":13054725,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054730,"byte_end":13054777,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054782,"byte_end":13054785,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054790,"byte_end":13054817,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054822,"byte_end":13054851,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054856,"byte_end":13054859,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054864,"byte_end":13054900,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054905,"byte_end":13054908,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054913,"byte_end":13054942,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054947,"byte_end":13054950,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13054955,"byte_end":13055000,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055005,"byte_end":13055035,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055040,"byte_end":13055045,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055050,"byte_end":13055057,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056337,"byte_end":13056351,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055185,"byte_end":13055227,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055232,"byte_end":13055235,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055240,"byte_end":13055316,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055321,"byte_end":13055394,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055399,"byte_end":13055419,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055424,"byte_end":13055427,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055432,"byte_end":13055442,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055447,"byte_end":13055450,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055455,"byte_end":13055525,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055530,"byte_end":13055598,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055603,"byte_end":13055616,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055621,"byte_end":13055624,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055629,"byte_end":13055681,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055686,"byte_end":13055736,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055741,"byte_end":13055787,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055792,"byte_end":13055852,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055857,"byte_end":13055905,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055910,"byte_end":13055913,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055918,"byte_end":13055932,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055937,"byte_end":13055940,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055945,"byte_end":13055952,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055957,"byte_end":13055988,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13055993,"byte_end":13055996,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056001,"byte_end":13056019,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056024,"byte_end":13056045,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056050,"byte_end":13056098,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056103,"byte_end":13056106,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056111,"byte_end":13056154,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056159,"byte_end":13056162,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056167,"byte_end":13056205,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056210,"byte_end":13056213,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056218,"byte_end":13056261,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056266,"byte_end":13056269,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056274,"byte_end":13056303,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056308,"byte_end":13056313,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13056318,"byte_end":13056325,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066198,"byte_end":13066202,"line_start":884,"line_end":884,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063686,"byte_end":13063732,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063737,"byte_end":13063740,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063745,"byte_end":13063813,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063818,"byte_end":13063850,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063855,"byte_end":13063858,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063863,"byte_end":13063933,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063938,"byte_end":13064012,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064017,"byte_end":13064020,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064025,"byte_end":13064101,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064106,"byte_end":13064182,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064187,"byte_end":13064255,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064260,"byte_end":13064333,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064338,"byte_end":13064407,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064412,"byte_end":13064457,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064462,"byte_end":13064465,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064470,"byte_end":13064489,"line_start":827,"line_end":827,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064494,"byte_end":13064497,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064502,"byte_end":13064569,"line_start":829,"line_end":829,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064574,"byte_end":13064643,"line_start":830,"line_end":830,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064648,"byte_end":13064724,"line_start":831,"line_end":831,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064729,"byte_end":13064741,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064746,"byte_end":13064749,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064754,"byte_end":13064804,"line_start":834,"line_end":834,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064809,"byte_end":13064861,"line_start":835,"line_end":835,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064866,"byte_end":13064869,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064874,"byte_end":13064888,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064893,"byte_end":13064896,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064901,"byte_end":13064908,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064913,"byte_end":13064944,"line_start":840,"line_end":840,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064949,"byte_end":13064952,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064957,"byte_end":13064975,"line_start":842,"line_end":842,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13064980,"byte_end":13065001,"line_start":843,"line_end":843,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065006,"byte_end":13065057,"line_start":844,"line_end":844,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065062,"byte_end":13065099,"line_start":845,"line_end":845,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065104,"byte_end":13065107,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065112,"byte_end":13065145,"line_start":847,"line_end":847,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065150,"byte_end":13065204,"line_start":848,"line_end":848,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065209,"byte_end":13065263,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065268,"byte_end":13065279,"line_start":850,"line_end":850,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065284,"byte_end":13065287,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065292,"byte_end":13065325,"line_start":852,"line_end":852,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065330,"byte_end":13065384,"line_start":853,"line_end":853,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065389,"byte_end":13065443,"line_start":854,"line_end":854,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065448,"byte_end":13065459,"line_start":855,"line_end":855,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065464,"byte_end":13065467,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065472,"byte_end":13065501,"line_start":857,"line_end":857,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065506,"byte_end":13065535,"line_start":858,"line_end":858,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065540,"byte_end":13065545,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065550,"byte_end":13065557,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065562,"byte_end":13065565,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065570,"byte_end":13065586,"line_start":862,"line_end":862,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065591,"byte_end":13065594,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065599,"byte_end":13065606,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065611,"byte_end":13065642,"line_start":865,"line_end":865,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065647,"byte_end":13065650,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065655,"byte_end":13065673,"line_start":867,"line_end":867,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065678,"byte_end":13065699,"line_start":868,"line_end":868,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065704,"byte_end":13065753,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065758,"byte_end":13065761,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065766,"byte_end":13065795,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065800,"byte_end":13065829,"line_start":872,"line_end":872,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065834,"byte_end":13065863,"line_start":873,"line_end":873,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065868,"byte_end":13065871,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065876,"byte_end":13065913,"line_start":875,"line_end":875,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065918,"byte_end":13065960,"line_start":876,"line_end":876,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065965,"byte_end":13065968,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13065973,"byte_end":13066042,"line_start":878,"line_end":878,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066047,"byte_end":13066050,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066055,"byte_end":13066104,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066109,"byte_end":13066158,"line_start":881,"line_end":881,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066163,"byte_end":13066168,"line_start":882,"line_end":882,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066173,"byte_end":13066180,"line_start":883,"line_end":883,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067963,"byte_end":13067971,"line_start":929,"line_end":929,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066304,"byte_end":13066377,"line_start":889,"line_end":889,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066382,"byte_end":13066385,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066390,"byte_end":13066462,"line_start":891,"line_end":891,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066467,"byte_end":13066491,"line_start":892,"line_end":892,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066496,"byte_end":13066499,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066504,"byte_end":13066584,"line_start":894,"line_end":894,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066589,"byte_end":13066663,"line_start":895,"line_end":895,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066668,"byte_end":13066671,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066676,"byte_end":13066749,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066754,"byte_end":13066828,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066833,"byte_end":13066836,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066841,"byte_end":13066917,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13066922,"byte_end":13066998,"line_start":901,"line_end":901,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067003,"byte_end":13067074,"line_start":902,"line_end":902,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067079,"byte_end":13067152,"line_start":903,"line_end":903,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067157,"byte_end":13067230,"line_start":904,"line_end":904,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067235,"byte_end":13067306,"line_start":905,"line_end":905,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067311,"byte_end":13067363,"line_start":906,"line_end":906,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067368,"byte_end":13067371,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067376,"byte_end":13067428,"line_start":908,"line_end":908,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067433,"byte_end":13067493,"line_start":909,"line_end":909,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067498,"byte_end":13067548,"line_start":910,"line_end":910,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067553,"byte_end":13067556,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067561,"byte_end":13067575,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067580,"byte_end":13067583,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067588,"byte_end":13067595,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067600,"byte_end":13067631,"line_start":915,"line_end":915,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067636,"byte_end":13067639,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067644,"byte_end":13067662,"line_start":917,"line_end":917,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067667,"byte_end":13067688,"line_start":918,"line_end":918,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067693,"byte_end":13067743,"line_start":919,"line_end":919,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067748,"byte_end":13067751,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067756,"byte_end":13067796,"line_start":921,"line_end":921,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067801,"byte_end":13067804,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067809,"byte_end":13067838,"line_start":923,"line_end":923,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067843,"byte_end":13067846,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067851,"byte_end":13067894,"line_start":925,"line_end":925,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067899,"byte_end":13067929,"line_start":926,"line_end":926,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067934,"byte_end":13067939,"line_start":927,"line_end":927,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13067944,"byte_end":13067951,"line_start":928,"line_end":928,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1453},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1783},{"krate":0,"index":1862},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1974}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072244,"byte_end":13072314,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072315,"byte_end":13072338,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072339,"byte_end":13072342,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072343,"byte_end":13072423,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072424,"byte_end":13072502,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072503,"byte_end":13072579,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072580,"byte_end":13072659,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072660,"byte_end":13072740,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072741,"byte_end":13072812,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072813,"byte_end":13072835,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072836,"byte_end":13072839,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072840,"byte_end":13072917,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072918,"byte_end":13072989,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13072990,"byte_end":13073055,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073056,"byte_end":13073140,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073141,"byte_end":13073219,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073220,"byte_end":13073297,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073298,"byte_end":13073376,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073377,"byte_end":13073456,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073457,"byte_end":13073474,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073475,"byte_end":13073478,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073479,"byte_end":13073482,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073483,"byte_end":13073502,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073503,"byte_end":13073506,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073507,"byte_end":13073573,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073574,"byte_end":13073654,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073655,"byte_end":13073732,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073733,"byte_end":13073736,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073737,"byte_end":13073807,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073808,"byte_end":13073887,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073888,"byte_end":13073911,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073912,"byte_end":13073915,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073916,"byte_end":13073936,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073937,"byte_end":13073940,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13073941,"byte_end":13074021,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074022,"byte_end":13074102,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074103,"byte_end":13074181,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074182,"byte_end":13074254,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074255,"byte_end":13074329,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074330,"byte_end":13074342,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074343,"byte_end":13074346,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074347,"byte_end":13074394,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074395,"byte_end":13074398,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074399,"byte_end":13074480,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074481,"byte_end":13074516,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074517,"byte_end":13074520,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074521,"byte_end":13074601,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074602,"byte_end":13074683,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074684,"byte_end":13074758,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074759,"byte_end":13074840,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074841,"byte_end":13074886,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074887,"byte_end":13074890,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074891,"byte_end":13074971,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13074972,"byte_end":13075050,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075051,"byte_end":13075117,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075118,"byte_end":13075200,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075201,"byte_end":13075265,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075266,"byte_end":13075269,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075270,"byte_end":13075311,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075312,"byte_end":13075357,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075358,"byte_end":13075411,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075412,"byte_end":13075467,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075468,"byte_end":13075531,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075532,"byte_end":13075597,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075598,"byte_end":13075657,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075658,"byte_end":13075721,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075722,"byte_end":13075782,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075783,"byte_end":13075828,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13075829,"byte_end":13075919,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090085,"byte_end":13090091,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1486}],"decl_id":null,"docs":" Sends values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends values to the associated `Receiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089745,"byte_end":13089791,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089792,"byte_end":13089795,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089796,"byte_end":13089859,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089860,"byte_end":13089863,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To convert the `Sender` into a `Sink` or use it in a poll function, you can","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089864,"byte_end":13089943,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ use the [`PollSender`] utility.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089944,"byte_end":13089979,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089980,"byte_end":13089983,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13089984,"byte_end":13090073,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090467,"byte_end":13090473,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":1490}],"decl_id":null,"docs":" Permits to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permits to send one value into the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090134,"byte_end":13090181,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090182,"byte_end":13090185,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090186,"byte_end":13090273,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090274,"byte_end":13090357,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090358,"byte_end":13090361,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090362,"byte_end":13090404,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090405,"byte_end":13090455,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091042,"byte_end":13091053,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":1493}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090524,"byte_end":13090576,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090577,"byte_end":13090580,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090581,"byte_end":13090658,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090659,"byte_end":13090688,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090689,"byte_end":13090692,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090693,"byte_end":13090765,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090766,"byte_end":13090844,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090845,"byte_end":13090885,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090886,"byte_end":13090889,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090890,"byte_end":13090912,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090913,"byte_end":13090967,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13090968,"byte_end":13091030,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091421,"byte_end":13091429,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1496}],"decl_id":null,"docs":" Receives values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receives values from the associated `Sender`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091104,"byte_end":13091153,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091154,"byte_end":13091157,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091158,"byte_end":13091221,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091222,"byte_end":13091225,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091226,"byte_end":13091299,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091300,"byte_end":13091303,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091304,"byte_end":13091409,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092879,"byte_end":13092886,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091502,"byte_end":13091581,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091582,"byte_end":13091604,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091605,"byte_end":13091608,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091609,"byte_end":13091685,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to send new messages will wait until a message is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091686,"byte_end":13091764,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091765,"byte_end":13091844,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091845,"byte_end":13091848,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091849,"byte_end":13091926,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091927,"byte_end":13091952,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091953,"byte_end":13091956,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13091957,"byte_end":13092036,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092037,"byte_end":13092085,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092086,"byte_end":13092089,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092090,"byte_end":13092169,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092170,"byte_end":13092245,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092246,"byte_end":13092305,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092306,"byte_end":13092309,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092310,"byte_end":13092322,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092323,"byte_end":13092326,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092327,"byte_end":13092366,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092367,"byte_end":13092370,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092371,"byte_end":13092385,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092386,"byte_end":13092389,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092390,"byte_end":13092401,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092402,"byte_end":13092428,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092429,"byte_end":13092432,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092433,"byte_end":13092451,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092452,"byte_end":13092473,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092474,"byte_end":13092520,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092521,"byte_end":13092524,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092525,"byte_end":13092558,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092559,"byte_end":13092587,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092588,"byte_end":13092638,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092639,"byte_end":13092688,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092689,"byte_end":13092716,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092717,"byte_end":13092734,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092735,"byte_end":13092748,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092749,"byte_end":13092760,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092761,"byte_end":13092764,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092765,"byte_end":13092810,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092811,"byte_end":13092847,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092848,"byte_end":13092857,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092858,"byte_end":13092863,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13092864,"byte_end":13092871,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095517,"byte_end":13095521,"line_start":185,"line_end":185,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093486,"byte_end":13093532,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093537,"byte_end":13093540,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093545,"byte_end":13093620,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093625,"byte_end":13093698,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093703,"byte_end":13093779,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093784,"byte_end":13093859,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093864,"byte_end":13093867,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093872,"byte_end":13093945,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093950,"byte_end":13094024,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.  Note that if [`close`] is called, but there are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094029,"byte_end":13094104,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ still outstanding [`Permits`] from before it was closed, the channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094109,"byte_end":13094184,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ not considered closed by `recv` until the permits are released.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094189,"byte_end":13094256,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094261,"byte_end":13094264,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094269,"byte_end":13094288,"line_start":141,"line_end":141,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094293,"byte_end":13094296,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094301,"byte_end":13094368,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094373,"byte_end":13094442,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094447,"byte_end":13094523,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094528,"byte_end":13094540,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094545,"byte_end":13094548,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094553,"byte_end":13094579,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094584,"byte_end":13094633,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094638,"byte_end":13094641,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094646,"byte_end":13094660,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094665,"byte_end":13094668,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094673,"byte_end":13094680,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094685,"byte_end":13094711,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094716,"byte_end":13094719,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094724,"byte_end":13094742,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094747,"byte_end":13094768,"line_start":157,"line_end":157,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094773,"byte_end":13094819,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094824,"byte_end":13094827,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094832,"byte_end":13094865,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094870,"byte_end":13094914,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094919,"byte_end":13094930,"line_start":162,"line_end":162,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094935,"byte_end":13094938,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094943,"byte_end":13094994,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13094999,"byte_end":13095041,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095046,"byte_end":13095051,"line_start":166,"line_end":166,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095056,"byte_end":13095063,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095068,"byte_end":13095071,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095076,"byte_end":13095100,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095105,"byte_end":13095108,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095113,"byte_end":13095120,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095125,"byte_end":13095151,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095156,"byte_end":13095159,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095164,"byte_end":13095182,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095187,"byte_end":13095208,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095213,"byte_end":13095259,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095264,"byte_end":13095267,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095272,"byte_end":13095312,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095317,"byte_end":13095357,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095362,"byte_end":13095365,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095370,"byte_end":13095421,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095426,"byte_end":13095477,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095482,"byte_end":13095487,"line_start":183,"line_end":183,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095492,"byte_end":13095499,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097124,"byte_end":13097132,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095642,"byte_end":13095696,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095701,"byte_end":13095704,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095709,"byte_end":13095780,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095785,"byte_end":13095851,"line_start":193,"line_end":193,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095856,"byte_end":13095859,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095864,"byte_end":13095932,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13095937,"byte_end":13096010,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096015,"byte_end":13096018,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096023,"byte_end":13096092,"line_start":198,"line_end":198,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096097,"byte_end":13096128,"line_start":199,"line_end":199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096133,"byte_end":13096136,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096141,"byte_end":13096201,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096206,"byte_end":13096280,"line_start":202,"line_end":202,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096285,"byte_end":13096319,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096324,"byte_end":13096364,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096369,"byte_end":13096409,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096414,"byte_end":13096417,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096422,"byte_end":13096436,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096441,"byte_end":13096444,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096449,"byte_end":13096456,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096461,"byte_end":13096487,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096492,"byte_end":13096539,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096544,"byte_end":13096547,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096552,"byte_end":13096570,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096575,"byte_end":13096596,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096601,"byte_end":13096647,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096652,"byte_end":13096655,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096660,"byte_end":13096700,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096705,"byte_end":13096708,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096713,"byte_end":13096760,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096765,"byte_end":13096825,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096830,"byte_end":13096833,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096838,"byte_end":13096878,"line_start":222,"line_end":222,"column_start":5,"column_end":45}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096883,"byte_end":13096936,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096941,"byte_end":13096958,"line_start":224,"line_end":224,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096963,"byte_end":13096966,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13096971,"byte_end":13097018,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097023,"byte_end":13097090,"line_start":227,"line_end":227,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097095,"byte_end":13097100,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097105,"byte_end":13097112,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099156,"byte_end":13099169,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097213,"byte_end":13097275,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097280,"byte_end":13097283,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097288,"byte_end":13097363,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097368,"byte_end":13097441,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097446,"byte_end":13097522,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097527,"byte_end":13097602,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097607,"byte_end":13097610,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097615,"byte_end":13097688,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097693,"byte_end":13097767,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097772,"byte_end":13097798,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097803,"byte_end":13097806,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097811,"byte_end":13097879,"line_start":245,"line_end":245,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097884,"byte_end":13097959,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13097964,"byte_end":13098019,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098024,"byte_end":13098027,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098032,"byte_end":13098101,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098106,"byte_end":13098178,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098183,"byte_end":13098244,"line_start":251,"line_end":251,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098249,"byte_end":13098252,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098257,"byte_end":13098283,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098288,"byte_end":13098337,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098342,"byte_end":13098408,"line_start":255,"line_end":255,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098413,"byte_end":13098416,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098421,"byte_end":13098433,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098438,"byte_end":13098441,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098446,"byte_end":13098513,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098518,"byte_end":13098530,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098535,"byte_end":13098538,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098543,"byte_end":13098557,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098562,"byte_end":13098565,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098570,"byte_end":13098577,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098582,"byte_end":13098602,"line_start":265,"line_end":265,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098607,"byte_end":13098639,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098644,"byte_end":13098670,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098675,"byte_end":13098678,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098683,"byte_end":13098698,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098703,"byte_end":13098754,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098759,"byte_end":13098762,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098767,"byte_end":13098814,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098819,"byte_end":13098872,"line_start":273,"line_end":273,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098877,"byte_end":13098888,"line_start":274,"line_end":274,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098893,"byte_end":13098896,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098901,"byte_end":13098923,"line_start":276,"line_end":276,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098928,"byte_end":13098949,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098954,"byte_end":13098988,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13098993,"byte_end":13099035,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099040,"byte_end":13099055,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099060,"byte_end":13099093,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099098,"byte_end":13099103,"line_start":282,"line_end":282,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099108,"byte_end":13099115,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099120,"byte_end":13099144,"line_start":284,"line_end":284,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100580,"byte_end":13100585,"line_start":329,"line_end":329,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099252,"byte_end":13099315,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099320,"byte_end":13099323,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099328,"byte_end":13099403,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099408,"byte_end":13099480,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099485,"byte_end":13099555,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099560,"byte_end":13099563,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099568,"byte_end":13099639,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099644,"byte_end":13099710,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099715,"byte_end":13099791,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099796,"byte_end":13099843,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099848,"byte_end":13099851,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099856,"byte_end":13099878,"line_start":300,"line_end":300,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099883,"byte_end":13099915,"line_start":301,"line_end":301,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099920,"byte_end":13099923,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099928,"byte_end":13099942,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099947,"byte_end":13099950,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099955,"byte_end":13099962,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099967,"byte_end":13099993,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13099998,"byte_end":13100001,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100006,"byte_end":13100024,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100029,"byte_end":13100050,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100055,"byte_end":13100100,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100105,"byte_end":13100108,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100113,"byte_end":13100146,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100151,"byte_end":13100177,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100182,"byte_end":13100237,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100242,"byte_end":13100273,"line_start":315,"line_end":315,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100278,"byte_end":13100301,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100306,"byte_end":13100319,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100324,"byte_end":13100335,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100340,"byte_end":13100343,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100348,"byte_end":13100367,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100372,"byte_end":13100375,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100380,"byte_end":13100427,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100432,"byte_end":13100468,"line_start":323,"line_end":323,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100473,"byte_end":13100482,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100487,"byte_end":13100490,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100495,"byte_end":13100546,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100551,"byte_end":13100556,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100561,"byte_end":13100568,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101809,"byte_end":13101818,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100637,"byte_end":13100691,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100696,"byte_end":13100699,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100704,"byte_end":13100728,"line_start":335,"line_end":335,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100733,"byte_end":13100736,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100741,"byte_end":13100815,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100820,"byte_end":13100868,"line_start":338,"line_end":338,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100873,"byte_end":13100935,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13100940,"byte_end":13101014,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101019,"byte_end":13101071,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101076,"byte_end":13101079,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101084,"byte_end":13101156,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101161,"byte_end":13101237,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101242,"byte_end":13101318,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101323,"byte_end":13101394,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101399,"byte_end":13101448,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101453,"byte_end":13101456,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101461,"byte_end":13101535,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101540,"byte_end":13101612,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101617,"byte_end":13101690,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101695,"byte_end":13101771,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101776,"byte_end":13101797,"line_start":353,"line_end":353,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104365,"byte_end":13104369,"line_start":429,"line_end":429,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102274,"byte_end":13102325,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102330,"byte_end":13102333,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102338,"byte_end":13102414,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102419,"byte_end":13102495,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102500,"byte_end":13102574,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102579,"byte_end":13102654,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102659,"byte_end":13102728,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102733,"byte_end":13102805,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102810,"byte_end":13102841,"line_start":382,"line_end":382,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102846,"byte_end":13102849,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102854,"byte_end":13102866,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102871,"byte_end":13102874,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102879,"byte_end":13102952,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102957,"byte_end":13103031,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103036,"byte_end":13103096,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103101,"byte_end":13103104,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103109,"byte_end":13103139,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103144,"byte_end":13103170,"line_start":391,"line_end":391,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103175,"byte_end":13103178,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103183,"byte_end":13103202,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103207,"byte_end":13103210,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ If `send` is used as the event in a [`tokio::select!`](crate::select)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103215,"byte_end":13103288,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ statement and some other branch completes first, then it is guaranteed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103293,"byte_end":13103367,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ that the message was not sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103372,"byte_end":13103406,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103411,"byte_end":13103414,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103419,"byte_end":13103493,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103498,"byte_end":13103566,"line_start":400,"line_end":400,"column_start":5,"column_end":73}},{"value":"/ `send` makes you lose your place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103571,"byte_end":13103621,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103626,"byte_end":13103629,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103634,"byte_end":13103648,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103653,"byte_end":13103656,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103661,"byte_end":13103731,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103736,"byte_end":13103775,"line_start":406,"line_end":406,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103780,"byte_end":13103783,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103788,"byte_end":13103799,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103804,"byte_end":13103830,"line_start":409,"line_end":409,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103835,"byte_end":13103838,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103843,"byte_end":13103861,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103866,"byte_end":13103887,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103892,"byte_end":13103936,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103941,"byte_end":13103944,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103949,"byte_end":13103982,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13103987,"byte_end":13104015,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104020,"byte_end":13104070,"line_start":417,"line_end":417,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104075,"byte_end":13104124,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104129,"byte_end":13104156,"line_start":419,"line_end":419,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104161,"byte_end":13104178,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104183,"byte_end":13104196,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104201,"byte_end":13104212,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104217,"byte_end":13104220,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104225,"byte_end":13104270,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104275,"byte_end":13104311,"line_start":425,"line_end":425,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104316,"byte_end":13104325,"line_start":426,"line_end":426,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104330,"byte_end":13104335,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104340,"byte_end":13104347,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105696,"byte_end":13105702,"line_start":475,"line_end":475,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104621,"byte_end":13104665,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104670,"byte_end":13104673,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104678,"byte_end":13104753,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104758,"byte_end":13104813,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104818,"byte_end":13104821,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104826,"byte_end":13104845,"line_start":444,"line_end":444,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104850,"byte_end":13104853,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104858,"byte_end":13104933,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13104938,"byte_end":13105007,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105012,"byte_end":13105015,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105020,"byte_end":13105034,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105039,"byte_end":13105042,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105047,"byte_end":13105054,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105059,"byte_end":13105085,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105090,"byte_end":13105093,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105098,"byte_end":13105116,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105121,"byte_end":13105142,"line_start":455,"line_end":455,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105147,"byte_end":13105194,"line_start":456,"line_end":456,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105199,"byte_end":13105229,"line_start":457,"line_end":457,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105234,"byte_end":13105264,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105269,"byte_end":13105299,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105304,"byte_end":13105334,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105339,"byte_end":13105372,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105377,"byte_end":13105398,"line_start":462,"line_end":462,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105403,"byte_end":13105414,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105419,"byte_end":13105422,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105427,"byte_end":13105450,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105455,"byte_end":13105480,"line_start":466,"line_end":466,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105485,"byte_end":13105510,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105515,"byte_end":13105540,"line_start":468,"line_end":468,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105545,"byte_end":13105570,"line_start":469,"line_end":469,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105575,"byte_end":13105599,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105604,"byte_end":13105614,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105619,"byte_end":13105656,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105661,"byte_end":13105666,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105671,"byte_end":13105678,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107876,"byte_end":13107884,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105756,"byte_end":13105815,"line_start":479,"line_end":479,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105820,"byte_end":13105823,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105828,"byte_end":13105907,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105912,"byte_end":13105987,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13105992,"byte_end":13106070,"line_start":483,"line_end":483,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106075,"byte_end":13106117,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106122,"byte_end":13106125,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106130,"byte_end":13106142,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106147,"byte_end":13106150,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106155,"byte_end":13106226,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106231,"byte_end":13106307,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106312,"byte_end":13106334,"line_start":490,"line_end":490,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106339,"byte_end":13106342,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106347,"byte_end":13106420,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106425,"byte_end":13106499,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106504,"byte_end":13106564,"line_start":494,"line_end":494,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106569,"byte_end":13106572,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106577,"byte_end":13106603,"line_start":496,"line_end":496,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106608,"byte_end":13106632,"line_start":497,"line_end":497,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106637,"byte_end":13106667,"line_start":498,"line_end":498,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106672,"byte_end":13106675,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106680,"byte_end":13106694,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106699,"byte_end":13106702,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106707,"byte_end":13106714,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106719,"byte_end":13106745,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106750,"byte_end":13106753,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106758,"byte_end":13106776,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106781,"byte_end":13106802,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106807,"byte_end":13106853,"line_start":507,"line_end":507,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106858,"byte_end":13106903,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106908,"byte_end":13106938,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106943,"byte_end":13106946,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106951,"byte_end":13106984,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13106989,"byte_end":13107028,"line_start":512,"line_end":512,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107033,"byte_end":13107072,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107077,"byte_end":13107139,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107144,"byte_end":13107155,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107160,"byte_end":13107163,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107168,"byte_end":13107201,"line_start":517,"line_end":517,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107206,"byte_end":13107255,"line_start":518,"line_end":518,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107260,"byte_end":13107307,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107312,"byte_end":13107348,"line_start":520,"line_end":520,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107353,"byte_end":13107364,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107369,"byte_end":13107372,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107377,"byte_end":13107397,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107402,"byte_end":13107441,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107446,"byte_end":13107491,"line_start":525,"line_end":525,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107496,"byte_end":13107499,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107504,"byte_end":13107543,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107548,"byte_end":13107593,"line_start":528,"line_end":528,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107598,"byte_end":13107601,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107606,"byte_end":13107655,"line_start":530,"line_end":530,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107660,"byte_end":13107691,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107696,"byte_end":13107758,"line_start":532,"line_end":532,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107763,"byte_end":13107828,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107833,"byte_end":13107842,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107847,"byte_end":13107852,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13107857,"byte_end":13107864,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111550,"byte_end":13111563,"line_start":649,"line_end":649,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110478,"byte_end":13110537,"line_start":615,"line_end":615,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110542,"byte_end":13110545,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110550,"byte_end":13110618,"line_start":617,"line_end":617,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110623,"byte_end":13110691,"line_start":618,"line_end":618,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110696,"byte_end":13110763,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110768,"byte_end":13110771,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110776,"byte_end":13110844,"line_start":621,"line_end":621,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110849,"byte_end":13110852,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110857,"byte_end":13110869,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110874,"byte_end":13110877,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110882,"byte_end":13110949,"line_start":625,"line_end":625,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110954,"byte_end":13110966,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110971,"byte_end":13110974,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110979,"byte_end":13110993,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13110998,"byte_end":13111001,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111006,"byte_end":13111013,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111018,"byte_end":13111038,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111043,"byte_end":13111075,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111080,"byte_end":13111106,"line_start":633,"line_end":633,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111111,"byte_end":13111114,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111119,"byte_end":13111134,"line_start":635,"line_end":635,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111139,"byte_end":13111189,"line_start":636,"line_end":636,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111194,"byte_end":13111197,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111202,"byte_end":13111249,"line_start":638,"line_end":638,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111254,"byte_end":13111296,"line_start":639,"line_end":639,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111301,"byte_end":13111312,"line_start":640,"line_end":640,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111317,"byte_end":13111320,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111325,"byte_end":13111378,"line_start":642,"line_end":642,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111383,"byte_end":13111433,"line_start":643,"line_end":643,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111438,"byte_end":13111449,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111454,"byte_end":13111487,"line_start":645,"line_end":645,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111492,"byte_end":13111497,"line_start":646,"line_end":646,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111502,"byte_end":13111509,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111514,"byte_end":13111538,"line_start":648,"line_end":648,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112254,"byte_end":13112263,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111672,"byte_end":13111736,"line_start":653,"line_end":653,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111741,"byte_end":13111811,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111816,"byte_end":13111827,"line_start":655,"line_end":655,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111832,"byte_end":13111835,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111840,"byte_end":13111885,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111890,"byte_end":13111949,"line_start":658,"line_end":658,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111954,"byte_end":13111957,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111962,"byte_end":13111969,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13111974,"byte_end":13112030,"line_start":661,"line_end":661,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112035,"byte_end":13112064,"line_start":662,"line_end":662,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112069,"byte_end":13112072,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112077,"byte_end":13112102,"line_start":664,"line_end":664,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112107,"byte_end":13112137,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112142,"byte_end":13112145,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112150,"byte_end":13112163,"line_start":667,"line_end":667,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112168,"byte_end":13112196,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112201,"byte_end":13112230,"line_start":669,"line_end":669,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112235,"byte_end":13112242,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113905,"byte_end":13113912,"line_start":719,"line_end":719,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity. Once capacity to send one message is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112322,"byte_end":13112390,"line_start":675,"line_end":675,"column_start":5,"column_end":73}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112395,"byte_end":13112440,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112445,"byte_end":13112448,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112453,"byte_end":13112528,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112533,"byte_end":13112608,"line_start":679,"line_end":679,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112613,"byte_end":13112686,"line_start":680,"line_end":680,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112691,"byte_end":13112766,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112771,"byte_end":13112793,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112798,"byte_end":13112801,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112806,"byte_end":13112882,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112887,"byte_end":13112906,"line_start":685,"line_end":685,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112911,"byte_end":13112914,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112919,"byte_end":13112941,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112946,"byte_end":13112972,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112977,"byte_end":13112980,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13112985,"byte_end":13113004,"line_start":690,"line_end":690,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113009,"byte_end":13113012,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113017,"byte_end":13113091,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113096,"byte_end":13113164,"line_start":693,"line_end":693,"column_start":5,"column_end":73}},{"value":"/ `reserve` makes you lose your place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113169,"byte_end":13113222,"line_start":694,"line_end":694,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113227,"byte_end":13113230,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113235,"byte_end":13113249,"line_start":696,"line_end":696,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113254,"byte_end":13113257,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113262,"byte_end":13113269,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113274,"byte_end":13113300,"line_start":699,"line_end":699,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113305,"byte_end":13113308,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113313,"byte_end":13113331,"line_start":701,"line_end":701,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113336,"byte_end":13113357,"line_start":702,"line_end":702,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113362,"byte_end":13113406,"line_start":703,"line_end":703,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113411,"byte_end":13113414,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113419,"byte_end":13113446,"line_start":705,"line_end":705,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113451,"byte_end":13113500,"line_start":706,"line_end":706,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113505,"byte_end":13113508,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113513,"byte_end":13113579,"line_start":708,"line_end":708,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113584,"byte_end":13113614,"line_start":709,"line_end":709,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113619,"byte_end":13113662,"line_start":710,"line_end":710,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113667,"byte_end":13113670,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113675,"byte_end":13113716,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113721,"byte_end":13113746,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113751,"byte_end":13113754,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113759,"byte_end":13113810,"line_start":715,"line_end":715,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113815,"byte_end":13113865,"line_start":716,"line_end":716,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113870,"byte_end":13113875,"line_start":717,"line_end":717,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13113880,"byte_end":13113887,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117290,"byte_end":13117303,"line_start":804,"line_end":804,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114050,"byte_end":13114124,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114129,"byte_end":13114203,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114208,"byte_end":13114227,"line_start":726,"line_end":726,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114232,"byte_end":13114235,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114240,"byte_end":13114314,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114319,"byte_end":13114394,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114399,"byte_end":13114474,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114479,"byte_end":13114554,"line_start":731,"line_end":731,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114559,"byte_end":13114634,"line_start":732,"line_end":732,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114639,"byte_end":13114713,"line_start":733,"line_end":733,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114718,"byte_end":13114779,"line_start":734,"line_end":734,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114784,"byte_end":13114787,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114792,"byte_end":13114867,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114872,"byte_end":13114947,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13114952,"byte_end":13115025,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115030,"byte_end":13115103,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115108,"byte_end":13115143,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115148,"byte_end":13115151,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115156,"byte_end":13115227,"line_start":742,"line_end":742,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115232,"byte_end":13115265,"line_start":743,"line_end":743,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115270,"byte_end":13115273,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115278,"byte_end":13115297,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115302,"byte_end":13115305,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115310,"byte_end":13115384,"line_start":747,"line_end":747,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115389,"byte_end":13115457,"line_start":748,"line_end":748,"column_start":5,"column_end":73}},{"value":"/ `reserve_owned` makes you lose your place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115462,"byte_end":13115521,"line_start":749,"line_end":749,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115526,"byte_end":13115529,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115534,"byte_end":13115548,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115553,"byte_end":13115600,"line_start":752,"line_end":752,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115605,"byte_end":13115612,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115617,"byte_end":13115643,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115648,"byte_end":13115651,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115656,"byte_end":13115674,"line_start":756,"line_end":756,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115679,"byte_end":13115700,"line_start":757,"line_end":757,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115705,"byte_end":13115749,"line_start":758,"line_end":758,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115754,"byte_end":13115757,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115762,"byte_end":13115809,"line_start":760,"line_end":760,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115814,"byte_end":13115869,"line_start":761,"line_end":761,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115874,"byte_end":13115877,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115882,"byte_end":13115943,"line_start":763,"line_end":763,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115948,"byte_end":13115976,"line_start":764,"line_end":764,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13115981,"byte_end":13116015,"line_start":765,"line_end":765,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116020,"byte_end":13116023,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116028,"byte_end":13116080,"line_start":767,"line_end":767,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116085,"byte_end":13116135,"line_start":768,"line_end":768,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116140,"byte_end":13116143,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116148,"byte_end":13116192,"line_start":770,"line_end":770,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116197,"byte_end":13116233,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116238,"byte_end":13116243,"line_start":772,"line_end":772,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116248,"byte_end":13116255,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116260,"byte_end":13116263,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116268,"byte_end":13116344,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116349,"byte_end":13116425,"line_start":776,"line_end":776,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116430,"byte_end":13116433,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116438,"byte_end":13116445,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116450,"byte_end":13116476,"line_start":779,"line_end":779,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116481,"byte_end":13116484,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116489,"byte_end":13116507,"line_start":781,"line_end":781,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116512,"byte_end":13116533,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116538,"byte_end":13116582,"line_start":783,"line_end":783,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116587,"byte_end":13116590,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116595,"byte_end":13116644,"line_start":785,"line_end":785,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116649,"byte_end":13116712,"line_start":786,"line_end":786,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116717,"byte_end":13116720,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116725,"byte_end":13116791,"line_start":788,"line_end":788,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116796,"byte_end":13116826,"line_start":789,"line_end":789,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116831,"byte_end":13116874,"line_start":790,"line_end":790,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116879,"byte_end":13116882,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116887,"byte_end":13116929,"line_start":792,"line_end":792,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116934,"byte_end":13116959,"line_start":793,"line_end":793,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116964,"byte_end":13116967,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13116972,"byte_end":13117023,"line_start":795,"line_end":795,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117028,"byte_end":13117078,"line_start":796,"line_end":796,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117083,"byte_end":13117088,"line_start":797,"line_end":797,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117093,"byte_end":13117100,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117105,"byte_end":13117108,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117113,"byte_end":13117153,"line_start":800,"line_end":800,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117158,"byte_end":13117190,"line_start":801,"line_end":801,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117195,"byte_end":13117226,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117231,"byte_end":13117272,"line_start":803,"line_end":803,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119205,"byte_end":13119216,"line_start":861,"line_end":861,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117682,"byte_end":13117763,"line_start":818,"line_end":818,"column_start":5,"column_end":86}},{"value":"/ available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117768,"byte_end":13117782,"line_start":819,"line_end":819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117787,"byte_end":13117790,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117795,"byte_end":13117875,"line_start":821,"line_end":821,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117880,"byte_end":13117965,"line_start":822,"line_end":822,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13117970,"byte_end":13118052,"line_start":823,"line_end":823,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118057,"byte_end":13118131,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118136,"byte_end":13118139,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118144,"byte_end":13118220,"line_start":826,"line_end":826,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118225,"byte_end":13118244,"line_start":827,"line_end":827,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118249,"byte_end":13118252,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118257,"byte_end":13118279,"line_start":829,"line_end":829,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118284,"byte_end":13118310,"line_start":830,"line_end":830,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118315,"byte_end":13118347,"line_start":831,"line_end":831,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118352,"byte_end":13118355,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118360,"byte_end":13118374,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118379,"byte_end":13118382,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118387,"byte_end":13118394,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118399,"byte_end":13118425,"line_start":836,"line_end":836,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118430,"byte_end":13118433,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118438,"byte_end":13118456,"line_start":838,"line_end":838,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118461,"byte_end":13118482,"line_start":839,"line_end":839,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118487,"byte_end":13118531,"line_start":840,"line_end":840,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118536,"byte_end":13118539,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118544,"byte_end":13118571,"line_start":842,"line_end":842,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118576,"byte_end":13118623,"line_start":843,"line_end":843,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118628,"byte_end":13118631,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118636,"byte_end":13118702,"line_start":845,"line_end":845,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118707,"byte_end":13118737,"line_start":846,"line_end":846,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118742,"byte_end":13118785,"line_start":847,"line_end":847,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118790,"byte_end":13118793,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118798,"byte_end":13118862,"line_start":849,"line_end":849,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118867,"byte_end":13118912,"line_start":850,"line_end":850,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118917,"byte_end":13118960,"line_start":851,"line_end":851,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118965,"byte_end":13118968,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13118973,"byte_end":13119014,"line_start":853,"line_end":853,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119019,"byte_end":13119044,"line_start":854,"line_end":854,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119049,"byte_end":13119052,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119057,"byte_end":13119108,"line_start":856,"line_end":856,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119113,"byte_end":13119163,"line_start":857,"line_end":857,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119168,"byte_end":13119171,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119176,"byte_end":13119181,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119186,"byte_end":13119193,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121957,"byte_end":13121974,"line_start":926,"line_end":926,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119575,"byte_end":13119656,"line_start":871,"line_end":871,"column_start":5,"column_end":86}},{"value":"/ available, returning an owned permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119661,"byte_end":13119702,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119707,"byte_end":13119710,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119715,"byte_end":13119789,"line_start":874,"line_end":874,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119794,"byte_end":13119873,"line_start":875,"line_end":875,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119878,"byte_end":13119953,"line_start":876,"line_end":876,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13119958,"byte_end":13120034,"line_start":877,"line_end":877,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120039,"byte_end":13120114,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120119,"byte_end":13120193,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120198,"byte_end":13120263,"line_start":880,"line_end":880,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120268,"byte_end":13120271,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120276,"byte_end":13120348,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120353,"byte_end":13120428,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120433,"byte_end":13120506,"line_start":884,"line_end":884,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120511,"byte_end":13120584,"line_start":885,"line_end":885,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120589,"byte_end":13120665,"line_start":886,"line_end":886,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120670,"byte_end":13120745,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120750,"byte_end":13120787,"line_start":888,"line_end":888,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120792,"byte_end":13120795,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120800,"byte_end":13120885,"line_start":890,"line_end":890,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120890,"byte_end":13120909,"line_start":891,"line_end":891,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120914,"byte_end":13120917,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120922,"byte_end":13120954,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120959,"byte_end":13120990,"line_start":894,"line_end":894,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13120995,"byte_end":13121039,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121044,"byte_end":13121085,"line_start":896,"line_end":896,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121090,"byte_end":13121093,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121098,"byte_end":13121112,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121117,"byte_end":13121120,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121125,"byte_end":13121132,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121137,"byte_end":13121163,"line_start":901,"line_end":901,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121168,"byte_end":13121171,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121176,"byte_end":13121194,"line_start":903,"line_end":903,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121199,"byte_end":13121220,"line_start":904,"line_end":904,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121225,"byte_end":13121269,"line_start":905,"line_end":905,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121274,"byte_end":13121277,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121282,"byte_end":13121309,"line_start":907,"line_end":907,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121314,"byte_end":13121375,"line_start":908,"line_end":908,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121380,"byte_end":13121383,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121388,"byte_end":13121454,"line_start":910,"line_end":910,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121459,"byte_end":13121489,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121494,"byte_end":13121537,"line_start":912,"line_end":912,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121542,"byte_end":13121545,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121550,"byte_end":13121614,"line_start":914,"line_end":914,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121619,"byte_end":13121664,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121669,"byte_end":13121712,"line_start":916,"line_end":916,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121717,"byte_end":13121720,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121725,"byte_end":13121766,"line_start":918,"line_end":918,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121771,"byte_end":13121796,"line_start":919,"line_end":919,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121801,"byte_end":13121804,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121809,"byte_end":13121860,"line_start":921,"line_end":921,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121865,"byte_end":13121915,"line_start":922,"line_end":922,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121920,"byte_end":13121923,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121928,"byte_end":13121933,"line_start":924,"line_end":924,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13121938,"byte_end":13121945,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122741,"byte_end":13122753,"line_start":950,"line_end":950,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122370,"byte_end":13122427,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122432,"byte_end":13122435,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122440,"byte_end":13122454,"line_start":940,"line_end":940,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122459,"byte_end":13122462,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122467,"byte_end":13122474,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122479,"byte_end":13122534,"line_start":943,"line_end":943,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122539,"byte_end":13122565,"line_start":944,"line_end":944,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122570,"byte_end":13122605,"line_start":945,"line_end":945,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122610,"byte_end":13122613,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122618,"byte_end":13122675,"line_start":947,"line_end":947,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122680,"byte_end":13122717,"line_start":948,"line_end":948,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122722,"byte_end":13122729,"line_start":949,"line_end":949,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123796,"byte_end":13123804,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122840,"byte_end":13122888,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122893,"byte_end":13122896,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122901,"byte_end":13122993,"line_start":956,"line_end":956,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13122998,"byte_end":13123086,"line_start":957,"line_end":957,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123091,"byte_end":13123094,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123099,"byte_end":13123113,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123118,"byte_end":13123121,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123126,"byte_end":13123133,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123138,"byte_end":13123164,"line_start":962,"line_end":962,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123169,"byte_end":13123172,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123177,"byte_end":13123195,"line_start":964,"line_end":964,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123200,"byte_end":13123221,"line_start":965,"line_end":965,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123226,"byte_end":13123276,"line_start":966,"line_end":966,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123281,"byte_end":13123284,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123289,"byte_end":13123326,"line_start":968,"line_end":968,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123331,"byte_end":13123334,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123339,"byte_end":13123397,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123402,"byte_end":13123451,"line_start":971,"line_end":971,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123456,"byte_end":13123493,"line_start":972,"line_end":972,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123498,"byte_end":13123501,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the capacity by one.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123506,"byte_end":13123577,"line_start":974,"line_end":974,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123582,"byte_end":13123606,"line_start":975,"line_end":975,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123611,"byte_end":13123644,"line_start":976,"line_end":976,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123649,"byte_end":13123686,"line_start":977,"line_end":977,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123691,"byte_end":13123696,"line_start":978,"line_end":978,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123701,"byte_end":13123708,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123713,"byte_end":13123716,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123721,"byte_end":13123747,"line_start":981,"line_end":981,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123752,"byte_end":13123784,"line_start":982,"line_end":982,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125351,"byte_end":13125355,"line_start":1039,"line_end":1039,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124278,"byte_end":13124324,"line_start":1007,"line_end":1007,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124329,"byte_end":13124332,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124337,"byte_end":13124412,"line_start":1009,"line_end":1009,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124417,"byte_end":13124491,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124496,"byte_end":13124570,"line_start":1011,"line_end":1011,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124575,"byte_end":13124623,"line_start":1012,"line_end":1012,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124628,"byte_end":13124631,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124636,"byte_end":13124676,"line_start":1014,"line_end":1014,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124681,"byte_end":13124684,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124689,"byte_end":13124703,"line_start":1016,"line_end":1016,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124708,"byte_end":13124711,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124716,"byte_end":13124723,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124728,"byte_end":13124754,"line_start":1019,"line_end":1019,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124759,"byte_end":13124762,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124767,"byte_end":13124785,"line_start":1021,"line_end":1021,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124790,"byte_end":13124811,"line_start":1022,"line_end":1022,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124816,"byte_end":13124860,"line_start":1023,"line_end":1023,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124865,"byte_end":13124868,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124873,"byte_end":13124900,"line_start":1025,"line_end":1025,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124905,"byte_end":13124954,"line_start":1026,"line_end":1026,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124959,"byte_end":13124962,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124967,"byte_end":13125033,"line_start":1028,"line_end":1028,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125038,"byte_end":13125068,"line_start":1029,"line_end":1029,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125073,"byte_end":13125116,"line_start":1030,"line_end":1030,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125121,"byte_end":13125124,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125129,"byte_end":13125168,"line_start":1032,"line_end":1032,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125173,"byte_end":13125198,"line_start":1033,"line_end":1033,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125203,"byte_end":13125206,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125211,"byte_end":13125262,"line_start":1035,"line_end":1035,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125267,"byte_end":13125317,"line_start":1036,"line_end":1036,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125322,"byte_end":13125327,"line_start":1037,"line_end":1037,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125332,"byte_end":13125339,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127417,"byte_end":13127421,"line_start":1111,"line_end":1111,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126230,"byte_end":13126276,"line_start":1077,"line_end":1077,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126281,"byte_end":13126284,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126289,"byte_end":13126364,"line_start":1079,"line_end":1079,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126369,"byte_end":13126443,"line_start":1080,"line_end":1080,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126448,"byte_end":13126522,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126527,"byte_end":13126575,"line_start":1082,"line_end":1082,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126580,"byte_end":13126583,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126588,"byte_end":13126662,"line_start":1084,"line_end":1084,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126667,"byte_end":13126702,"line_start":1085,"line_end":1085,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126707,"byte_end":13126710,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126715,"byte_end":13126755,"line_start":1087,"line_end":1087,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126760,"byte_end":13126763,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126768,"byte_end":13126782,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126787,"byte_end":13126790,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126795,"byte_end":13126802,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126807,"byte_end":13126833,"line_start":1092,"line_end":1092,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126838,"byte_end":13126841,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126846,"byte_end":13126864,"line_start":1094,"line_end":1094,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126869,"byte_end":13126890,"line_start":1095,"line_end":1095,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126895,"byte_end":13126939,"line_start":1096,"line_end":1096,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126944,"byte_end":13126947,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126952,"byte_end":13126979,"line_start":1098,"line_end":1098,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126984,"byte_end":13127039,"line_start":1099,"line_end":1099,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127044,"byte_end":13127047,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127052,"byte_end":13127114,"line_start":1101,"line_end":1101,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127119,"byte_end":13127153,"line_start":1102,"line_end":1102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127158,"byte_end":13127161,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127166,"byte_end":13127217,"line_start":1104,"line_end":1104,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127222,"byte_end":13127272,"line_start":1105,"line_end":1105,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127277,"byte_end":13127280,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127285,"byte_end":13127342,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127347,"byte_end":13127383,"line_start":1108,"line_end":1108,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127388,"byte_end":13127393,"line_start":1109,"line_end":1109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127398,"byte_end":13127405,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128647,"byte_end":13128654,"line_start":1150,"line_end":1150,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Releases the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Releases the reserved capacity *without* sending a message, returning the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127674,"byte_end":13127751,"line_start":1120,"line_end":1120,"column_start":5,"column_end":82}},{"value":"/ [`Sender`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127756,"byte_end":13127771,"line_start":1121,"line_end":1121,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127776,"byte_end":13127779,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127784,"byte_end":13127798,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127803,"byte_end":13127806,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127811,"byte_end":13127818,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127823,"byte_end":13127849,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127854,"byte_end":13127857,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127862,"byte_end":13127880,"line_start":1128,"line_end":1128,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127885,"byte_end":13127906,"line_start":1129,"line_end":1129,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127911,"byte_end":13127951,"line_start":1130,"line_end":1130,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127956,"byte_end":13127959,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13127964,"byte_end":13128012,"line_start":1132,"line_end":1132,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128017,"byte_end":13128080,"line_start":1133,"line_end":1133,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128085,"byte_end":13128088,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128093,"byte_end":13128169,"line_start":1135,"line_end":1135,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128174,"byte_end":13128225,"line_start":1136,"line_end":1136,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128230,"byte_end":13128273,"line_start":1137,"line_end":1137,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128278,"byte_end":13128281,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128286,"byte_end":13128362,"line_start":1139,"line_end":1139,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128367,"byte_end":13128392,"line_start":1140,"line_end":1140,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128397,"byte_end":13128432,"line_start":1141,"line_end":1141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128437,"byte_end":13128440,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128445,"byte_end":13128502,"line_start":1143,"line_end":1143,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128507,"byte_end":13128543,"line_start":1144,"line_end":1144,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128548,"byte_end":13128578,"line_start":1145,"line_end":1145,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128583,"byte_end":13128588,"line_start":1146,"line_end":1146,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128593,"byte_end":13128600,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128605,"byte_end":13128608,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13128613,"byte_end":13128635,"line_start":1149,"line_end":1149,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13153978,"byte_end":13153993,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":1888}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13153820,"byte_end":13153874,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13153875,"byte_end":13153878,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13153879,"byte_end":13153911,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13153912,"byte_end":13153966,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154786,"byte_end":13154803,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":1897}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154410,"byte_end":13154467,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154468,"byte_end":13154471,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154472,"byte_end":13154504,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154505,"byte_end":13154559,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154560,"byte_end":13154563,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154564,"byte_end":13154646,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154647,"byte_end":13154650,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154651,"byte_end":13154774,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155635,"byte_end":13155652,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155102,"byte_end":13155178,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155179,"byte_end":13155210,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155211,"byte_end":13155214,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155215,"byte_end":13155295,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155296,"byte_end":13155375,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155376,"byte_end":13155389,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155390,"byte_end":13155393,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155394,"byte_end":13155473,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155474,"byte_end":13155550,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155551,"byte_end":13155627,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157415,"byte_end":13157419,"line_start":126,"line_end":126,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156061,"byte_end":13156107,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156112,"byte_end":13156115,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156120,"byte_end":13156192,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156197,"byte_end":13156251,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156256,"byte_end":13156259,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156264,"byte_end":13156283,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156288,"byte_end":13156291,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156296,"byte_end":13156363,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156368,"byte_end":13156437,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156442,"byte_end":13156518,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156523,"byte_end":13156535,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156540,"byte_end":13156543,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156548,"byte_end":13156562,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156567,"byte_end":13156570,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156575,"byte_end":13156582,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156587,"byte_end":13156613,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156618,"byte_end":13156621,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156626,"byte_end":13156644,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156649,"byte_end":13156670,"line_start":98,"line_end":98,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156675,"byte_end":13156728,"line_start":99,"line_end":99,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156733,"byte_end":13156736,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156741,"byte_end":13156774,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156779,"byte_end":13156817,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156822,"byte_end":13156833,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156838,"byte_end":13156841,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156846,"byte_end":13156897,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156902,"byte_end":13156944,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156949,"byte_end":13156954,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156959,"byte_end":13156966,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156971,"byte_end":13156974,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13156979,"byte_end":13157003,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157008,"byte_end":13157011,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157016,"byte_end":13157023,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157028,"byte_end":13157054,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157059,"byte_end":13157062,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157067,"byte_end":13157085,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157090,"byte_end":13157111,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157116,"byte_end":13157169,"line_start":117,"line_end":117,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157174,"byte_end":13157177,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157182,"byte_end":13157216,"line_start":119,"line_end":119,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157221,"byte_end":13157255,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157260,"byte_end":13157263,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157268,"byte_end":13157319,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157324,"byte_end":13157375,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157380,"byte_end":13157385,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157390,"byte_end":13157397,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159018,"byte_end":13159026,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157541,"byte_end":13157595,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157600,"byte_end":13157603,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157608,"byte_end":13157679,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157684,"byte_end":13157750,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157755,"byte_end":13157758,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157763,"byte_end":13157831,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157836,"byte_end":13157909,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157914,"byte_end":13157917,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157922,"byte_end":13157991,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13157996,"byte_end":13158027,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158032,"byte_end":13158035,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158040,"byte_end":13158100,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158105,"byte_end":13158179,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158184,"byte_end":13158218,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158223,"byte_end":13158263,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158268,"byte_end":13158308,"line_start":147,"line_end":147,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158313,"byte_end":13158316,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158321,"byte_end":13158335,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158340,"byte_end":13158343,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158348,"byte_end":13158355,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158360,"byte_end":13158386,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158391,"byte_end":13158438,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158443,"byte_end":13158446,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158451,"byte_end":13158469,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158474,"byte_end":13158495,"line_start":156,"line_end":156,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158500,"byte_end":13158553,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158558,"byte_end":13158561,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158566,"byte_end":13158600,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158605,"byte_end":13158608,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158613,"byte_end":13158660,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158665,"byte_end":13158725,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158730,"byte_end":13158733,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158738,"byte_end":13158772,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158777,"byte_end":13158830,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158835,"byte_end":13158852,"line_start":166,"line_end":166,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158857,"byte_end":13158860,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158865,"byte_end":13158912,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158917,"byte_end":13158984,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158989,"byte_end":13158994,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13158999,"byte_end":13159006,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159792,"byte_end":13159805,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159107,"byte_end":13159169,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159174,"byte_end":13159177,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159182,"byte_end":13159194,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159199,"byte_end":13159202,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159207,"byte_end":13159274,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159279,"byte_end":13159291,"line_start":181,"line_end":181,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159296,"byte_end":13159299,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159304,"byte_end":13159318,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159323,"byte_end":13159326,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159331,"byte_end":13159338,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159343,"byte_end":13159363,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159368,"byte_end":13159394,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159399,"byte_end":13159402,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159407,"byte_end":13159425,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159430,"byte_end":13159451,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159456,"byte_end":13159515,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159520,"byte_end":13159523,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159528,"byte_end":13159575,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159580,"byte_end":13159633,"line_start":194,"line_end":194,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159638,"byte_end":13159649,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159654,"byte_end":13159657,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159662,"byte_end":13159690,"line_start":197,"line_end":197,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159695,"byte_end":13159729,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159734,"byte_end":13159739,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159744,"byte_end":13159751,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159756,"byte_end":13159780,"line_start":201,"line_end":201,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160125,"byte_end":13160130,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159888,"byte_end":13159952,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159957,"byte_end":13159960,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13159965,"byte_end":13160040,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160045,"byte_end":13160113,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161354,"byte_end":13161363,"line_start":235,"line_end":235,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160182,"byte_end":13160236,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160241,"byte_end":13160244,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160249,"byte_end":13160273,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160278,"byte_end":13160281,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160286,"byte_end":13160360,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160365,"byte_end":13160413,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160418,"byte_end":13160480,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160485,"byte_end":13160559,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160564,"byte_end":13160616,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160621,"byte_end":13160624,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160629,"byte_end":13160701,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160706,"byte_end":13160782,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160787,"byte_end":13160863,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160868,"byte_end":13160939,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160944,"byte_end":13160993,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13160998,"byte_end":13161001,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161006,"byte_end":13161080,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161085,"byte_end":13161157,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161162,"byte_end":13161235,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161240,"byte_end":13161316,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161321,"byte_end":13161342,"line_start":234,"line_end":234,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162291,"byte_end":13162295,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161603,"byte_end":13161677,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161682,"byte_end":13161685,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161690,"byte_end":13161775,"line_start":247,"line_end":247,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161780,"byte_end":13161861,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161866,"byte_end":13161934,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161939,"byte_end":13161942,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161947,"byte_end":13162020,"line_start":251,"line_end":251,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162025,"byte_end":13162096,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162101,"byte_end":13162178,"line_start":253,"line_end":253,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162183,"byte_end":13162186,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162191,"byte_end":13162230,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13162235,"byte_end":13162279,"line_start":256,"line_end":256,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164418,"byte_end":13164424,"line_start":332,"line_end":332,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163333,"byte_end":13163377,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163382,"byte_end":13163385,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163390,"byte_end":13163465,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163470,"byte_end":13163525,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163530,"byte_end":13163533,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163538,"byte_end":13163557,"line_start":301,"line_end":301,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163562,"byte_end":13163565,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163570,"byte_end":13163645,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163650,"byte_end":13163719,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163724,"byte_end":13163727,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163732,"byte_end":13163746,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163751,"byte_end":13163754,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163759,"byte_end":13163766,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163771,"byte_end":13163797,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163802,"byte_end":13163805,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163810,"byte_end":13163828,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163833,"byte_end":13163854,"line_start":312,"line_end":312,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163859,"byte_end":13163915,"line_start":313,"line_end":313,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163920,"byte_end":13163950,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163955,"byte_end":13163985,"line_start":315,"line_end":315,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13163990,"byte_end":13164020,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164025,"byte_end":13164055,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164060,"byte_end":13164093,"line_start":318,"line_end":318,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164098,"byte_end":13164119,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164124,"byte_end":13164135,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164140,"byte_end":13164143,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164148,"byte_end":13164171,"line_start":322,"line_end":322,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164176,"byte_end":13164201,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164206,"byte_end":13164231,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164236,"byte_end":13164261,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164266,"byte_end":13164291,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164296,"byte_end":13164320,"line_start":327,"line_end":327,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164325,"byte_end":13164335,"line_start":328,"line_end":328,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164383,"byte_end":13164388,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164393,"byte_end":13164400,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165122,"byte_end":13165131,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164478,"byte_end":13164542,"line_start":336,"line_end":336,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164547,"byte_end":13164596,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164601,"byte_end":13164651,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164656,"byte_end":13164659,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164664,"byte_end":13164727,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164732,"byte_end":13164809,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164814,"byte_end":13164817,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164822,"byte_end":13164829,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164834,"byte_end":13164898,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164903,"byte_end":13164932,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164937,"byte_end":13164940,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164945,"byte_end":13164970,"line_start":347,"line_end":347,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13164975,"byte_end":13165005,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165010,"byte_end":13165013,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165018,"byte_end":13165031,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165036,"byte_end":13165064,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165069,"byte_end":13165098,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165103,"byte_end":13165110,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165579,"byte_end":13165591,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165190,"byte_end":13165247,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165252,"byte_end":13165255,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165260,"byte_end":13165274,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165279,"byte_end":13165282,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165287,"byte_end":13165294,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165299,"byte_end":13165363,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165368,"byte_end":13165394,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165399,"byte_end":13165434,"line_start":365,"line_end":365,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165439,"byte_end":13165442,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165447,"byte_end":13165513,"line_start":367,"line_end":367,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165518,"byte_end":13165555,"line_start":368,"line_end":368,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13165560,"byte_end":13165567,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":3403},{"krate":0,"index":3407},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":3410},{"krate":0,"index":3418},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":3421},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":3437},{"krate":0,"index":3440},{"krate":0,"index":1971},{"krate":0,"index":1973}],"decl_id":null,"docs":" Channel error types.\n","sig":null,"attributes":[{"value":"/ Channel error types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165676,"byte_end":13165700,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3403},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165804,"byte_end":13165813,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165740,"byte_end":13165775,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3406},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165817,"byte_end":13165822,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166366,"byte_end":13166370,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166234,"byte_end":13166302,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166307,"byte_end":13166361,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166471,"byte_end":13166477,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":3410},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166380,"byte_end":13166449,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166454,"byte_end":13166466,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166212,"byte_end":13166224,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3415}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166066,"byte_end":13166137,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166138,"byte_end":13166185,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167299,"byte_end":13167304,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3421},"children":[],"decl_id":null,"docs":" This **channel** is currently empty, but the **Sender**(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This **channel** is currently empty, but the **Sender**(s) have not yet","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167163,"byte_end":13167238,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167243,"byte_end":13167294,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167436,"byte_end":13167448,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::mpsc::error::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":3421},"children":[],"decl_id":null,"docs":" The **channel**'s sending half has become disconnected, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The **channel**'s sending half has become disconnected, and there will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167310,"byte_end":13167384,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ never be any more data received on it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167389,"byte_end":13167431,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3421},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167144,"byte_end":13167156,"line_start":58,"line_end":58,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"pub enum TryRecvError { Empty, Disconnected, }","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3424}],"decl_id":null,"docs":" Error returned by `try_recv`.\n","sig":null,"attributes":[{"value":"/ Error returned by `try_recv`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167056,"byte_end":13167089,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167968,"byte_end":13167977,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167815,"byte_end":13167848,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"deprecated(note = \"This type is unused because recv returns an Option.\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167881,"byte_end":13167956,"line_start":83,"line_end":83,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174065,"byte_end":13174070,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169402,"byte_end":13169440,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169441,"byte_end":13169444,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169445,"byte_end":13169513,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169514,"byte_end":13169590,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169591,"byte_end":13169647,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169648,"byte_end":13169651,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169652,"byte_end":13169693,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169694,"byte_end":13169697,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169698,"byte_end":13169778,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169779,"byte_end":13169845,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169846,"byte_end":13169849,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169850,"byte_end":13169924,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13169925,"byte_end":13170001,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170002,"byte_end":13170080,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170081,"byte_end":13170161,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170162,"byte_end":13170239,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170240,"byte_end":13170313,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170314,"byte_end":13170393,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170394,"byte_end":13170425,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170426,"byte_end":13170429,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170430,"byte_end":13170512,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170513,"byte_end":13170593,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170594,"byte_end":13170671,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170672,"byte_end":13170720,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170721,"byte_end":13170724,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170725,"byte_end":13170804,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170805,"byte_end":13170881,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170882,"byte_end":13170959,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170960,"byte_end":13170993,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170994,"byte_end":13170997,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13170998,"byte_end":13171073,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171074,"byte_end":13171152,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171153,"byte_end":13171195,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171196,"byte_end":13171199,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171200,"byte_end":13171227,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171228,"byte_end":13171276,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171277,"byte_end":13171355,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171356,"byte_end":13171359,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171360,"byte_end":13171375,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171376,"byte_end":13171379,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171380,"byte_end":13171398,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171399,"byte_end":13171426,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171427,"byte_end":13171450,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171451,"byte_end":13171454,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171455,"byte_end":13171473,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171474,"byte_end":13171495,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171496,"byte_end":13171540,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171541,"byte_end":13171580,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171581,"byte_end":13171584,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171585,"byte_end":13171618,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171619,"byte_end":13171665,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171666,"byte_end":13171689,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171690,"byte_end":13171701,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171702,"byte_end":13171705,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171706,"byte_end":13171748,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171749,"byte_end":13171768,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171769,"byte_end":13171774,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171775,"byte_end":13171782,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171783,"byte_end":13171786,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171787,"byte_end":13171790,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171791,"byte_end":13171809,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171810,"byte_end":13171837,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171838,"byte_end":13171861,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171862,"byte_end":13171865,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171866,"byte_end":13171884,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171885,"byte_end":13171906,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171907,"byte_end":13171951,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171952,"byte_end":13171955,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171956,"byte_end":13171979,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13171980,"byte_end":13172026,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172027,"byte_end":13172064,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172065,"byte_end":13172097,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172098,"byte_end":13172155,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172156,"byte_end":13172187,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172188,"byte_end":13172241,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172242,"byte_end":13172259,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172260,"byte_end":13172275,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172276,"byte_end":13172285,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172286,"byte_end":13172289,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172290,"byte_end":13172304,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172305,"byte_end":13172347,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172348,"byte_end":13172370,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172371,"byte_end":13172384,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172385,"byte_end":13172394,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172395,"byte_end":13172429,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172430,"byte_end":13172435,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172436,"byte_end":13172443,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172444,"byte_end":13172520,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172521,"byte_end":13172594,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172595,"byte_end":13172610,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172611,"byte_end":13172686,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172687,"byte_end":13172763,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172764,"byte_end":13172816,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172817,"byte_end":13172820,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172821,"byte_end":13172899,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172900,"byte_end":13172980,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13172981,"byte_end":13173057,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173058,"byte_end":13173138,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173139,"byte_end":13173219,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173220,"byte_end":13173294,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173295,"byte_end":13173371,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173372,"byte_end":13173452,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173453,"byte_end":13173522,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173523,"byte_end":13173526,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173527,"byte_end":13173606,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173607,"byte_end":13173686,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173687,"byte_end":13173765,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173766,"byte_end":13173827,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173828,"byte_end":13173831,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173832,"byte_end":13173859,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173860,"byte_end":13173897,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173898,"byte_end":13173932,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173933,"byte_end":13173982,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13173983,"byte_end":13174020,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174021,"byte_end":13174053,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174570,"byte_end":13174580,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":2012}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174138,"byte_end":13174217,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174218,"byte_end":13174240,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174241,"byte_end":13174244,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174245,"byte_end":13174324,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174325,"byte_end":13174400,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174401,"byte_end":13174434,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174435,"byte_end":13174438,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174439,"byte_end":13174517,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174518,"byte_end":13174558,"line_start":139,"line_end":139,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175368,"byte_end":13175383,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2015}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174625,"byte_end":13174663,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174664,"byte_end":13174667,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174668,"byte_end":13174749,"line_start":146,"line_end":146,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174750,"byte_end":13174830,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174831,"byte_end":13174905,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174906,"byte_end":13174967,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174968,"byte_end":13174971,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13174972,"byte_end":13175051,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175052,"byte_end":13175131,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175132,"byte_end":13175200,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175201,"byte_end":13175204,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175205,"byte_end":13175283,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175284,"byte_end":13175324,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175325,"byte_end":13175328,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175329,"byte_end":13175356,"line_start":158,"line_end":158,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175709,"byte_end":13175725,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175425,"byte_end":13175518,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175519,"byte_end":13175522,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175523,"byte_end":13175585,"line_start":165,"line_end":165,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175586,"byte_end":13175589,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175590,"byte_end":13175637,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13175638,"byte_end":13175697,"line_start":168,"line_end":168,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3442},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177126,"byte_end":13177138,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176537,"byte_end":13176610,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176611,"byte_end":13176647,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176648,"byte_end":13176651,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176652,"byte_end":13176730,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176731,"byte_end":13176734,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176735,"byte_end":13176812,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176813,"byte_end":13176840,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176841,"byte_end":13176844,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176845,"byte_end":13176922,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176923,"byte_end":13176944,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176945,"byte_end":13176948,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176949,"byte_end":13176989,"line_start":197,"line_end":197,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176990,"byte_end":13177042,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177043,"byte_end":13177097,"line_start":199,"line_end":199,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178365,"byte_end":13178368,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178162,"byte_end":13178220,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178225,"byte_end":13178228,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178233,"byte_end":13178247,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178252,"byte_end":13178255,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178260,"byte_end":13178267,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178272,"byte_end":13178299,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178304,"byte_end":13178307,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178312,"byte_end":13178341,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178346,"byte_end":13178353,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179745,"byte_end":13179749,"line_start":299,"line_end":299,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired.  When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179066,"byte_end":13179140,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired.  When the lock has been acquired, function returns a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179145,"byte_end":13179216,"line_start":277,"line_end":277,"column_start":5,"column_end":76}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179221,"byte_end":13179240,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179245,"byte_end":13179248,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179253,"byte_end":13179272,"line_start":280,"line_end":280,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179277,"byte_end":13179280,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179285,"byte_end":13179358,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock` makes you lose your place in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179363,"byte_end":13179439,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179444,"byte_end":13179458,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179463,"byte_end":13179466,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179471,"byte_end":13179485,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179490,"byte_end":13179493,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179498,"byte_end":13179505,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179510,"byte_end":13179537,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179542,"byte_end":13179545,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179550,"byte_end":13179568,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179573,"byte_end":13179594,"line_start":292,"line_end":292,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179599,"byte_end":13179633,"line_start":293,"line_end":293,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179638,"byte_end":13179641,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179646,"byte_end":13179685,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179690,"byte_end":13179705,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179710,"byte_end":13179715,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179720,"byte_end":13179727,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180729,"byte_end":13180742,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"blocking_lock","qualname":"<Mutex<T>>::blocking_lock","value":"pub fn blocking_lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking lock this mutex. When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Blocking lock this mutex. When the lock has been acquired, function returns a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179855,"byte_end":13179936,"line_start":304,"line_end":304,"column_start":5,"column_end":86}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179941,"byte_end":13179960,"line_start":305,"line_end":305,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179965,"byte_end":13179968,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13179973,"byte_end":13180024,"line_start":307,"line_end":307,"column_start":5,"column_end":56}},{"value":"/ need to use this mutex in asynchronous code as well as in synchronous code.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180029,"byte_end":13180108,"line_start":308,"line_end":308,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180113,"byte_end":13180116,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180121,"byte_end":13180135,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180140,"byte_end":13180143,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180148,"byte_end":13180155,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180160,"byte_end":13180183,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180188,"byte_end":13180215,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180220,"byte_end":13180223,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180228,"byte_end":13180246,"line_start":316,"line_end":316,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180251,"byte_end":13180272,"line_start":317,"line_end":317,"column_start":5,"column_end":26}},{"value":"/     let mutex =  Arc::new(Mutex::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180277,"byte_end":13180322,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180327,"byte_end":13180330,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     let mutex1 = Arc::clone(&mutex);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180335,"byte_end":13180375,"line_start":320,"line_end":320,"column_start":5,"column_end":45}},{"value":"/     let sync_code = tokio::task::spawn_blocking(move || {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180380,"byte_end":13180441,"line_start":321,"line_end":321,"column_start":5,"column_end":66}},{"value":"/         let mut n = mutex1.blocking_lock();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180446,"byte_end":13180493,"line_start":322,"line_end":322,"column_start":5,"column_end":52}},{"value":"/         *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180498,"byte_end":13180517,"line_start":323,"line_end":323,"column_start":5,"column_end":24}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180522,"byte_end":13180533,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180538,"byte_end":13180541,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     sync_code.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180546,"byte_end":13180579,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180584,"byte_end":13180587,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180592,"byte_end":13180627,"line_start":328,"line_end":328,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(*n, 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180632,"byte_end":13180658,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180663,"byte_end":13180668,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180673,"byte_end":13180676,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180681,"byte_end":13180688,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180693,"byte_end":13180717,"line_start":333,"line_end":333,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181974,"byte_end":13181984,"line_start":370,"line_end":370,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180829,"byte_end":13180903,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180908,"byte_end":13180975,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13180980,"byte_end":13181004,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181009,"byte_end":13181012,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181017,"byte_end":13181090,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181095,"byte_end":13181168,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181173,"byte_end":13181244,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181249,"byte_end":13181324,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181329,"byte_end":13181371,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181376,"byte_end":13181379,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181384,"byte_end":13181403,"line_start":348,"line_end":348,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181408,"byte_end":13181411,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181416,"byte_end":13181489,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock_owned` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181494,"byte_end":13181567,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181572,"byte_end":13181595,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181600,"byte_end":13181603,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181608,"byte_end":13181622,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181627,"byte_end":13181630,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181635,"byte_end":13181642,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181647,"byte_end":13181674,"line_start":357,"line_end":357,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181679,"byte_end":13181702,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181707,"byte_end":13181710,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181715,"byte_end":13181733,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181738,"byte_end":13181759,"line_start":361,"line_end":361,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181764,"byte_end":13181808,"line_start":362,"line_end":362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181813,"byte_end":13181816,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181821,"byte_end":13181874,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181879,"byte_end":13181894,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181899,"byte_end":13181904,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181909,"byte_end":13181916,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181921,"byte_end":13181924,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13181929,"byte_end":13181956,"line_start":369,"line_end":369,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182861,"byte_end":13182869,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182393,"byte_end":13182462,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182467,"byte_end":13182509,"line_start":384,"line_end":384,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182514,"byte_end":13182517,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182522,"byte_end":13182556,"line_start":386,"line_end":386,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182561,"byte_end":13182575,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182580,"byte_end":13182583,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182588,"byte_end":13182595,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182600,"byte_end":13182627,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182632,"byte_end":13182695,"line_start":391,"line_end":391,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182700,"byte_end":13182703,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182708,"byte_end":13182738,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182743,"byte_end":13182746,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182751,"byte_end":13182781,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182786,"byte_end":13182808,"line_start":396,"line_end":396,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182813,"byte_end":13182825,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182830,"byte_end":13182837,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13182842,"byte_end":13182849,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183549,"byte_end":13183556,"line_start":424,"line_end":424,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183078,"byte_end":13183133,"line_start":407,"line_end":407,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183138,"byte_end":13183141,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183146,"byte_end":13183221,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183226,"byte_end":13183300,"line_start":410,"line_end":410,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183305,"byte_end":13183308,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183313,"byte_end":13183327,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183332,"byte_end":13183335,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183340,"byte_end":13183347,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183352,"byte_end":13183379,"line_start":415,"line_end":415,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183384,"byte_end":13183387,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183392,"byte_end":13183407,"line_start":417,"line_end":417,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183412,"byte_end":13183450,"line_start":418,"line_end":418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183455,"byte_end":13183458,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183463,"byte_end":13183495,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183500,"byte_end":13183515,"line_start":421,"line_end":421,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183520,"byte_end":13183525,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183530,"byte_end":13183537,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184637,"byte_end":13184651,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183725,"byte_end":13183799,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183804,"byte_end":13183841,"line_start":432,"line_end":432,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183846,"byte_end":13183849,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183854,"byte_end":13183922,"line_start":434,"line_end":434,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13183927,"byte_end":13184000,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184005,"byte_end":13184081,"line_start":436,"line_end":436,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184086,"byte_end":13184160,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184165,"byte_end":13184213,"line_start":438,"line_end":438,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184218,"byte_end":13184221,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184226,"byte_end":13184260,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184265,"byte_end":13184292,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184297,"byte_end":13184311,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184316,"byte_end":13184319,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184324,"byte_end":13184331,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184336,"byte_end":13184363,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184368,"byte_end":13184391,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184396,"byte_end":13184459,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184464,"byte_end":13184467,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184472,"byte_end":13184512,"line_start":449,"line_end":449,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184517,"byte_end":13184520,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184525,"byte_end":13184569,"line_start":451,"line_end":451,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184574,"byte_end":13184596,"line_start":452,"line_end":452,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184601,"byte_end":13184613,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184618,"byte_end":13184625,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185209,"byte_end":13185219,"line_start":476,"line_end":476,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184876,"byte_end":13184930,"line_start":462,"line_end":462,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184935,"byte_end":13184949,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184954,"byte_end":13184957,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184962,"byte_end":13184969,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13184974,"byte_end":13185001,"line_start":466,"line_end":466,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185006,"byte_end":13185009,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185014,"byte_end":13185032,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185037,"byte_end":13185058,"line_start":469,"line_end":469,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185063,"byte_end":13185097,"line_start":470,"line_end":470,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185102,"byte_end":13185105,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185110,"byte_end":13185145,"line_start":472,"line_end":472,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185150,"byte_end":13185175,"line_start":473,"line_end":473,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185180,"byte_end":13185185,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185190,"byte_end":13185197,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186954,"byte_end":13186957,"line_start":547,"line_end":547,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185968,"byte_end":13186040,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186045,"byte_end":13186048,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186053,"byte_end":13186141,"line_start":518,"line_end":518,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186146,"byte_end":13186149,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186154,"byte_end":13186246,"line_start":520,"line_end":520,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186251,"byte_end":13186336,"line_start":521,"line_end":521,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186341,"byte_end":13186344,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186349,"byte_end":13186363,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186368,"byte_end":13186371,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186376,"byte_end":13186383,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186388,"byte_end":13186429,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186434,"byte_end":13186437,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186442,"byte_end":13186490,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186495,"byte_end":13186515,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186520,"byte_end":13186523,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186528,"byte_end":13186548,"line_start":531,"line_end":531,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186553,"byte_end":13186576,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186581,"byte_end":13186614,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186619,"byte_end":13186622,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186627,"byte_end":13186632,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186637,"byte_end":13186710,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186715,"byte_end":13186735,"line_start":537,"line_end":537,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186740,"byte_end":13186745,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186750,"byte_end":13186753,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186758,"byte_end":13186800,"line_start":540,"line_end":540,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186805,"byte_end":13186812,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186817,"byte_end":13186824,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186829,"byte_end":13186832,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186837,"byte_end":13186874,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186879,"byte_end":13186928,"line_start":545,"line_end":545,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13186933,"byte_end":13186942,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188413,"byte_end":13188420,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187289,"byte_end":13187376,"line_start":561,"line_end":561,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187381,"byte_end":13187442,"line_start":562,"line_end":562,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187447,"byte_end":13187450,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187455,"byte_end":13187543,"line_start":564,"line_end":564,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187548,"byte_end":13187551,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187556,"byte_end":13187645,"line_start":566,"line_end":566,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187650,"byte_end":13187742,"line_start":567,"line_end":567,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187747,"byte_end":13187750,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187755,"byte_end":13187769,"line_start":569,"line_end":569,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187774,"byte_end":13187777,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187782,"byte_end":13187789,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187794,"byte_end":13187835,"line_start":572,"line_end":572,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187840,"byte_end":13187843,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187848,"byte_end":13187896,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187901,"byte_end":13187921,"line_start":575,"line_end":575,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187926,"byte_end":13187929,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187934,"byte_end":13187954,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187959,"byte_end":13187982,"line_start":578,"line_end":578,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13187987,"byte_end":13188020,"line_start":579,"line_end":579,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188025,"byte_end":13188028,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188033,"byte_end":13188038,"line_start":581,"line_end":581,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188043,"byte_end":13188125,"line_start":582,"line_end":582,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188130,"byte_end":13188169,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188174,"byte_end":13188194,"line_start":584,"line_end":584,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188199,"byte_end":13188204,"line_start":585,"line_end":585,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188209,"byte_end":13188212,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188217,"byte_end":13188259,"line_start":587,"line_end":587,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188264,"byte_end":13188271,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188276,"byte_end":13188283,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188288,"byte_end":13188291,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188296,"byte_end":13188333,"line_start":591,"line_end":591,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188338,"byte_end":13188387,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188392,"byte_end":13188401,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189579,"byte_end":13189584,"line_start":633,"line_end":633,"column_start":12,"column_end":17},"name":"mutex","qualname":"<MutexGuard>::mutex","value":"pub fn mutex(&Self) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Mutex`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Mutex`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188866,"byte_end":13188914,"line_start":611,"line_end":611,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188919,"byte_end":13188922,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188927,"byte_end":13188934,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188939,"byte_end":13188980,"line_start":614,"line_end":614,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188985,"byte_end":13188988,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock<'l>(guard: MutexGuard<'l, u32>) -> MutexGuard<'l, u32> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13188993,"byte_end":13189080,"line_start":616,"line_end":616,"column_start":5,"column_end":92}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189085,"byte_end":13189131,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/     let mutex = MutexGuard::mutex(&guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189136,"byte_end":13189182,"line_start":618,"line_end":618,"column_start":5,"column_end":51}},{"value":"/     drop(guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189187,"byte_end":13189207,"line_start":619,"line_end":619,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189212,"byte_end":13189251,"line_start":620,"line_end":620,"column_start":5,"column_end":44}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189256,"byte_end":13189302,"line_start":621,"line_end":621,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189307,"byte_end":13189320,"line_start":622,"line_end":622,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189325,"byte_end":13189330,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189335,"byte_end":13189340,"line_start":624,"line_end":624,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189345,"byte_end":13189365,"line_start":625,"line_end":625,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189370,"byte_end":13189393,"line_start":626,"line_end":626,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Mutex::new(0u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189398,"byte_end":13189437,"line_start":627,"line_end":627,"column_start":5,"column_end":44}},{"value":"/ #     let guard = mutex.lock().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189442,"byte_end":13189483,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189488,"byte_end":13189529,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189534,"byte_end":13189541,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189546,"byte_end":13189553,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189558,"byte_end":13189567,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191284,"byte_end":13191289,"line_start":695,"line_end":695,"column_start":12,"column_end":17},"name":"mutex","qualname":"<OwnedMutexGuard<T>>::mutex","value":"pub fn mutex(&Self) -> &Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Arc<Mutex>`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Arc<Mutex>`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190483,"byte_end":13190536,"line_start":672,"line_end":672,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190541,"byte_end":13190544,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190549,"byte_end":13190556,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190561,"byte_end":13190584,"line_start":675,"line_end":675,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Mutex, OwnedMutexGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190589,"byte_end":13190635,"line_start":676,"line_end":676,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190640,"byte_end":13190643,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock(guard: OwnedMutexGuard<u32>) -> OwnedMutexGuard<u32> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190648,"byte_end":13190733,"line_start":678,"line_end":678,"column_start":5,"column_end":90}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190738,"byte_end":13190784,"line_start":679,"line_end":679,"column_start":5,"column_end":51}},{"value":"/     let mutex: Arc<Mutex<u32>> = OwnedMutexGuard::mutex(&guard).clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190789,"byte_end":13190865,"line_start":680,"line_end":680,"column_start":5,"column_end":81}},{"value":"/     drop(guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190870,"byte_end":13190890,"line_start":681,"line_end":681,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190895,"byte_end":13190940,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190945,"byte_end":13190991,"line_start":683,"line_end":683,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190996,"byte_end":13191009,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191014,"byte_end":13191019,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191024,"byte_end":13191029,"line_start":686,"line_end":686,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191034,"byte_end":13191054,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191059,"byte_end":13191082,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Arc::new(Mutex::new(0u32));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191087,"byte_end":13191136,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/ #     let guard = mutex.lock_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191141,"byte_end":13191188,"line_start":690,"line_end":690,"column_start":5,"column_end":52}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191193,"byte_end":13191234,"line_start":691,"line_end":691,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191239,"byte_end":13191246,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191251,"byte_end":13191258,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191263,"byte_end":13191272,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192674,"byte_end":13192677,"line_start":743,"line_end":743,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192206,"byte_end":13192278,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192283,"byte_end":13192286,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192291,"byte_end":13192385,"line_start":736,"line_end":736,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192390,"byte_end":13192393,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192398,"byte_end":13192489,"line_start":738,"line_end":738,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192494,"byte_end":13192586,"line_start":739,"line_end":739,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192591,"byte_end":13192594,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192599,"byte_end":13192648,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192653,"byte_end":13192662,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193556,"byte_end":13193563,"line_start":767,"line_end":767,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193003,"byte_end":13193090,"line_start":757,"line_end":757,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193095,"byte_end":13193156,"line_start":758,"line_end":758,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193161,"byte_end":13193164,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193169,"byte_end":13193263,"line_start":760,"line_end":760,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193268,"byte_end":13193271,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193276,"byte_end":13193371,"line_start":762,"line_end":762,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193376,"byte_end":13193468,"line_start":763,"line_end":763,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193473,"byte_end":13193476,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193481,"byte_end":13193530,"line_start":765,"line_end":765,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13193535,"byte_end":13193544,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198561,"byte_end":13198567,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3449}],"decl_id":null,"docs":" Notifies a single task to wake up.","sig":null,"attributes":[{"value":"/ Notifies a single task to wake up.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195618,"byte_end":13195656,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195657,"byte_end":13195660,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195661,"byte_end":13195737,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195738,"byte_end":13195818,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195819,"byte_end":13195860,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195861,"byte_end":13195864,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195865,"byte_end":13195939,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13195940,"byte_end":13196025,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196026,"byte_end":13196092,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196093,"byte_end":13196096,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196097,"byte_end":13196155,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196156,"byte_end":13196236,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196237,"byte_end":13196317,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196318,"byte_end":13196401,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196402,"byte_end":13196452,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196453,"byte_end":13196456,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196457,"byte_end":13196541,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196542,"byte_end":13196617,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196618,"byte_end":13196688,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196689,"byte_end":13196692,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196693,"byte_end":13196777,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196778,"byte_end":13196851,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196852,"byte_end":13196923,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196924,"byte_end":13196927,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196928,"byte_end":13196942,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196943,"byte_end":13196946,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196947,"byte_end":13196963,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196964,"byte_end":13196967,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196968,"byte_end":13196975,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13196976,"byte_end":13197004,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197005,"byte_end":13197028,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197029,"byte_end":13197032,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197033,"byte_end":13197051,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197052,"byte_end":13197073,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197074,"byte_end":13197119,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197120,"byte_end":13197157,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197158,"byte_end":13197161,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197162,"byte_end":13197208,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197209,"byte_end":13197246,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197247,"byte_end":13197293,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197294,"byte_end":13197305,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197306,"byte_end":13197309,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197310,"byte_end":13197351,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197352,"byte_end":13197380,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197381,"byte_end":13197384,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Wait for task to receive notification.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197385,"byte_end":13197434,"line_start":68,"line_end":68,"column_start":1,"column_end":50}},{"value":"/     handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197435,"byte_end":13197465,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197466,"byte_end":13197471,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197472,"byte_end":13197479,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197480,"byte_end":13197483,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197484,"byte_end":13197509,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197510,"byte_end":13197513,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197514,"byte_end":13197521,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197522,"byte_end":13197550,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197551,"byte_end":13197554,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197555,"byte_end":13197590,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197591,"byte_end":13197616,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197617,"byte_end":13197620,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197621,"byte_end":13197644,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197645,"byte_end":13197680,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197681,"byte_end":13197704,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197705,"byte_end":13197710,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197711,"byte_end":13197714,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197715,"byte_end":13197739,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197740,"byte_end":13197778,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197779,"byte_end":13197818,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197819,"byte_end":13197853,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197854,"byte_end":13197857,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197858,"byte_end":13197913,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197914,"byte_end":13197951,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197952,"byte_end":13197961,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197962,"byte_end":13197965,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13197966,"byte_end":13198005,"line_start":95,"line_end":95,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198006,"byte_end":13198024,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198025,"byte_end":13198056,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198057,"byte_end":13198135,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198136,"byte_end":13198169,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198170,"byte_end":13198187,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198188,"byte_end":13198191,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198192,"byte_end":13198242,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198243,"byte_end":13198288,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198289,"byte_end":13198302,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198303,"byte_end":13198312,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198313,"byte_end":13198318,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198319,"byte_end":13198326,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198327,"byte_end":13198330,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198331,"byte_end":13198360,"line_start":109,"line_end":109,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198361,"byte_end":13198402,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198403,"byte_end":13198447,"line_start":111,"line_end":111,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198448,"byte_end":13198490,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13198491,"byte_end":13198532,"line_start":113,"line_end":113,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199429,"byte_end":13199437,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473}],"decl_id":null,"docs":" Future returned from [`Notify::notified()`]\n","sig":null,"attributes":[{"value":"/ Future returned from [`Notify::notified()`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199353,"byte_end":13199400,"line_start":147,"line_end":147,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200899,"byte_end":13200902,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200695,"byte_end":13200751,"line_start":204,"line_end":204,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200756,"byte_end":13200759,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200764,"byte_end":13200778,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200783,"byte_end":13200786,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200791,"byte_end":13200798,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200803,"byte_end":13200831,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200836,"byte_end":13200839,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200844,"byte_end":13200875,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200880,"byte_end":13200887,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202833,"byte_end":13202841,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201556,"byte_end":13201584,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201589,"byte_end":13201592,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201597,"byte_end":13201615,"line_start":240,"line_end":240,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201620,"byte_end":13201623,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201628,"byte_end":13201641,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201646,"byte_end":13201675,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201680,"byte_end":13201687,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201692,"byte_end":13201695,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201700,"byte_end":13201776,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201781,"byte_end":13201859,"line_start":247,"line_end":247,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201864,"byte_end":13201939,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13201944,"byte_end":13202017,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202022,"byte_end":13202025,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202030,"byte_end":13202070,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202075,"byte_end":13202078,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202083,"byte_end":13202102,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202107,"byte_end":13202110,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute notifications in the order","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202115,"byte_end":13202191,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/ they were requested. Cancelling a call to `notified` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202196,"byte_end":13202272,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202277,"byte_end":13202300,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202305,"byte_end":13202308,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202313,"byte_end":13202327,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202332,"byte_end":13202335,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202340,"byte_end":13202347,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202352,"byte_end":13202380,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202385,"byte_end":13202408,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202413,"byte_end":13202416,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202421,"byte_end":13202439,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202444,"byte_end":13202465,"line_start":266,"line_end":266,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202470,"byte_end":13202515,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202520,"byte_end":13202557,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202562,"byte_end":13202565,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202570,"byte_end":13202603,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202608,"byte_end":13202645,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202650,"byte_end":13202696,"line_start":272,"line_end":272,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202701,"byte_end":13202712,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202717,"byte_end":13202720,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202725,"byte_end":13202766,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202771,"byte_end":13202799,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202804,"byte_end":13202809,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13202814,"byte_end":13202821,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204618,"byte_end":13204628,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task.","sig":null,"attributes":[{"value":"/ Notifies a waiting task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203366,"byte_end":13203394,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203399,"byte_end":13203402,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203407,"byte_end":13203478,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203483,"byte_end":13203551,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203556,"byte_end":13203632,"line_start":299,"line_end":299,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203637,"byte_end":13203682,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203687,"byte_end":13203690,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203695,"byte_end":13203769,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203774,"byte_end":13203852,"line_start":303,"line_end":303,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203857,"byte_end":13203929,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203934,"byte_end":13203948,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203953,"byte_end":13203956,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13203961,"byte_end":13204005,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204010,"byte_end":13204013,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204018,"byte_end":13204032,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204037,"byte_end":13204040,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204045,"byte_end":13204052,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204057,"byte_end":13204085,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204090,"byte_end":13204113,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204118,"byte_end":13204121,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204126,"byte_end":13204144,"line_start":315,"line_end":315,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204149,"byte_end":13204170,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204175,"byte_end":13204220,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204225,"byte_end":13204262,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204267,"byte_end":13204270,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204275,"byte_end":13204308,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204313,"byte_end":13204350,"line_start":321,"line_end":321,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204355,"byte_end":13204401,"line_start":322,"line_end":322,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204406,"byte_end":13204417,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204422,"byte_end":13204425,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204430,"byte_end":13204471,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204476,"byte_end":13204504,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204509,"byte_end":13204514,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13204519,"byte_end":13204526,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206964,"byte_end":13206978,"line_start":397,"line_end":397,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks.","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13205871,"byte_end":13205902,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13205907,"byte_end":13205910,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13205915,"byte_end":13205985,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13205990,"byte_end":13206060,"line_start":368,"line_end":368,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206065,"byte_end":13206132,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206137,"byte_end":13206208,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206213,"byte_end":13206289,"line_start":371,"line_end":371,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206294,"byte_end":13206297,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206302,"byte_end":13206316,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206321,"byte_end":13206324,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206329,"byte_end":13206336,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206341,"byte_end":13206369,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206374,"byte_end":13206397,"line_start":377,"line_end":377,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206402,"byte_end":13206405,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206410,"byte_end":13206428,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206433,"byte_end":13206454,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206459,"byte_end":13206504,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206509,"byte_end":13206546,"line_start":382,"line_end":382,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206551,"byte_end":13206554,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206559,"byte_end":13206601,"line_start":384,"line_end":384,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206606,"byte_end":13206648,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206653,"byte_end":13206656,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206661,"byte_end":13206707,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206712,"byte_end":13206758,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206763,"byte_end":13206800,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206805,"byte_end":13206816,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206821,"byte_end":13206824,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206829,"byte_end":13206853,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206858,"byte_end":13206882,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206887,"byte_end":13206930,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206935,"byte_end":13206940,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13206945,"byte_end":13206952,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2289},{"krate":0,"index":2292},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":2295},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2355},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2395}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13219751,"byte_end":13219818,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13219819,"byte_end":13219887,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13219888,"byte_end":13219954,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13219955,"byte_end":13219958,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13219959,"byte_end":13220025,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220026,"byte_end":13220097,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220098,"byte_end":13220101,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220102,"byte_end":13220148,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220149,"byte_end":13220152,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220153,"byte_end":13220167,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220168,"byte_end":13220171,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220172,"byte_end":13220179,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220180,"byte_end":13220209,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220210,"byte_end":13220213,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220214,"byte_end":13220232,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220233,"byte_end":13220254,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220255,"byte_end":13220297,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220298,"byte_end":13220301,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220302,"byte_end":13220335,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220336,"byte_end":13220376,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220377,"byte_end":13220426,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220427,"byte_end":13220440,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220441,"byte_end":13220452,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220453,"byte_end":13220456,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220457,"byte_end":13220481,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220482,"byte_end":13220529,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220530,"byte_end":13220583,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220584,"byte_end":13220593,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220594,"byte_end":13220599,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220600,"byte_end":13220607,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220608,"byte_end":13220611,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220612,"byte_end":13220685,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220686,"byte_end":13220711,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220712,"byte_end":13220715,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220716,"byte_end":13220723,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220724,"byte_end":13220753,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220754,"byte_end":13220757,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220758,"byte_end":13220776,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220777,"byte_end":13220798,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220799,"byte_end":13220848,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220849,"byte_end":13220852,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220853,"byte_end":13220886,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220887,"byte_end":13220908,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220909,"byte_end":13220920,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220921,"byte_end":13220924,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220925,"byte_end":13220949,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13220950,"byte_end":13221001,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221002,"byte_end":13221055,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221056,"byte_end":13221065,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221066,"byte_end":13221071,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221072,"byte_end":13221079,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221080,"byte_end":13221083,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ To use a oneshot channel in a `tokio::select!` loop, add `&mut` in front of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221084,"byte_end":13221163,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221164,"byte_end":13221180,"line_start":56,"line_end":56,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221181,"byte_end":13221184,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221185,"byte_end":13221192,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221193,"byte_end":13221222,"line_start":59,"line_end":59,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221223,"byte_end":13221272,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221273,"byte_end":13221276,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221277,"byte_end":13221295,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221296,"byte_end":13221320,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221321,"byte_end":13221389,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221390,"byte_end":13221411,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221412,"byte_end":13221462,"line_start":66,"line_end":66,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221463,"byte_end":13221527,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221528,"byte_end":13221531,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221532,"byte_end":13221554,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221555,"byte_end":13221588,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221589,"byte_end":13221637,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221638,"byte_end":13221682,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221683,"byte_end":13221694,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221695,"byte_end":13221698,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221699,"byte_end":13221713,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221714,"byte_end":13221742,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221743,"byte_end":13221808,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221809,"byte_end":13221845,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221846,"byte_end":13221908,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221909,"byte_end":13221935,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221936,"byte_end":13221953,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221954,"byte_end":13221967,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221968,"byte_end":13221977,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13221978,"byte_end":13222010,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222011,"byte_end":13222016,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222017,"byte_end":13222024,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222025,"byte_end":13222028,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222029,"byte_end":13222102,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222103,"byte_end":13222124,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222125,"byte_end":13222128,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222129,"byte_end":13222136,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222137,"byte_end":13222166,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222167,"byte_end":13222170,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222171,"byte_end":13222194,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222195,"byte_end":13222249,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222250,"byte_end":13222255,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222256,"byte_end":13222286,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222287,"byte_end":13222315,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222316,"byte_end":13222370,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222371,"byte_end":13222428,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222429,"byte_end":13222483,"line_start":101,"line_end":101,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222484,"byte_end":13222497,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222498,"byte_end":13222507,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222508,"byte_end":13222513,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222514,"byte_end":13222517,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222518,"byte_end":13222536,"line_start":106,"line_end":106,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222537,"byte_end":13222561,"line_start":107,"line_end":107,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222562,"byte_end":13222609,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222610,"byte_end":13222631,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222632,"byte_end":13222678,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222679,"byte_end":13222682,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222683,"byte_end":13222744,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222745,"byte_end":13222772,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222773,"byte_end":13222776,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222777,"byte_end":13222830,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222831,"byte_end":13222836,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13222837,"byte_end":13222844,"line_start":117,"line_end":117,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225206,"byte_end":13225212,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3489}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223176,"byte_end":13223225,"line_start":131,"line_end":131,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223226,"byte_end":13223229,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223230,"byte_end":13223300,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223301,"byte_end":13223338,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223339,"byte_end":13223342,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223343,"byte_end":13223357,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223358,"byte_end":13223361,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223362,"byte_end":13223369,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223370,"byte_end":13223399,"line_start":139,"line_end":139,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223400,"byte_end":13223403,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223404,"byte_end":13223422,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223423,"byte_end":13223444,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223445,"byte_end":13223487,"line_start":143,"line_end":143,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223488,"byte_end":13223491,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223492,"byte_end":13223525,"line_start":145,"line_end":145,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223526,"byte_end":13223566,"line_start":146,"line_end":146,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223567,"byte_end":13223616,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223617,"byte_end":13223630,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223631,"byte_end":13223642,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223643,"byte_end":13223646,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223647,"byte_end":13223671,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223672,"byte_end":13223719,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223720,"byte_end":13223773,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223774,"byte_end":13223783,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223784,"byte_end":13223789,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223790,"byte_end":13223797,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223798,"byte_end":13223801,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223802,"byte_end":13223875,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223876,"byte_end":13223901,"line_start":159,"line_end":159,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223902,"byte_end":13223905,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223906,"byte_end":13223913,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223914,"byte_end":13223943,"line_start":162,"line_end":162,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223944,"byte_end":13223947,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223948,"byte_end":13223966,"line_start":164,"line_end":164,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223967,"byte_end":13223988,"line_start":165,"line_end":165,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13223989,"byte_end":13224038,"line_start":166,"line_end":166,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224039,"byte_end":13224042,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224043,"byte_end":13224076,"line_start":168,"line_end":168,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224077,"byte_end":13224098,"line_start":169,"line_end":169,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224099,"byte_end":13224110,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224111,"byte_end":13224114,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224115,"byte_end":13224139,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224140,"byte_end":13224191,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224192,"byte_end":13224245,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224246,"byte_end":13224255,"line_start":175,"line_end":175,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224256,"byte_end":13224261,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224262,"byte_end":13224269,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224270,"byte_end":13224273,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224274,"byte_end":13224347,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224348,"byte_end":13224369,"line_start":180,"line_end":180,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224370,"byte_end":13224373,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224374,"byte_end":13224381,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224382,"byte_end":13224411,"line_start":183,"line_end":183,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224412,"byte_end":13224415,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224416,"byte_end":13224439,"line_start":185,"line_end":185,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224440,"byte_end":13224494,"line_start":186,"line_end":186,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224495,"byte_end":13224500,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224501,"byte_end":13224531,"line_start":188,"line_end":188,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224532,"byte_end":13224560,"line_start":189,"line_end":189,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224561,"byte_end":13224615,"line_start":190,"line_end":190,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224616,"byte_end":13224673,"line_start":191,"line_end":191,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224674,"byte_end":13224728,"line_start":192,"line_end":192,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224729,"byte_end":13224742,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224743,"byte_end":13224752,"line_start":194,"line_end":194,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224753,"byte_end":13224758,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224759,"byte_end":13224762,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224763,"byte_end":13224781,"line_start":197,"line_end":197,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224782,"byte_end":13224806,"line_start":198,"line_end":198,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224807,"byte_end":13224854,"line_start":199,"line_end":199,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224855,"byte_end":13224876,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224877,"byte_end":13224923,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224924,"byte_end":13224927,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224928,"byte_end":13224989,"line_start":203,"line_end":203,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13224990,"byte_end":13225017,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225018,"byte_end":13225021,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225022,"byte_end":13225075,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225076,"byte_end":13225081,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225082,"byte_end":13225089,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225090,"byte_end":13225093,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: std::option::Option","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225094,"byte_end":13225129,"line_start":210,"line_end":210,"column_start":1,"column_end":36}},{"value":"/ [`Option::take`]: std::option::Option::take","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225130,"byte_end":13225177,"line_start":211,"line_end":211,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227534,"byte_end":13227542,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3495}],"decl_id":null,"docs":" Receives a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receives a value from the associated [`Sender`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225255,"byte_end":13225307,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225308,"byte_end":13225311,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225312,"byte_end":13225382,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225383,"byte_end":13225420,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225421,"byte_end":13225424,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This channel has no `recv` method because the receiver itself implements the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225425,"byte_end":13225505,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ [`Future`] trait. To receive a value, `.await` the `Receiver` object directly.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225506,"byte_end":13225588,"line_start":223,"line_end":223,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225589,"byte_end":13225592,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: trait@std::future::Future","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225593,"byte_end":13225634,"line_start":225,"line_end":225,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225635,"byte_end":13225638,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225639,"byte_end":13225653,"line_start":227,"line_end":227,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225654,"byte_end":13225657,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225658,"byte_end":13225665,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225666,"byte_end":13225695,"line_start":230,"line_end":230,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225696,"byte_end":13225699,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225700,"byte_end":13225718,"line_start":232,"line_end":232,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225719,"byte_end":13225740,"line_start":233,"line_end":233,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225741,"byte_end":13225783,"line_start":234,"line_end":234,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225784,"byte_end":13225787,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225788,"byte_end":13225821,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225822,"byte_end":13225862,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225863,"byte_end":13225912,"line_start":238,"line_end":238,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225913,"byte_end":13225926,"line_start":239,"line_end":239,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225927,"byte_end":13225938,"line_start":240,"line_end":240,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225939,"byte_end":13225942,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225943,"byte_end":13225967,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13225968,"byte_end":13226015,"line_start":243,"line_end":243,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226016,"byte_end":13226069,"line_start":244,"line_end":244,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226070,"byte_end":13226079,"line_start":245,"line_end":245,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226080,"byte_end":13226085,"line_start":246,"line_end":246,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226086,"byte_end":13226093,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226094,"byte_end":13226097,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226098,"byte_end":13226171,"line_start":249,"line_end":249,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226172,"byte_end":13226197,"line_start":250,"line_end":250,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226198,"byte_end":13226201,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226202,"byte_end":13226209,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226210,"byte_end":13226239,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226240,"byte_end":13226243,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226244,"byte_end":13226262,"line_start":255,"line_end":255,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226263,"byte_end":13226284,"line_start":256,"line_end":256,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226285,"byte_end":13226334,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226335,"byte_end":13226338,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226339,"byte_end":13226372,"line_start":259,"line_end":259,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226373,"byte_end":13226394,"line_start":260,"line_end":260,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226395,"byte_end":13226406,"line_start":261,"line_end":261,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226407,"byte_end":13226410,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226411,"byte_end":13226435,"line_start":263,"line_end":263,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226436,"byte_end":13226487,"line_start":264,"line_end":264,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226488,"byte_end":13226541,"line_start":265,"line_end":265,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226542,"byte_end":13226551,"line_start":266,"line_end":266,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226552,"byte_end":13226557,"line_start":267,"line_end":267,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226558,"byte_end":13226565,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226566,"byte_end":13226569,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ To use a `Receiver` in a `tokio::select!` loop, add `&mut` in front of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226570,"byte_end":13226648,"line_start":270,"line_end":270,"column_start":1,"column_end":79}},{"value":"/ channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226649,"byte_end":13226661,"line_start":271,"line_end":271,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226662,"byte_end":13226665,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226666,"byte_end":13226673,"line_start":273,"line_end":273,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226674,"byte_end":13226703,"line_start":274,"line_end":274,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226704,"byte_end":13226753,"line_start":275,"line_end":275,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226754,"byte_end":13226757,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226758,"byte_end":13226776,"line_start":277,"line_end":277,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226777,"byte_end":13226801,"line_start":278,"line_end":278,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226802,"byte_end":13226870,"line_start":279,"line_end":279,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226871,"byte_end":13226892,"line_start":280,"line_end":280,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226893,"byte_end":13226943,"line_start":281,"line_end":281,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13226944,"byte_end":13227008,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227009,"byte_end":13227012,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227013,"byte_end":13227035,"line_start":284,"line_end":284,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227036,"byte_end":13227069,"line_start":285,"line_end":285,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227070,"byte_end":13227118,"line_start":286,"line_end":286,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227119,"byte_end":13227163,"line_start":287,"line_end":287,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227164,"byte_end":13227175,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227176,"byte_end":13227179,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227180,"byte_end":13227194,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227195,"byte_end":13227223,"line_start":291,"line_end":291,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227224,"byte_end":13227289,"line_start":292,"line_end":292,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227290,"byte_end":13227326,"line_start":293,"line_end":293,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227327,"byte_end":13227389,"line_start":294,"line_end":294,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227390,"byte_end":13227416,"line_start":295,"line_end":295,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227417,"byte_end":13227434,"line_start":296,"line_end":296,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227435,"byte_end":13227448,"line_start":297,"line_end":297,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227449,"byte_end":13227458,"line_start":298,"line_end":298,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227459,"byte_end":13227491,"line_start":299,"line_end":299,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227492,"byte_end":13227497,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227498,"byte_end":13227505,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227593,"byte_end":13227598,"line_start":307,"line_end":307,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3511},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2304}],"decl_id":null,"docs":" Oneshot error types.\n","sig":null,"attributes":[{"value":"/ Oneshot error types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227605,"byte_end":13227629,"line_start":308,"line_end":308,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227771,"byte_end":13227780,"line_start":314,"line_end":314,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227654,"byte_end":13227719,"line_start":312,"line_end":312,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228002,"byte_end":13228007,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3511},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227935,"byte_end":13227993,"line_start":319,"line_end":319,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228096,"byte_end":13228102,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3511},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228018,"byte_end":13228087,"line_start":322,"line_end":322,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227912,"byte_end":13227924,"line_start":318,"line_end":318,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3514}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13227802,"byte_end":13227862,"line_start":316,"line_end":316,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231207,"byte_end":13231214,"line_start":442,"line_end":442,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230391,"byte_end":13230471,"line_start":412,"line_end":412,"column_start":1,"column_end":81}},{"value":"/ tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230472,"byte_end":13230482,"line_start":413,"line_end":413,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230483,"byte_end":13230486,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230487,"byte_end":13230563,"line_start":415,"line_end":415,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230564,"byte_end":13230642,"line_start":416,"line_end":416,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230643,"byte_end":13230689,"line_start":417,"line_end":417,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230690,"byte_end":13230693,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230694,"byte_end":13230740,"line_start":419,"line_end":419,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230741,"byte_end":13230744,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230745,"byte_end":13230759,"line_start":421,"line_end":421,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230760,"byte_end":13230763,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230764,"byte_end":13230771,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230772,"byte_end":13230801,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230802,"byte_end":13230805,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230806,"byte_end":13230824,"line_start":426,"line_end":426,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230825,"byte_end":13230846,"line_start":427,"line_end":427,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230847,"byte_end":13230889,"line_start":428,"line_end":428,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230890,"byte_end":13230893,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230894,"byte_end":13230927,"line_start":430,"line_end":430,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230928,"byte_end":13230968,"line_start":431,"line_end":431,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13230969,"byte_end":13231018,"line_start":432,"line_end":432,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231019,"byte_end":13231032,"line_start":433,"line_end":433,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231033,"byte_end":13231044,"line_start":434,"line_end":434,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231045,"byte_end":13231048,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231049,"byte_end":13231073,"line_start":436,"line_end":436,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231074,"byte_end":13231121,"line_start":437,"line_end":437,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231122,"byte_end":13231175,"line_start":438,"line_end":438,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231176,"byte_end":13231185,"line_start":439,"line_end":439,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231186,"byte_end":13231191,"line_start":440,"line_end":440,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231192,"byte_end":13231199,"line_start":441,"line_end":441,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233237,"byte_end":13233241,"line_start":499,"line_end":499,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231666,"byte_end":13231741,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231746,"byte_end":13231762,"line_start":460,"line_end":460,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231767,"byte_end":13231770,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231775,"byte_end":13231854,"line_start":462,"line_end":462,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231859,"byte_end":13231934,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231939,"byte_end":13232015,"line_start":464,"line_end":464,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232020,"byte_end":13232092,"line_start":465,"line_end":465,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232097,"byte_end":13232110,"line_start":466,"line_end":466,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232115,"byte_end":13232118,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232123,"byte_end":13232199,"line_start":468,"line_end":468,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232204,"byte_end":13232280,"line_start":469,"line_end":469,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232285,"byte_end":13232357,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232362,"byte_end":13232435,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232440,"byte_end":13232514,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232519,"byte_end":13232591,"line_start":473,"line_end":473,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232596,"byte_end":13232633,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232638,"byte_end":13232641,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232646,"byte_end":13232660,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232665,"byte_end":13232668,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232673,"byte_end":13232705,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232710,"byte_end":13232713,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232718,"byte_end":13232725,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232730,"byte_end":13232759,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232764,"byte_end":13232767,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232772,"byte_end":13232790,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232795,"byte_end":13232816,"line_start":484,"line_end":484,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232821,"byte_end":13232863,"line_start":485,"line_end":485,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232868,"byte_end":13232871,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232876,"byte_end":13232909,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232914,"byte_end":13232954,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13232959,"byte_end":13233008,"line_start":489,"line_end":489,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233013,"byte_end":13233026,"line_start":490,"line_end":490,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233031,"byte_end":13233042,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233047,"byte_end":13233050,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233055,"byte_end":13233079,"line_start":493,"line_end":493,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233084,"byte_end":13233131,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233136,"byte_end":13233189,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233194,"byte_end":13233203,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233208,"byte_end":13233213,"line_start":497,"line_end":497,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13233218,"byte_end":13233225,"line_start":498,"line_end":498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236507,"byte_end":13236513,"line_start":595,"line_end":595,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234502,"byte_end":13234560,"line_start":528,"line_end":528,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234565,"byte_end":13234568,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234573,"byte_end":13234647,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234652,"byte_end":13234686,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234691,"byte_end":13234694,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234699,"byte_end":13234764,"line_start":533,"line_end":533,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234769,"byte_end":13234841,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234846,"byte_end":13234849,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234854,"byte_end":13234866,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234871,"byte_end":13234874,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234879,"byte_end":13234927,"line_start":538,"line_end":538,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234932,"byte_end":13234935,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234940,"byte_end":13234966,"line_start":540,"line_end":540,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13234971,"byte_end":13235001,"line_start":541,"line_end":541,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235006,"byte_end":13235009,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235014,"byte_end":13235028,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235033,"byte_end":13235036,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235041,"byte_end":13235056,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235061,"byte_end":13235064,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235069,"byte_end":13235076,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235081,"byte_end":13235110,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235115,"byte_end":13235118,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235123,"byte_end":13235141,"line_start":550,"line_end":550,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235146,"byte_end":13235167,"line_start":551,"line_end":551,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235172,"byte_end":13235224,"line_start":552,"line_end":552,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235229,"byte_end":13235232,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235237,"byte_end":13235270,"line_start":554,"line_end":554,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235275,"byte_end":13235296,"line_start":555,"line_end":555,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235301,"byte_end":13235312,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235317,"byte_end":13235320,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235325,"byte_end":13235351,"line_start":558,"line_end":558,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235356,"byte_end":13235397,"line_start":559,"line_end":559,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235402,"byte_end":13235407,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235412,"byte_end":13235419,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235424,"byte_end":13235427,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235432,"byte_end":13235454,"line_start":563,"line_end":563,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235459,"byte_end":13235462,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235467,"byte_end":13235474,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235479,"byte_end":13235508,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235513,"byte_end":13235551,"line_start":567,"line_end":567,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235556,"byte_end":13235559,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235564,"byte_end":13235598,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235603,"byte_end":13235654,"line_start":570,"line_end":570,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235659,"byte_end":13235684,"line_start":571,"line_end":571,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235689,"byte_end":13235694,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235699,"byte_end":13235702,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235707,"byte_end":13235725,"line_start":574,"line_end":574,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235730,"byte_end":13235751,"line_start":575,"line_end":575,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235756,"byte_end":13235802,"line_start":576,"line_end":576,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235807,"byte_end":13235810,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235815,"byte_end":13235848,"line_start":578,"line_end":578,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235853,"byte_end":13235881,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235886,"byte_end":13235922,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13235927,"byte_end":13236002,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236007,"byte_end":13236024,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236029,"byte_end":13236067,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236072,"byte_end":13236156,"line_start":584,"line_end":584,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236161,"byte_end":13236244,"line_start":585,"line_end":585,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236249,"byte_end":13236292,"line_start":586,"line_end":586,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236297,"byte_end":13236314,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236319,"byte_end":13236332,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236337,"byte_end":13236348,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236353,"byte_end":13236356,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236361,"byte_end":13236397,"line_start":591,"line_end":591,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236402,"byte_end":13236467,"line_start":592,"line_end":592,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236472,"byte_end":13236477,"line_start":593,"line_end":593,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236482,"byte_end":13236489,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237383,"byte_end":13237392,"line_start":628,"line_end":628,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236624,"byte_end":13236698,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236703,"byte_end":13236706,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236711,"byte_end":13236785,"line_start":603,"line_end":603,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236790,"byte_end":13236824,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236829,"byte_end":13236832,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236837,"byte_end":13236912,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236917,"byte_end":13236920,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236925,"byte_end":13236951,"line_start":608,"line_end":608,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236956,"byte_end":13236986,"line_start":609,"line_end":609,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236991,"byte_end":13236994,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13236999,"byte_end":13237013,"line_start":611,"line_end":611,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237018,"byte_end":13237021,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237026,"byte_end":13237033,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237038,"byte_end":13237067,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237072,"byte_end":13237075,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237080,"byte_end":13237098,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237103,"byte_end":13237124,"line_start":617,"line_end":617,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237129,"byte_end":13237171,"line_start":618,"line_end":618,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237176,"byte_end":13237179,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237184,"byte_end":13237217,"line_start":620,"line_end":620,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237222,"byte_end":13237225,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237230,"byte_end":13237247,"line_start":622,"line_end":622,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237252,"byte_end":13237255,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237260,"byte_end":13237292,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237297,"byte_end":13237349,"line_start":625,"line_end":625,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237354,"byte_end":13237359,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237364,"byte_end":13237371,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238839,"byte_end":13238850,"line_start":675,"line_end":675,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Checks whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237554,"byte_end":13237635,"line_start":635,"line_end":635,"column_start":5,"column_end":86}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237640,"byte_end":13237723,"line_start":636,"line_end":636,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237728,"byte_end":13237739,"line_start":637,"line_end":637,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237744,"byte_end":13237747,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237752,"byte_end":13237832,"line_start":639,"line_end":639,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237837,"byte_end":13237871,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237876,"byte_end":13237879,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237884,"byte_end":13237967,"line_start":642,"line_end":642,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13237972,"byte_end":13238038,"line_start":643,"line_end":643,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238043,"byte_end":13238046,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238051,"byte_end":13238106,"line_start":645,"line_end":645,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238111,"byte_end":13238166,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238171,"byte_end":13238174,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238179,"byte_end":13238197,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238202,"byte_end":13238205,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238210,"byte_end":13238236,"line_start":650,"line_end":650,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238241,"byte_end":13238244,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238249,"byte_end":13238301,"line_start":652,"line_end":652,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238306,"byte_end":13238356,"line_start":653,"line_end":653,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238361,"byte_end":13238364,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238369,"byte_end":13238383,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238388,"byte_end":13238391,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238396,"byte_end":13238403,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238408,"byte_end":13238437,"line_start":658,"line_end":658,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238442,"byte_end":13238445,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238450,"byte_end":13238483,"line_start":660,"line_end":660,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238488,"byte_end":13238491,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238496,"byte_end":13238514,"line_start":662,"line_end":662,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238519,"byte_end":13238540,"line_start":663,"line_end":663,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238545,"byte_end":13238601,"line_start":664,"line_end":664,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238606,"byte_end":13238609,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238614,"byte_end":13238647,"line_start":666,"line_end":666,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238652,"byte_end":13238675,"line_start":667,"line_end":667,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238680,"byte_end":13238691,"line_start":668,"line_end":668,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238696,"byte_end":13238699,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238704,"byte_end":13238751,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238756,"byte_end":13238759,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238764,"byte_end":13238805,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238810,"byte_end":13238815,"line_start":673,"line_end":673,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13238820,"byte_end":13238827,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242121,"byte_end":13242126,"line_start":792,"line_end":792,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240375,"byte_end":13240442,"line_start":733,"line_end":733,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240447,"byte_end":13240450,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240455,"byte_end":13240529,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240534,"byte_end":13240602,"line_start":736,"line_end":736,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240607,"byte_end":13240673,"line_start":737,"line_end":737,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240678,"byte_end":13240692,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240697,"byte_end":13240700,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240705,"byte_end":13240781,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240786,"byte_end":13240849,"line_start":741,"line_end":741,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240854,"byte_end":13240857,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240862,"byte_end":13240930,"line_start":743,"line_end":743,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240935,"byte_end":13240957,"line_start":744,"line_end":744,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240962,"byte_end":13240965,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240970,"byte_end":13240992,"line_start":746,"line_end":746,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240997,"byte_end":13241033,"line_start":747,"line_end":747,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241038,"byte_end":13241041,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241046,"byte_end":13241060,"line_start":749,"line_end":749,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241065,"byte_end":13241068,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241073,"byte_end":13241108,"line_start":751,"line_end":751,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241113,"byte_end":13241116,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241121,"byte_end":13241128,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241133,"byte_end":13241162,"line_start":754,"line_end":754,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241167,"byte_end":13241217,"line_start":755,"line_end":755,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241222,"byte_end":13241225,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241230,"byte_end":13241248,"line_start":757,"line_end":757,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241253,"byte_end":13241274,"line_start":758,"line_end":758,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241279,"byte_end":13241325,"line_start":759,"line_end":759,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241330,"byte_end":13241333,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241338,"byte_end":13241371,"line_start":761,"line_end":761,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241376,"byte_end":13241379,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241384,"byte_end":13241403,"line_start":763,"line_end":763,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241408,"byte_end":13241411,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241416,"byte_end":13241448,"line_start":765,"line_end":765,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241453,"byte_end":13241505,"line_start":766,"line_end":766,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241510,"byte_end":13241513,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241518,"byte_end":13241547,"line_start":768,"line_end":768,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241552,"byte_end":13241595,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241600,"byte_end":13241632,"line_start":770,"line_end":770,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241637,"byte_end":13241646,"line_start":771,"line_end":771,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241651,"byte_end":13241656,"line_start":772,"line_end":772,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241661,"byte_end":13241668,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241673,"byte_end":13241676,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241681,"byte_end":13241732,"line_start":775,"line_end":775,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241737,"byte_end":13241740,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241745,"byte_end":13241752,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241757,"byte_end":13241786,"line_start":778,"line_end":778,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241791,"byte_end":13241794,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241799,"byte_end":13241817,"line_start":780,"line_end":780,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241822,"byte_end":13241843,"line_start":781,"line_end":781,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241848,"byte_end":13241894,"line_start":782,"line_end":782,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241899,"byte_end":13241902,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241907,"byte_end":13241956,"line_start":784,"line_end":784,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241961,"byte_end":13241964,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241969,"byte_end":13241988,"line_start":786,"line_end":786,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13241993,"byte_end":13241996,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242001,"byte_end":13242042,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242047,"byte_end":13242087,"line_start":789,"line_end":789,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242092,"byte_end":13242097,"line_start":790,"line_end":790,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242102,"byte_end":13242109,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13244124,"byte_end":13244132,"line_start":861,"line_end":861,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242239,"byte_end":13242271,"line_start":798,"line_end":798,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242276,"byte_end":13242279,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242284,"byte_end":13242357,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242362,"byte_end":13242428,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242433,"byte_end":13242457,"line_start":802,"line_end":802,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242462,"byte_end":13242465,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242470,"byte_end":13242536,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242541,"byte_end":13242563,"line_start":805,"line_end":805,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242568,"byte_end":13242571,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242576,"byte_end":13242588,"line_start":807,"line_end":807,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242593,"byte_end":13242596,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242601,"byte_end":13242652,"line_start":809,"line_end":809,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242657,"byte_end":13242720,"line_start":810,"line_end":810,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242725,"byte_end":13242800,"line_start":811,"line_end":811,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242805,"byte_end":13242819,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242824,"byte_end":13242827,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242832,"byte_end":13242846,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242851,"byte_end":13242854,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242859,"byte_end":13242909,"line_start":816,"line_end":816,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242914,"byte_end":13242917,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242922,"byte_end":13242929,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242934,"byte_end":13242963,"line_start":819,"line_end":819,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13242968,"byte_end":13243018,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243023,"byte_end":13243026,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243031,"byte_end":13243049,"line_start":822,"line_end":822,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243054,"byte_end":13243075,"line_start":823,"line_end":823,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243080,"byte_end":13243126,"line_start":824,"line_end":824,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243131,"byte_end":13243134,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243139,"byte_end":13243168,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243173,"byte_end":13243218,"line_start":827,"line_end":827,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243223,"byte_end":13243265,"line_start":828,"line_end":828,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243270,"byte_end":13243302,"line_start":829,"line_end":829,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243307,"byte_end":13243316,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243321,"byte_end":13243324,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243329,"byte_end":13243352,"line_start":832,"line_end":832,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243357,"byte_end":13243391,"line_start":833,"line_end":833,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243396,"byte_end":13243399,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243404,"byte_end":13243433,"line_start":835,"line_end":835,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243438,"byte_end":13243490,"line_start":836,"line_end":836,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243495,"byte_end":13243527,"line_start":837,"line_end":837,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243532,"byte_end":13243541,"line_start":838,"line_end":838,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243546,"byte_end":13243551,"line_start":839,"line_end":839,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243556,"byte_end":13243563,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243568,"byte_end":13243571,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243576,"byte_end":13243637,"line_start":842,"line_end":842,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243642,"byte_end":13243645,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243650,"byte_end":13243657,"line_start":844,"line_end":844,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243662,"byte_end":13243691,"line_start":845,"line_end":845,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243696,"byte_end":13243746,"line_start":846,"line_end":846,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243751,"byte_end":13243754,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243759,"byte_end":13243777,"line_start":848,"line_end":848,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243782,"byte_end":13243803,"line_start":849,"line_end":849,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243808,"byte_end":13243860,"line_start":850,"line_end":850,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243865,"byte_end":13243868,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243873,"byte_end":13243890,"line_start":852,"line_end":852,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243895,"byte_end":13243898,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243903,"byte_end":13243932,"line_start":854,"line_end":854,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243937,"byte_end":13243991,"line_start":855,"line_end":855,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13243996,"byte_end":13244039,"line_start":856,"line_end":856,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13244044,"byte_end":13244076,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13244081,"byte_end":13244090,"line_start":858,"line_end":858,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13244095,"byte_end":13244100,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13244105,"byte_end":13244112,"line_start":860,"line_end":860,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256736,"byte_end":13256742,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256610,"byte_end":13256675,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256680,"byte_end":13256683,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256688,"byte_end":13256731,"line_start":52,"line_end":52,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256797,"byte_end":13256806,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256749,"byte_end":13256792,"line_start":55,"line_end":55,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3530},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256588,"byte_end":13256603,"line_start":49,"line_end":49,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3533}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256414,"byte_end":13256478,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256479,"byte_end":13256482,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256483,"byte_end":13256550,"line_start":47,"line_end":47,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13257092,"byte_end":13257104,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256810,"byte_end":13256870,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256871,"byte_end":13256874,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256875,"byte_end":13256941,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256942,"byte_end":13256955,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256956,"byte_end":13256959,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13256960,"byte_end":13257003,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13257004,"byte_end":13257063,"line_start":64,"line_end":64,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3545},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278101,"byte_end":13278110,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":3546}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275541,"byte_end":13275607,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275608,"byte_end":13275611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275612,"byte_end":13275687,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275688,"byte_end":13275764,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275765,"byte_end":13275845,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275846,"byte_end":13275855,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275856,"byte_end":13275859,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275860,"byte_end":13275933,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13275934,"byte_end":13276013,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276014,"byte_end":13276092,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276093,"byte_end":13276164,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276165,"byte_end":13276168,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276169,"byte_end":13276250,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276251,"byte_end":13276330,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276331,"byte_end":13276410,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276411,"byte_end":13276490,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276491,"byte_end":13276570,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276571,"byte_end":13276588,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276589,"byte_end":13276592,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276593,"byte_end":13276673,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276674,"byte_end":13276686,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276687,"byte_end":13276690,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276691,"byte_end":13276705,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276706,"byte_end":13276709,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276710,"byte_end":13276726,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276727,"byte_end":13276730,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276731,"byte_end":13276738,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276739,"byte_end":13276789,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276790,"byte_end":13276793,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276794,"byte_end":13276812,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276813,"byte_end":13276834,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Semaphore::new(3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276835,"byte_end":13276877,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276878,"byte_end":13276881,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     let a_permit = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276882,"byte_end":13276940,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/     let two_permits = semaphore.acquire_many(2).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13276941,"byte_end":13277008,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277009,"byte_end":13277012,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277013,"byte_end":13277066,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277067,"byte_end":13277070,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     let permit_attempt = semaphore.try_acquire();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277071,"byte_end":13277124,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/     assert_eq!(permit_attempt.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277125,"byte_end":13277200,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277201,"byte_end":13277206,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277207,"byte_end":13277214,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277215,"byte_end":13277218,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Use [`Semaphore::acquire_owned`] to move permits across tasks:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277219,"byte_end":13277285,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277286,"byte_end":13277289,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277290,"byte_end":13277297,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277298,"byte_end":13277321,"line_start":51,"line_end":51,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277322,"byte_end":13277353,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277354,"byte_end":13277357,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277358,"byte_end":13277376,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277377,"byte_end":13277398,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277399,"byte_end":13277451,"line_start":56,"line_end":56,"column_start":1,"column_end":53}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277452,"byte_end":13277494,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277495,"byte_end":13277498,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277499,"byte_end":13277522,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277523,"byte_end":13277597,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277598,"byte_end":13277653,"line_start":61,"line_end":61,"column_start":1,"column_end":56}},{"value":"/             // perform task...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277654,"byte_end":13277688,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277689,"byte_end":13277743,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/             drop(permit);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277744,"byte_end":13277773,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/         }));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277774,"byte_end":13277790,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277791,"byte_end":13277800,"line_start":66,"line_end":66,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277801,"byte_end":13277804,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277805,"byte_end":13277841,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277842,"byte_end":13277876,"line_start":69,"line_end":69,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277877,"byte_end":13277886,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277887,"byte_end":13277892,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277893,"byte_end":13277900,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277901,"byte_end":13277904,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13277905,"byte_end":13278000,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/ [`Semaphore::acquire_owned`]: crate::sync::Semaphore::acquire_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278001,"byte_end":13278072,"line_start":75,"line_end":75,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278359,"byte_end":13278374,"line_start":89,"line_end":89,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278175,"byte_end":13278207,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278208,"byte_end":13278211,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278212,"byte_end":13278263,"line_start":84,"line_end":84,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278264,"byte_end":13278267,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278268,"byte_end":13278318,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278319,"byte_end":13278330,"line_start":87,"line_end":87,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278635,"byte_end":13278655,"line_start":101,"line_end":101,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278426,"byte_end":13278465,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278466,"byte_end":13278469,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278470,"byte_end":13278527,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278528,"byte_end":13278531,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278532,"byte_end":13278594,"line_start":98,"line_end":98,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13278595,"byte_end":13278606,"line_start":99,"line_end":99,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279251,"byte_end":13279254,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279176,"byte_end":13279239,"line_start":122,"line_end":122,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279929,"byte_end":13279946,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279865,"byte_end":13279917,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280193,"byte_end":13280204,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280016,"byte_end":13280058,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280063,"byte_end":13280066,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280071,"byte_end":13280181,"line_start":154,"line_end":154,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281408,"byte_end":13281415,"line_start":193,"line_end":193,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280267,"byte_end":13280308,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280313,"byte_end":13280316,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280321,"byte_end":13280392,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280397,"byte_end":13280463,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280468,"byte_end":13280488,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280493,"byte_end":13280496,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280501,"byte_end":13280520,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280525,"byte_end":13280528,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280533,"byte_end":13280608,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire` makes you lose your place","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280613,"byte_end":13280689,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280694,"byte_end":13280711,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280716,"byte_end":13280719,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280724,"byte_end":13280738,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280743,"byte_end":13280746,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280751,"byte_end":13280758,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280763,"byte_end":13280794,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280799,"byte_end":13280802,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280807,"byte_end":13280825,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280830,"byte_end":13280851,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280856,"byte_end":13280898,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280903,"byte_end":13280906,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     let permit_1 = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280911,"byte_end":13280969,"line_start":180,"line_end":180,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13280974,"byte_end":13281027,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281032,"byte_end":13281035,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/     let permit_2 = semaphore.acquire().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281040,"byte_end":13281098,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281103,"byte_end":13281156,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281161,"byte_end":13281164,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/     drop(permit_1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281169,"byte_end":13281192,"line_start":186,"line_end":186,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281197,"byte_end":13281250,"line_start":187,"line_end":187,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281255,"byte_end":13281260,"line_start":188,"line_end":188,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281265,"byte_end":13281272,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281277,"byte_end":13281280,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281285,"byte_end":13281332,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281337,"byte_end":13281390,"line_start":192,"line_end":192,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282538,"byte_end":13282550,"line_start":229,"line_end":229,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281607,"byte_end":13281651,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281656,"byte_end":13281659,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281664,"byte_end":13281735,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281740,"byte_end":13281806,"line_start":204,"line_end":204,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281811,"byte_end":13281832,"line_start":205,"line_end":205,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281837,"byte_end":13281840,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281845,"byte_end":13281864,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281869,"byte_end":13281872,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281877,"byte_end":13281952,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13281957,"byte_end":13282032,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282037,"byte_end":13282060,"line_start":211,"line_end":211,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282065,"byte_end":13282068,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282073,"byte_end":13282087,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282092,"byte_end":13282095,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282100,"byte_end":13282107,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282112,"byte_end":13282143,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282148,"byte_end":13282151,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282156,"byte_end":13282174,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282179,"byte_end":13282200,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282205,"byte_end":13282247,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282252,"byte_end":13282255,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     let permit = semaphore.acquire_many(3).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282260,"byte_end":13282322,"line_start":222,"line_end":222,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(semaphore.available_permits(), 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282327,"byte_end":13282380,"line_start":223,"line_end":223,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282385,"byte_end":13282390,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282395,"byte_end":13282402,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282407,"byte_end":13282410,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282415,"byte_end":13282462,"line_start":227,"line_end":227,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282467,"byte_end":13282520,"line_start":228,"line_end":228,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283851,"byte_end":13283862,"line_start":265,"line_end":265,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282750,"byte_end":13282799,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282804,"byte_end":13282807,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282812,"byte_end":13282892,"line_start":239,"line_end":239,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282897,"byte_end":13282978,"line_start":240,"line_end":240,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13282983,"byte_end":13283056,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283061,"byte_end":13283064,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283069,"byte_end":13283083,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283088,"byte_end":13283091,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283096,"byte_end":13283103,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283108,"byte_end":13283158,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283163,"byte_end":13283166,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283171,"byte_end":13283188,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283193,"byte_end":13283231,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283236,"byte_end":13283239,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283244,"byte_end":13283296,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283301,"byte_end":13283350,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283355,"byte_end":13283358,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283363,"byte_end":13283415,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283420,"byte_end":13283469,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283474,"byte_end":13283477,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283482,"byte_end":13283525,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283530,"byte_end":13283595,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283600,"byte_end":13283607,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283612,"byte_end":13283619,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283624,"byte_end":13283627,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283632,"byte_end":13283701,"line_start":262,"line_end":262,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283706,"byte_end":13283781,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13283786,"byte_end":13283839,"line_start":264,"line_end":264,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285132,"byte_end":13285148,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284127,"byte_end":13284179,"line_start":275,"line_end":275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284184,"byte_end":13284187,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284192,"byte_end":13284272,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are not enough permits left.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284277,"byte_end":13284355,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284360,"byte_end":13284444,"line_start":279,"line_end":279,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284449,"byte_end":13284452,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284457,"byte_end":13284471,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284476,"byte_end":13284479,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284484,"byte_end":13284491,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284496,"byte_end":13284546,"line_start":284,"line_end":284,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284551,"byte_end":13284554,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284559,"byte_end":13284576,"line_start":286,"line_end":286,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(4);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284581,"byte_end":13284619,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284624,"byte_end":13284627,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire_many(3).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284632,"byte_end":13284690,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284695,"byte_end":13284744,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284749,"byte_end":13284752,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284757,"byte_end":13284806,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284811,"byte_end":13284876,"line_start":293,"line_end":293,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284881,"byte_end":13284888,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284893,"byte_end":13284900,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284905,"byte_end":13284908,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284913,"byte_end":13284982,"line_start":297,"line_end":297,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13284987,"byte_end":13285062,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285067,"byte_end":13285120,"line_start":299,"line_end":299,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286865,"byte_end":13286878,"line_start":352,"line_end":352,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285421,"byte_end":13285462,"line_start":310,"line_end":310,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285467,"byte_end":13285470,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285475,"byte_end":13285543,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285548,"byte_end":13285619,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285624,"byte_end":13285695,"line_start":314,"line_end":314,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285700,"byte_end":13285720,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285725,"byte_end":13285728,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285733,"byte_end":13285752,"line_start":317,"line_end":317,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285757,"byte_end":13285760,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285765,"byte_end":13285840,"line_start":319,"line_end":319,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_owned` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285845,"byte_end":13285921,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285926,"byte_end":13285949,"line_start":321,"line_end":321,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285954,"byte_end":13285957,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285962,"byte_end":13285976,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285981,"byte_end":13285984,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13285989,"byte_end":13285996,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286001,"byte_end":13286024,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286029,"byte_end":13286060,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286065,"byte_end":13286068,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286073,"byte_end":13286091,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286096,"byte_end":13286117,"line_start":330,"line_end":330,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286122,"byte_end":13286174,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286179,"byte_end":13286221,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286226,"byte_end":13286229,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286234,"byte_end":13286257,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286262,"byte_end":13286336,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286341,"byte_end":13286396,"line_start":336,"line_end":336,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286401,"byte_end":13286435,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286440,"byte_end":13286494,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286499,"byte_end":13286528,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286533,"byte_end":13286549,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286554,"byte_end":13286563,"line_start":341,"line_end":341,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286568,"byte_end":13286571,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286576,"byte_end":13286612,"line_start":343,"line_end":343,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286617,"byte_end":13286651,"line_start":344,"line_end":344,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286656,"byte_end":13286665,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286670,"byte_end":13286675,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286680,"byte_end":13286687,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286692,"byte_end":13286695,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286700,"byte_end":13286727,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286732,"byte_end":13286779,"line_start":350,"line_end":350,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13286784,"byte_end":13286847,"line_start":351,"line_end":351,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288545,"byte_end":13288563,"line_start":402,"line_end":402,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287086,"byte_end":13287130,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287135,"byte_end":13287138,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287143,"byte_end":13287211,"line_start":362,"line_end":362,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287216,"byte_end":13287287,"line_start":363,"line_end":363,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287292,"byte_end":13287363,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287368,"byte_end":13287388,"line_start":365,"line_end":365,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287393,"byte_end":13287396,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287401,"byte_end":13287420,"line_start":367,"line_end":367,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287425,"byte_end":13287428,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287433,"byte_end":13287508,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many_owned` makes you lose","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287513,"byte_end":13287589,"line_start":370,"line_end":370,"column_start":5,"column_end":81}},{"value":"/ your place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287594,"byte_end":13287622,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287627,"byte_end":13287630,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287635,"byte_end":13287649,"line_start":373,"line_end":373,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287654,"byte_end":13287657,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287662,"byte_end":13287669,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287674,"byte_end":13287697,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287702,"byte_end":13287733,"line_start":377,"line_end":377,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287738,"byte_end":13287741,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287746,"byte_end":13287764,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287769,"byte_end":13287790,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(10));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287795,"byte_end":13287848,"line_start":381,"line_end":381,"column_start":5,"column_end":58}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287853,"byte_end":13287895,"line_start":382,"line_end":382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287900,"byte_end":13287903,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287908,"byte_end":13287931,"line_start":384,"line_end":384,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_many_owned(2).await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13287936,"byte_end":13288016,"line_start":385,"line_end":385,"column_start":5,"column_end":85}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288021,"byte_end":13288076,"line_start":386,"line_end":386,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288081,"byte_end":13288115,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288120,"byte_end":13288174,"line_start":388,"line_end":388,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288179,"byte_end":13288208,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288213,"byte_end":13288229,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288234,"byte_end":13288243,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288248,"byte_end":13288251,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288256,"byte_end":13288292,"line_start":393,"line_end":393,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288297,"byte_end":13288331,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288336,"byte_end":13288345,"line_start":395,"line_end":395,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288350,"byte_end":13288355,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288360,"byte_end":13288367,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288372,"byte_end":13288375,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288380,"byte_end":13288407,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288412,"byte_end":13288459,"line_start":400,"line_end":400,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288464,"byte_end":13288527,"line_start":401,"line_end":401,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290112,"byte_end":13290129,"line_start":445,"line_end":445,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288802,"byte_end":13288851,"line_start":413,"line_end":413,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288856,"byte_end":13288859,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288864,"byte_end":13288935,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13288940,"byte_end":13289017,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289022,"byte_end":13289092,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289097,"byte_end":13289168,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289173,"byte_end":13289193,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289198,"byte_end":13289201,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289206,"byte_end":13289220,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289225,"byte_end":13289228,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289233,"byte_end":13289240,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289245,"byte_end":13289268,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289273,"byte_end":13289323,"line_start":425,"line_end":425,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289328,"byte_end":13289331,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289336,"byte_end":13289353,"line_start":427,"line_end":427,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289358,"byte_end":13289406,"line_start":428,"line_end":428,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289411,"byte_end":13289414,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289419,"byte_end":13289490,"line_start":430,"line_end":430,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289495,"byte_end":13289544,"line_start":431,"line_end":431,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289549,"byte_end":13289552,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289557,"byte_end":13289628,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289633,"byte_end":13289682,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289687,"byte_end":13289690,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire_owned();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289695,"byte_end":13289744,"line_start":436,"line_end":436,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289749,"byte_end":13289814,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289819,"byte_end":13289826,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289831,"byte_end":13289838,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289843,"byte_end":13289846,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289851,"byte_end":13289878,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289883,"byte_end":13289952,"line_start":442,"line_end":442,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13289957,"byte_end":13290032,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290037,"byte_end":13290100,"line_start":444,"line_end":444,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291597,"byte_end":13291619,"line_start":484,"line_end":484,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290410,"byte_end":13290462,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290467,"byte_end":13290470,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290475,"byte_end":13290546,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290551,"byte_end":13290628,"line_start":458,"line_end":458,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290633,"byte_end":13290703,"line_start":459,"line_end":459,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290708,"byte_end":13290779,"line_start":460,"line_end":460,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290784,"byte_end":13290804,"line_start":461,"line_end":461,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290809,"byte_end":13290812,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290817,"byte_end":13290831,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290836,"byte_end":13290839,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290844,"byte_end":13290851,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290856,"byte_end":13290879,"line_start":466,"line_end":466,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290884,"byte_end":13290934,"line_start":467,"line_end":467,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290939,"byte_end":13290942,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290947,"byte_end":13290964,"line_start":469,"line_end":469,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(4));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13290969,"byte_end":13291017,"line_start":470,"line_end":470,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291022,"byte_end":13291025,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_many_owned(3).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291030,"byte_end":13291107,"line_start":472,"line_end":472,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291112,"byte_end":13291161,"line_start":473,"line_end":473,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291166,"byte_end":13291169,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many_owned(2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291174,"byte_end":13291229,"line_start":475,"line_end":475,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291234,"byte_end":13291299,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291304,"byte_end":13291311,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291316,"byte_end":13291323,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291328,"byte_end":13291331,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291336,"byte_end":13291363,"line_start":480,"line_end":480,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291368,"byte_end":13291437,"line_start":481,"line_end":481,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291442,"byte_end":13291517,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291522,"byte_end":13291585,"line_start":483,"line_end":483,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292844,"byte_end":13292849,"line_start":526,"line_end":526,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291931,"byte_end":13291956,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291961,"byte_end":13291964,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13291969,"byte_end":13292059,"line_start":499,"line_end":499,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292064,"byte_end":13292067,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292072,"byte_end":13292086,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292091,"byte_end":13292094,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292099,"byte_end":13292106,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292111,"byte_end":13292142,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292147,"byte_end":13292170,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292175,"byte_end":13292212,"line_start":506,"line_end":506,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292217,"byte_end":13292220,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292225,"byte_end":13292243,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292248,"byte_end":13292269,"line_start":509,"line_end":509,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292274,"byte_end":13292326,"line_start":510,"line_end":510,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292331,"byte_end":13292374,"line_start":511,"line_end":511,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292379,"byte_end":13292382,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292387,"byte_end":13292420,"line_start":513,"line_end":513,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292425,"byte_end":13292482,"line_start":514,"line_end":514,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292487,"byte_end":13292524,"line_start":515,"line_end":515,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292529,"byte_end":13292575,"line_start":516,"line_end":516,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292580,"byte_end":13292591,"line_start":517,"line_end":517,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292596,"byte_end":13292599,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292604,"byte_end":13292642,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292647,"byte_end":13292674,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292679,"byte_end":13292682,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292687,"byte_end":13292724,"line_start":522,"line_end":522,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292729,"byte_end":13292810,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292815,"byte_end":13292820,"line_start":524,"line_end":524,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292825,"byte_end":13292832,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292954,"byte_end":13292963,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13292899,"byte_end":13292942,"line_start":530,"line_end":530,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293232,"byte_end":13293238,"line_start":540,"line_end":540,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293057,"byte_end":13293127,"line_start":537,"line_end":537,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293132,"byte_end":13293201,"line_start":538,"line_end":538,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293206,"byte_end":13293220,"line_start":539,"line_end":539,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293493,"byte_end":13293499,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293318,"byte_end":13293388,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293393,"byte_end":13293462,"line_start":547,"line_end":547,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293467,"byte_end":13293481,"line_start":548,"line_end":548,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318895,"byte_end":13318915,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318604,"byte_end":13318682,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318683,"byte_end":13318695,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318696,"byte_end":13318699,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318700,"byte_end":13318761,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318762,"byte_end":13318777,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318778,"byte_end":13318781,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318782,"byte_end":13318840,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13318841,"byte_end":13318883,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320147,"byte_end":13320150,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319217,"byte_end":13319291,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319296,"byte_end":13319366,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319371,"byte_end":13319399,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319404,"byte_end":13319407,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319412,"byte_end":13319463,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319468,"byte_end":13319543,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319548,"byte_end":13319612,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319617,"byte_end":13319620,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319625,"byte_end":13319639,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319644,"byte_end":13319647,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319652,"byte_end":13319659,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319664,"byte_end":13319687,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319692,"byte_end":13319744,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319749,"byte_end":13319752,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319757,"byte_end":13319805,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319810,"byte_end":13319830,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319835,"byte_end":13319838,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319843,"byte_end":13319863,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319868,"byte_end":13319891,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319896,"byte_end":13319941,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319946,"byte_end":13319949,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319954,"byte_end":13319994,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319999,"byte_end":13320058,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320063,"byte_end":13320066,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320071,"byte_end":13320097,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320102,"byte_end":13320109,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320114,"byte_end":13320121,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320126,"byte_end":13320135,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321667,"byte_end":13321674,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320599,"byte_end":13320673,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320678,"byte_end":13320748,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320753,"byte_end":13320764,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320769,"byte_end":13320772,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320777,"byte_end":13320847,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320852,"byte_end":13320880,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320885,"byte_end":13320888,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320893,"byte_end":13320952,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13320957,"byte_end":13321027,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321032,"byte_end":13321096,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321101,"byte_end":13321104,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321109,"byte_end":13321123,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321128,"byte_end":13321131,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321136,"byte_end":13321143,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321148,"byte_end":13321171,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321176,"byte_end":13321228,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321233,"byte_end":13321236,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321241,"byte_end":13321289,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321294,"byte_end":13321314,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321319,"byte_end":13321322,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321327,"byte_end":13321347,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321352,"byte_end":13321375,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321380,"byte_end":13321425,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321430,"byte_end":13321433,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321438,"byte_end":13321478,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321483,"byte_end":13321578,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321583,"byte_end":13321586,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321591,"byte_end":13321617,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321622,"byte_end":13321629,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321634,"byte_end":13321641,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13321646,"byte_end":13321655,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323587,"byte_end":13323608,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323289,"byte_end":13323371,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323372,"byte_end":13323384,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323385,"byte_end":13323388,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323389,"byte_end":13323448,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323449,"byte_end":13323467,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323468,"byte_end":13323471,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323472,"byte_end":13323532,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323533,"byte_end":13323575,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324967,"byte_end":13324970,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323918,"byte_end":13323995,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/ data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324000,"byte_end":13324009,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324014,"byte_end":13324017,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324022,"byte_end":13324093,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324098,"byte_end":13324126,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324131,"byte_end":13324134,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324139,"byte_end":13324198,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324203,"byte_end":13324278,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324283,"byte_end":13324339,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324344,"byte_end":13324347,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324352,"byte_end":13324366,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324371,"byte_end":13324374,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324379,"byte_end":13324386,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324391,"byte_end":13324414,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324419,"byte_end":13324472,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324477,"byte_end":13324480,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324485,"byte_end":13324533,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324538,"byte_end":13324558,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324563,"byte_end":13324566,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324571,"byte_end":13324591,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324596,"byte_end":13324619,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324624,"byte_end":13324669,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324674,"byte_end":13324677,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324682,"byte_end":13324687,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324692,"byte_end":13324729,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324734,"byte_end":13324826,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324831,"byte_end":13324851,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324856,"byte_end":13324861,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324866,"byte_end":13324869,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324874,"byte_end":13324917,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324922,"byte_end":13324929,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324934,"byte_end":13324941,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13324946,"byte_end":13324955,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326786,"byte_end":13326793,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325527,"byte_end":13325602,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325607,"byte_end":13325676,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325681,"byte_end":13325700,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325705,"byte_end":13325708,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325713,"byte_end":13325784,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325789,"byte_end":13325817,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325822,"byte_end":13325825,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325830,"byte_end":13325881,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325886,"byte_end":13325961,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13325966,"byte_end":13326035,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326040,"byte_end":13326043,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326048,"byte_end":13326122,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326127,"byte_end":13326130,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326135,"byte_end":13326149,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326154,"byte_end":13326157,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326162,"byte_end":13326169,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326174,"byte_end":13326197,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326202,"byte_end":13326255,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326260,"byte_end":13326263,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326268,"byte_end":13326316,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326321,"byte_end":13326341,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326346,"byte_end":13326349,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326354,"byte_end":13326374,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326379,"byte_end":13326402,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326407,"byte_end":13326452,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326457,"byte_end":13326460,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326465,"byte_end":13326470,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326475,"byte_end":13326533,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326538,"byte_end":13326646,"line_start":105,"line_end":105,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326651,"byte_end":13326670,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326675,"byte_end":13326680,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326685,"byte_end":13326688,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326693,"byte_end":13326736,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326741,"byte_end":13326748,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326753,"byte_end":13326760,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13326765,"byte_end":13326774,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327800,"byte_end":13327811,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327487,"byte_end":13327536,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327541,"byte_end":13327610,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327615,"byte_end":13327682,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327687,"byte_end":13327690,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327695,"byte_end":13327774,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327779,"byte_end":13327788,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329044,"byte_end":13329053,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327904,"byte_end":13327976,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13327981,"byte_end":13328050,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328055,"byte_end":13328058,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328063,"byte_end":13328141,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328146,"byte_end":13328222,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328227,"byte_end":13328239,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328244,"byte_end":13328247,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328252,"byte_end":13328326,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328331,"byte_end":13328348,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328353,"byte_end":13328356,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328361,"byte_end":13328375,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328380,"byte_end":13328383,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328388,"byte_end":13328395,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328400,"byte_end":13328430,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328435,"byte_end":13328460,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328465,"byte_end":13328470,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328475,"byte_end":13328495,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328500,"byte_end":13328523,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328528,"byte_end":13328568,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328573,"byte_end":13328576,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328581,"byte_end":13328626,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328631,"byte_end":13328634,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328639,"byte_end":13328674,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328679,"byte_end":13328721,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328726,"byte_end":13328771,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328776,"byte_end":13328783,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328788,"byte_end":13328791,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328796,"byte_end":13328822,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328827,"byte_end":13328872,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328877,"byte_end":13328880,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328885,"byte_end":13328897,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328902,"byte_end":13328928,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13328933,"byte_end":13329008,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329013,"byte_end":13329020,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329025,"byte_end":13329032,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331047,"byte_end":13331074,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330580,"byte_end":13330662,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330663,"byte_end":13330675,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330676,"byte_end":13330679,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330680,"byte_end":13330760,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330761,"byte_end":13330840,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330841,"byte_end":13330896,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330897,"byte_end":13330900,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330901,"byte_end":13330962,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13330963,"byte_end":13331035,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332472,"byte_end":13332475,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331419,"byte_end":13331494,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331499,"byte_end":13331508,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331513,"byte_end":13331516,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331521,"byte_end":13331595,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331600,"byte_end":13331631,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331636,"byte_end":13331639,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331644,"byte_end":13331703,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331708,"byte_end":13331783,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331788,"byte_end":13331844,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331849,"byte_end":13331852,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331857,"byte_end":13331871,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331876,"byte_end":13331879,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331884,"byte_end":13331891,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331896,"byte_end":13331919,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331924,"byte_end":13331977,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331982,"byte_end":13331985,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331990,"byte_end":13332038,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332043,"byte_end":13332063,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332068,"byte_end":13332071,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332076,"byte_end":13332096,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332101,"byte_end":13332124,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332129,"byte_end":13332174,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332179,"byte_end":13332182,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332187,"byte_end":13332192,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332197,"byte_end":13332234,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332239,"byte_end":13332331,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332336,"byte_end":13332356,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332361,"byte_end":13332366,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332371,"byte_end":13332374,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332379,"byte_end":13332422,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332427,"byte_end":13332434,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332439,"byte_end":13332446,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13332451,"byte_end":13332460,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334213,"byte_end":13334220,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333032,"byte_end":13333104,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333109,"byte_end":13333178,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333183,"byte_end":13333202,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333207,"byte_end":13333210,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333215,"byte_end":13333289,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333294,"byte_end":13333325,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333330,"byte_end":13333333,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333338,"byte_end":13333389,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333394,"byte_end":13333480,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333485,"byte_end":13333549,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333554,"byte_end":13333557,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333562,"byte_end":13333576,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333581,"byte_end":13333584,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333589,"byte_end":13333596,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333601,"byte_end":13333624,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333629,"byte_end":13333682,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333687,"byte_end":13333690,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333695,"byte_end":13333743,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333748,"byte_end":13333768,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333773,"byte_end":13333776,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333781,"byte_end":13333801,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333806,"byte_end":13333829,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333834,"byte_end":13333879,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333884,"byte_end":13333887,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333892,"byte_end":13333897,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333902,"byte_end":13333960,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13333965,"byte_end":13334073,"line_start":102,"line_end":102,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334078,"byte_end":13334097,"line_start":103,"line_end":103,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334102,"byte_end":13334107,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334112,"byte_end":13334115,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334120,"byte_end":13334163,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334168,"byte_end":13334175,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334180,"byte_end":13334187,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334192,"byte_end":13334201,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336267,"byte_end":13336282,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336000,"byte_end":13336072,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336073,"byte_end":13336085,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336086,"byte_end":13336089,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336090,"byte_end":13336145,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336146,"byte_end":13336161,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336162,"byte_end":13336165,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336166,"byte_end":13336212,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336213,"byte_end":13336255,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337642,"byte_end":13337645,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336467,"byte_end":13336536,"line_start":22,"line_end":22,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336541,"byte_end":13336544,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336549,"byte_end":13336622,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336627,"byte_end":13336647,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336652,"byte_end":13336655,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336660,"byte_end":13336711,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336716,"byte_end":13336786,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336791,"byte_end":13336855,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336860,"byte_end":13336863,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336868,"byte_end":13336940,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336945,"byte_end":13336971,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336976,"byte_end":13336979,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336984,"byte_end":13337093,"line_start":34,"line_end":34,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337098,"byte_end":13337161,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337166,"byte_end":13337169,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337174,"byte_end":13337188,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337193,"byte_end":13337196,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337201,"byte_end":13337208,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337213,"byte_end":13337260,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337265,"byte_end":13337268,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337273,"byte_end":13337321,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337326,"byte_end":13337346,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337351,"byte_end":13337354,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337359,"byte_end":13337379,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337384,"byte_end":13337407,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337412,"byte_end":13337447,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337452,"byte_end":13337455,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337460,"byte_end":13337494,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337499,"byte_end":13337553,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337558,"byte_end":13337561,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337566,"byte_end":13337592,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337597,"byte_end":13337604,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337609,"byte_end":13337616,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13337621,"byte_end":13337630,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339340,"byte_end":13339347,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338023,"byte_end":13338092,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338097,"byte_end":13338167,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338172,"byte_end":13338183,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338188,"byte_end":13338191,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338196,"byte_end":13338269,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338274,"byte_end":13338294,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338299,"byte_end":13338302,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338307,"byte_end":13338366,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338371,"byte_end":13338451,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338456,"byte_end":13338505,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338510,"byte_end":13338513,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338518,"byte_end":13338594,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338599,"byte_end":13338625,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338630,"byte_end":13338633,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338638,"byte_end":13338755,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338760,"byte_end":13338823,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338828,"byte_end":13338831,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338836,"byte_end":13338850,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338855,"byte_end":13338858,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338863,"byte_end":13338870,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338875,"byte_end":13338922,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338927,"byte_end":13338930,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338935,"byte_end":13338983,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13338988,"byte_end":13339008,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339013,"byte_end":13339016,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339021,"byte_end":13339041,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339046,"byte_end":13339069,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339074,"byte_end":13339109,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339114,"byte_end":13339117,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339122,"byte_end":13339156,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339161,"byte_end":13339251,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339256,"byte_end":13339259,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339264,"byte_end":13339290,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339295,"byte_end":13339302,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339307,"byte_end":13339314,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339319,"byte_end":13339328,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340992,"byte_end":13341008,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340718,"byte_end":13340794,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340795,"byte_end":13340807,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340808,"byte_end":13340811,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340812,"byte_end":13340865,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340866,"byte_end":13340884,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340885,"byte_end":13340888,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340889,"byte_end":13340937,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13340938,"byte_end":13340980,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342552,"byte_end":13342555,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341234,"byte_end":13341312,"line_start":25,"line_end":25,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341317,"byte_end":13341320,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341325,"byte_end":13341399,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341404,"byte_end":13341424,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341429,"byte_end":13341432,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341437,"byte_end":13341496,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341501,"byte_end":13341574,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341579,"byte_end":13341632,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341637,"byte_end":13341640,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341645,"byte_end":13341718,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341723,"byte_end":13341749,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341754,"byte_end":13341757,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341762,"byte_end":13341836,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341841,"byte_end":13341952,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341957,"byte_end":13342020,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342025,"byte_end":13342028,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342033,"byte_end":13342047,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342052,"byte_end":13342055,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342060,"byte_end":13342067,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342072,"byte_end":13342120,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342125,"byte_end":13342128,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342133,"byte_end":13342181,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342186,"byte_end":13342206,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342211,"byte_end":13342214,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342219,"byte_end":13342239,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342244,"byte_end":13342267,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342272,"byte_end":13342307,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342312,"byte_end":13342315,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342320,"byte_end":13342325,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342330,"byte_end":13342411,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342416,"byte_end":13342436,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342441,"byte_end":13342446,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342451,"byte_end":13342454,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342459,"byte_end":13342502,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342507,"byte_end":13342514,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342519,"byte_end":13342526,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13342531,"byte_end":13342540,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344535,"byte_end":13344542,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343045,"byte_end":13343118,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343123,"byte_end":13343197,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343202,"byte_end":13343213,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343218,"byte_end":13343221,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343226,"byte_end":13343300,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343305,"byte_end":13343325,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343330,"byte_end":13343333,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343338,"byte_end":13343389,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343394,"byte_end":13343469,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343474,"byte_end":13343538,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343543,"byte_end":13343546,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343551,"byte_end":13343624,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343629,"byte_end":13343659,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343664,"byte_end":13343667,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343672,"byte_end":13343746,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343751,"byte_end":13343870,"line_start":94,"line_end":94,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343875,"byte_end":13343938,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343943,"byte_end":13343946,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343951,"byte_end":13343965,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343970,"byte_end":13343973,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343978,"byte_end":13343985,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13343990,"byte_end":13344038,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344043,"byte_end":13344046,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344051,"byte_end":13344099,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344104,"byte_end":13344124,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344129,"byte_end":13344132,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344137,"byte_end":13344157,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344162,"byte_end":13344185,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344190,"byte_end":13344225,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344230,"byte_end":13344233,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344238,"byte_end":13344243,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344248,"byte_end":13344287,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344292,"byte_end":13344395,"line_start":111,"line_end":111,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344400,"byte_end":13344419,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344424,"byte_end":13344429,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344434,"byte_end":13344437,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344442,"byte_end":13344485,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344490,"byte_end":13344497,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344502,"byte_end":13344509,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13344514,"byte_end":13344523,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345467,"byte_end":13345478,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345169,"byte_end":13345244,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345249,"byte_end":13345322,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345327,"byte_end":13345354,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345359,"byte_end":13345362,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345367,"byte_end":13345441,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345446,"byte_end":13345455,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346757,"byte_end":13346766,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345582,"byte_end":13345654,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345659,"byte_end":13345728,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345733,"byte_end":13345736,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345741,"byte_end":13345819,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345824,"byte_end":13345900,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345905,"byte_end":13345917,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345922,"byte_end":13345925,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13345930,"byte_end":13346004,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346009,"byte_end":13346026,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346031,"byte_end":13346034,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346039,"byte_end":13346053,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346058,"byte_end":13346061,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346066,"byte_end":13346073,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346078,"byte_end":13346108,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346113,"byte_end":13346138,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346143,"byte_end":13346148,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346153,"byte_end":13346173,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346178,"byte_end":13346201,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346206,"byte_end":13346246,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346251,"byte_end":13346254,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346259,"byte_end":13346290,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346295,"byte_end":13346298,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346303,"byte_end":13346338,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346343,"byte_end":13346385,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346390,"byte_end":13346429,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346434,"byte_end":13346441,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346446,"byte_end":13346449,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346454,"byte_end":13346480,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346485,"byte_end":13346530,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346535,"byte_end":13346538,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346543,"byte_end":13346555,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346560,"byte_end":13346586,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346591,"byte_end":13346666,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346671,"byte_end":13346678,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346683,"byte_end":13346690,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346695,"byte_end":13346698,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13346703,"byte_end":13346745,"line_start":188,"line_end":188,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348559,"byte_end":13348581,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348123,"byte_end":13348199,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348200,"byte_end":13348212,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348213,"byte_end":13348216,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348217,"byte_end":13348292,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348293,"byte_end":13348367,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348368,"byte_end":13348423,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348424,"byte_end":13348427,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348428,"byte_end":13348484,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348485,"byte_end":13348547,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350062,"byte_end":13350065,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348813,"byte_end":13348889,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348894,"byte_end":13348897,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348902,"byte_end":13348982,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348987,"byte_end":13349007,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349012,"byte_end":13349015,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349020,"byte_end":13349079,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349084,"byte_end":13349160,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349165,"byte_end":13349221,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349226,"byte_end":13349229,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349234,"byte_end":13349307,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349312,"byte_end":13349338,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349343,"byte_end":13349346,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349351,"byte_end":13349462,"line_start":36,"line_end":36,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349467,"byte_end":13349530,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349535,"byte_end":13349538,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349543,"byte_end":13349557,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349562,"byte_end":13349565,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349570,"byte_end":13349577,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349582,"byte_end":13349630,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349635,"byte_end":13349638,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349643,"byte_end":13349691,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349696,"byte_end":13349716,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349721,"byte_end":13349724,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349729,"byte_end":13349749,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349754,"byte_end":13349777,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349782,"byte_end":13349817,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349822,"byte_end":13349825,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349830,"byte_end":13349835,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349840,"byte_end":13349921,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349926,"byte_end":13349946,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349951,"byte_end":13349956,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349961,"byte_end":13349964,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13349969,"byte_end":13350012,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350017,"byte_end":13350024,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350029,"byte_end":13350036,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350041,"byte_end":13350050,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351977,"byte_end":13351984,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350555,"byte_end":13350627,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350632,"byte_end":13350706,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350711,"byte_end":13350722,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350727,"byte_end":13350730,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350735,"byte_end":13350815,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350820,"byte_end":13350840,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350845,"byte_end":13350848,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350853,"byte_end":13350904,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350909,"byte_end":13350985,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13350990,"byte_end":13351059,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351064,"byte_end":13351067,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351072,"byte_end":13351145,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351150,"byte_end":13351180,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351185,"byte_end":13351188,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351193,"byte_end":13351312,"line_start":91,"line_end":91,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351317,"byte_end":13351380,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351385,"byte_end":13351388,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351393,"byte_end":13351407,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351412,"byte_end":13351415,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351420,"byte_end":13351427,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351432,"byte_end":13351480,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351485,"byte_end":13351488,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351493,"byte_end":13351541,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351546,"byte_end":13351566,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351571,"byte_end":13351574,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351579,"byte_end":13351599,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351604,"byte_end":13351627,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351632,"byte_end":13351667,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351672,"byte_end":13351675,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351680,"byte_end":13351685,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351690,"byte_end":13351729,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351734,"byte_end":13351837,"line_start":108,"line_end":108,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351842,"byte_end":13351861,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351866,"byte_end":13351871,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351876,"byte_end":13351879,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351884,"byte_end":13351927,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351932,"byte_end":13351939,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351944,"byte_end":13351951,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13351956,"byte_end":13351965,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13297187,"byte_end":13297193,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3565}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294656,"byte_end":13294695,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294696,"byte_end":13294699,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294700,"byte_end":13294777,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294778,"byte_end":13294857,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294858,"byte_end":13294937,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294938,"byte_end":13294996,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13294997,"byte_end":13295000,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295001,"byte_end":13295079,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295080,"byte_end":13295158,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295159,"byte_end":13295237,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295238,"byte_end":13295303,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295304,"byte_end":13295307,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295308,"byte_end":13295372,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295373,"byte_end":13295445,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295446,"byte_end":13295526,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295527,"byte_end":13295607,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295608,"byte_end":13295688,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295689,"byte_end":13295758,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295759,"byte_end":13295829,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295830,"byte_end":13295868,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295869,"byte_end":13295872,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295873,"byte_end":13295950,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13295951,"byte_end":13296036,"line_start":50,"line_end":50,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296037,"byte_end":13296117,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296118,"byte_end":13296165,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296166,"byte_end":13296238,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296239,"byte_end":13296242,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296243,"byte_end":13296257,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296258,"byte_end":13296261,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296262,"byte_end":13296269,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296270,"byte_end":13296298,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296299,"byte_end":13296302,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296303,"byte_end":13296321,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296322,"byte_end":13296343,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296344,"byte_end":13296378,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296379,"byte_end":13296382,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296383,"byte_end":13296431,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296432,"byte_end":13296441,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296442,"byte_end":13296481,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296482,"byte_end":13296521,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296522,"byte_end":13296553,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296554,"byte_end":13296585,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296586,"byte_end":13296635,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296636,"byte_end":13296639,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296640,"byte_end":13296691,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296692,"byte_end":13296701,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296702,"byte_end":13296745,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296746,"byte_end":13296766,"line_start":75,"line_end":75,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296767,"byte_end":13296797,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296798,"byte_end":13296837,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296838,"byte_end":13296843,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296844,"byte_end":13296851,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296852,"byte_end":13296855,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296856,"byte_end":13296890,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296891,"byte_end":13296920,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296921,"byte_end":13296968,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13296969,"byte_end":13297018,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13297019,"byte_end":13297056,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13297057,"byte_end":13297158,"line_start":86,"line_end":86,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301209,"byte_end":13301212,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300999,"byte_end":13301062,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301067,"byte_end":13301070,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301075,"byte_end":13301089,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301094,"byte_end":13301097,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301102,"byte_end":13301109,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301114,"byte_end":13301142,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301147,"byte_end":13301150,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301155,"byte_end":13301185,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301190,"byte_end":13301197,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301810,"byte_end":13301826,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301425,"byte_end":13301487,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301492,"byte_end":13301551,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301556,"byte_end":13301559,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301564,"byte_end":13301578,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301583,"byte_end":13301586,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301591,"byte_end":13301598,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301603,"byte_end":13301631,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301636,"byte_end":13301639,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301644,"byte_end":13301693,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301698,"byte_end":13301705,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301710,"byte_end":13301713,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301718,"byte_end":13301730,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301735,"byte_end":13301738,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13301743,"byte_end":13301798,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305221,"byte_end":13305225,"line_start":332,"line_end":332,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303533,"byte_end":13303606,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303611,"byte_end":13303657,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303662,"byte_end":13303665,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303670,"byte_end":13303743,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303748,"byte_end":13303823,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303828,"byte_end":13303831,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303836,"byte_end":13303909,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303914,"byte_end":13303983,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13303988,"byte_end":13304062,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304067,"byte_end":13304140,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304145,"byte_end":13304169,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304174,"byte_end":13304177,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304182,"byte_end":13304256,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304261,"byte_end":13304278,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304283,"byte_end":13304286,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304291,"byte_end":13304310,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304315,"byte_end":13304318,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304323,"byte_end":13304396,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read` makes you lose your place in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304401,"byte_end":13304477,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304482,"byte_end":13304496,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304501,"byte_end":13304504,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304509,"byte_end":13304523,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304528,"byte_end":13304531,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304536,"byte_end":13304543,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304548,"byte_end":13304571,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304576,"byte_end":13304604,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304609,"byte_end":13304612,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304617,"byte_end":13304635,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304640,"byte_end":13304661,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304666,"byte_end":13304710,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304715,"byte_end":13304749,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304754,"byte_end":13304757,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304762,"byte_end":13304796,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304801,"byte_end":13304827,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304832,"byte_end":13304835,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304840,"byte_end":13304873,"line_start":322,"line_end":322,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304878,"byte_end":13304948,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304953,"byte_end":13304993,"line_start":324,"line_end":324,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13304998,"byte_end":13305028,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305033,"byte_end":13305090,"line_start":326,"line_end":326,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305095,"byte_end":13305098,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305103,"byte_end":13305161,"line_start":328,"line_end":328,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305166,"byte_end":13305182,"line_start":329,"line_end":329,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305187,"byte_end":13305191,"line_start":330,"line_end":330,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305196,"byte_end":13305203,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307749,"byte_end":13307759,"line_start":396,"line_end":396,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305672,"byte_end":13305745,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305750,"byte_end":13305796,"line_start":346,"line_end":346,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305801,"byte_end":13305804,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305809,"byte_end":13305882,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305887,"byte_end":13305962,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305967,"byte_end":13305970,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13305975,"byte_end":13306049,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306054,"byte_end":13306128,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306133,"byte_end":13306205,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306210,"byte_end":13306285,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306290,"byte_end":13306333,"line_start":355,"line_end":355,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306338,"byte_end":13306341,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306346,"byte_end":13306419,"line_start":357,"line_end":357,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306424,"byte_end":13306493,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306498,"byte_end":13306572,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306577,"byte_end":13306650,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306655,"byte_end":13306679,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306684,"byte_end":13306687,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306692,"byte_end":13306766,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306771,"byte_end":13306788,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306793,"byte_end":13306796,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306801,"byte_end":13306820,"line_start":366,"line_end":366,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306825,"byte_end":13306828,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306833,"byte_end":13306906,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read_owned` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306911,"byte_end":13306984,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13306989,"byte_end":13307012,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307017,"byte_end":13307020,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307025,"byte_end":13307039,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307044,"byte_end":13307047,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307052,"byte_end":13307059,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307064,"byte_end":13307087,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307092,"byte_end":13307120,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307125,"byte_end":13307128,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307133,"byte_end":13307151,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307156,"byte_end":13307177,"line_start":379,"line_end":379,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307182,"byte_end":13307226,"line_start":380,"line_end":380,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307231,"byte_end":13307265,"line_start":381,"line_end":381,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307270,"byte_end":13307273,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307278,"byte_end":13307318,"line_start":383,"line_end":383,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307323,"byte_end":13307349,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307354,"byte_end":13307357,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307362,"byte_end":13307395,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307400,"byte_end":13307470,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307475,"byte_end":13307521,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307526,"byte_end":13307556,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307561,"byte_end":13307618,"line_start":390,"line_end":390,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307623,"byte_end":13307626,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307631,"byte_end":13307689,"line_start":392,"line_end":392,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307694,"byte_end":13307710,"line_start":393,"line_end":393,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307715,"byte_end":13307719,"line_start":394,"line_end":394,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13307724,"byte_end":13307731,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309248,"byte_end":13309256,"line_start":441,"line_end":441,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308229,"byte_end":13308291,"line_start":409,"line_end":409,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308296,"byte_end":13308299,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308304,"byte_end":13308381,"line_start":411,"line_end":411,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308386,"byte_end":13308457,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308462,"byte_end":13308479,"line_start":413,"line_end":413,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308484,"byte_end":13308487,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308492,"byte_end":13308526,"line_start":415,"line_end":415,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308531,"byte_end":13308534,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308539,"byte_end":13308553,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308558,"byte_end":13308561,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308566,"byte_end":13308573,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308578,"byte_end":13308601,"line_start":420,"line_end":420,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308606,"byte_end":13308634,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308639,"byte_end":13308642,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308647,"byte_end":13308665,"line_start":423,"line_end":423,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308670,"byte_end":13308691,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308696,"byte_end":13308740,"line_start":425,"line_end":425,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308745,"byte_end":13308779,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308784,"byte_end":13308787,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308792,"byte_end":13308833,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308838,"byte_end":13308864,"line_start":429,"line_end":429,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308869,"byte_end":13308872,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308877,"byte_end":13308910,"line_start":431,"line_end":431,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308915,"byte_end":13308985,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13308990,"byte_end":13309030,"line_start":433,"line_end":433,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309035,"byte_end":13309065,"line_start":434,"line_end":434,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309070,"byte_end":13309127,"line_start":435,"line_end":435,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309132,"byte_end":13309135,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309140,"byte_end":13309193,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309198,"byte_end":13309214,"line_start":438,"line_end":438,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309219,"byte_end":13309224,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309229,"byte_end":13309236,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311088,"byte_end":13311102,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309682,"byte_end":13309744,"line_start":455,"line_end":455,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309749,"byte_end":13309752,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309757,"byte_end":13309834,"line_start":457,"line_end":457,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309839,"byte_end":13309910,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309915,"byte_end":13309932,"line_start":459,"line_end":459,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309937,"byte_end":13309940,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13309945,"byte_end":13310014,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310019,"byte_end":13310092,"line_start":462,"line_end":462,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310097,"byte_end":13310169,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310174,"byte_end":13310247,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310252,"byte_end":13310307,"line_start":465,"line_end":465,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310312,"byte_end":13310315,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310320,"byte_end":13310354,"line_start":467,"line_end":467,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310359,"byte_end":13310362,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310367,"byte_end":13310381,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310386,"byte_end":13310389,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310394,"byte_end":13310401,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310406,"byte_end":13310429,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310434,"byte_end":13310462,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310467,"byte_end":13310470,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310475,"byte_end":13310493,"line_start":475,"line_end":475,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310498,"byte_end":13310519,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310524,"byte_end":13310568,"line_start":477,"line_end":477,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310573,"byte_end":13310607,"line_start":478,"line_end":478,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310612,"byte_end":13310615,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310620,"byte_end":13310667,"line_start":480,"line_end":480,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310672,"byte_end":13310698,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310703,"byte_end":13310706,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310711,"byte_end":13310744,"line_start":483,"line_end":483,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310749,"byte_end":13310819,"line_start":484,"line_end":484,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310824,"byte_end":13310870,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310875,"byte_end":13310905,"line_start":486,"line_end":486,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310910,"byte_end":13310967,"line_start":487,"line_end":487,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310972,"byte_end":13310975,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13310980,"byte_end":13311033,"line_start":489,"line_end":489,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311038,"byte_end":13311054,"line_start":490,"line_end":490,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311059,"byte_end":13311064,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311069,"byte_end":13311076,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312407,"byte_end":13312412,"line_start":535,"line_end":535,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311551,"byte_end":13311623,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311628,"byte_end":13311679,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311684,"byte_end":13311687,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311692,"byte_end":13311764,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311769,"byte_end":13311797,"line_start":511,"line_end":511,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311802,"byte_end":13311805,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311810,"byte_end":13311885,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311890,"byte_end":13311907,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311912,"byte_end":13311915,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311920,"byte_end":13311939,"line_start":516,"line_end":516,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311944,"byte_end":13311947,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13311952,"byte_end":13312025,"line_start":518,"line_end":518,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write` makes you lose your place","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312030,"byte_end":13312104,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312109,"byte_end":13312126,"line_start":520,"line_end":520,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312131,"byte_end":13312134,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312139,"byte_end":13312153,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312158,"byte_end":13312161,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312166,"byte_end":13312173,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312178,"byte_end":13312206,"line_start":525,"line_end":525,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312211,"byte_end":13312214,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312219,"byte_end":13312237,"line_start":527,"line_end":527,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312242,"byte_end":13312263,"line_start":528,"line_end":528,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312268,"byte_end":13312300,"line_start":529,"line_end":529,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312305,"byte_end":13312308,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312313,"byte_end":13312350,"line_start":531,"line_end":531,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312355,"byte_end":13312368,"line_start":532,"line_end":532,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312373,"byte_end":13312377,"line_start":533,"line_end":533,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312382,"byte_end":13312389,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314184,"byte_end":13314195,"line_start":584,"line_end":584,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312906,"byte_end":13312978,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13312983,"byte_end":13313034,"line_start":550,"line_end":550,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313039,"byte_end":13313042,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313047,"byte_end":13313119,"line_start":552,"line_end":552,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313124,"byte_end":13313152,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313157,"byte_end":13313160,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313165,"byte_end":13313240,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313245,"byte_end":13313319,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313324,"byte_end":13313396,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313401,"byte_end":13313476,"line_start":558,"line_end":558,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313481,"byte_end":13313524,"line_start":559,"line_end":559,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313529,"byte_end":13313532,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313537,"byte_end":13313612,"line_start":561,"line_end":561,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313617,"byte_end":13313634,"line_start":562,"line_end":562,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313639,"byte_end":13313642,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313647,"byte_end":13313666,"line_start":564,"line_end":564,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313671,"byte_end":13313674,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313679,"byte_end":13313752,"line_start":566,"line_end":566,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write_owned` makes you lose your","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313757,"byte_end":13313831,"line_start":567,"line_end":567,"column_start":5,"column_end":79}},{"value":"/ place in the queue.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313836,"byte_end":13313859,"line_start":568,"line_end":568,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313864,"byte_end":13313867,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313872,"byte_end":13313886,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313891,"byte_end":13313894,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313899,"byte_end":13313906,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313911,"byte_end":13313934,"line_start":573,"line_end":573,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313939,"byte_end":13313967,"line_start":574,"line_end":574,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313972,"byte_end":13313975,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13313980,"byte_end":13313998,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314003,"byte_end":13314024,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314029,"byte_end":13314071,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314076,"byte_end":13314079,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314084,"byte_end":13314127,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314132,"byte_end":13314145,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314150,"byte_end":13314154,"line_start":582,"line_end":582,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314159,"byte_end":13314166,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315352,"byte_end":13315361,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314712,"byte_end":13314778,"line_start":598,"line_end":598,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314783,"byte_end":13314786,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314791,"byte_end":13314868,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314873,"byte_end":13314945,"line_start":601,"line_end":601,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314950,"byte_end":13314967,"line_start":602,"line_end":602,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314972,"byte_end":13314975,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13314980,"byte_end":13315014,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315019,"byte_end":13315022,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315027,"byte_end":13315041,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315046,"byte_end":13315049,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315054,"byte_end":13315061,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315066,"byte_end":13315094,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315099,"byte_end":13315102,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315107,"byte_end":13315125,"line_start":611,"line_end":611,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315130,"byte_end":13315151,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315156,"byte_end":13315188,"line_start":613,"line_end":613,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315193,"byte_end":13315196,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315201,"byte_end":13315233,"line_start":615,"line_end":615,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315238,"byte_end":13315264,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315269,"byte_end":13315272,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315277,"byte_end":13315318,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315323,"byte_end":13315328,"line_start":619,"line_end":619,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315333,"byte_end":13315340,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316913,"byte_end":13316928,"line_start":666,"line_end":666,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315834,"byte_end":13315900,"line_start":636,"line_end":636,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315905,"byte_end":13315908,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315913,"byte_end":13315990,"line_start":638,"line_end":638,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13315995,"byte_end":13316067,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316072,"byte_end":13316089,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316094,"byte_end":13316097,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316102,"byte_end":13316172,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316177,"byte_end":13316250,"line_start":643,"line_end":643,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316255,"byte_end":13316327,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316332,"byte_end":13316405,"line_start":645,"line_end":645,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316410,"byte_end":13316465,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316470,"byte_end":13316473,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316478,"byte_end":13316512,"line_start":648,"line_end":648,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316517,"byte_end":13316520,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316525,"byte_end":13316539,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316544,"byte_end":13316547,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316552,"byte_end":13316559,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316564,"byte_end":13316587,"line_start":653,"line_end":653,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316592,"byte_end":13316620,"line_start":654,"line_end":654,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316625,"byte_end":13316628,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316633,"byte_end":13316651,"line_start":656,"line_end":656,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316656,"byte_end":13316677,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316682,"byte_end":13316724,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316729,"byte_end":13316732,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316737,"byte_end":13316788,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316793,"byte_end":13316819,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316824,"byte_end":13316827,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316832,"byte_end":13316879,"line_start":663,"line_end":663,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316884,"byte_end":13316889,"line_start":664,"line_end":664,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13316894,"byte_end":13316901,"line_start":665,"line_end":665,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317896,"byte_end":13317903,"line_start":698,"line_end":698,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317424,"byte_end":13317479,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317484,"byte_end":13317487,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317492,"byte_end":13317568,"line_start":683,"line_end":683,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317573,"byte_end":13317647,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317652,"byte_end":13317655,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317660,"byte_end":13317674,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317679,"byte_end":13317682,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317687,"byte_end":13317694,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317699,"byte_end":13317727,"line_start":689,"line_end":689,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317732,"byte_end":13317735,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317740,"byte_end":13317755,"line_start":691,"line_end":691,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317760,"byte_end":13317798,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317803,"byte_end":13317806,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317811,"byte_end":13317842,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317847,"byte_end":13317862,"line_start":695,"line_end":695,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317867,"byte_end":13317872,"line_start":696,"line_end":696,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13317877,"byte_end":13317884,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318137,"byte_end":13318147,"line_start":706,"line_end":706,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318072,"byte_end":13318125,"line_start":705,"line_end":705,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371439,"byte_end":13371447,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179}],"decl_id":null,"docs":" A thread-safe cell that can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell that can be written to only once.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370352,"byte_end":13370408,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370409,"byte_end":13370412,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `OnceCell` is typically used for global variables that need to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370413,"byte_end":13370484,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ initialized once on first use, but need no further changes. The `OnceCell`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370485,"byte_end":13370563,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ in Tokio allows the initialization procedure to be asynchronous.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370564,"byte_end":13370632,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370633,"byte_end":13370636,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370637,"byte_end":13370651,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370652,"byte_end":13370655,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370656,"byte_end":13370663,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370664,"byte_end":13370694,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370695,"byte_end":13370698,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370699,"byte_end":13370739,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370740,"byte_end":13370753,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370754,"byte_end":13370759,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370760,"byte_end":13370763,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370764,"byte_end":13370819,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370820,"byte_end":13370823,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370824,"byte_end":13370842,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370843,"byte_end":13370864,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     let result = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370865,"byte_end":13370927,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370928,"byte_end":13370959,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370960,"byte_end":13370965,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370966,"byte_end":13370973,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370974,"byte_end":13370977,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It is often useful to write a wrapper method for accessing the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13370978,"byte_end":13371051,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371052,"byte_end":13371055,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371056,"byte_end":13371063,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371064,"byte_end":13371094,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371095,"byte_end":13371098,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371099,"byte_end":13371154,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371155,"byte_end":13371158,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ async fn get_global_integer() -> &'static u32 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371159,"byte_end":13371210,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     ONCE.get_or_init(|| async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371211,"byte_end":13371246,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/         1 + 1","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371247,"byte_end":13371264,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     }).await","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371265,"byte_end":13371281,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371282,"byte_end":13371287,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371288,"byte_end":13371291,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371292,"byte_end":13371310,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371311,"byte_end":13371332,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     let result = get_global_integer().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371333,"byte_end":13371381,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371382,"byte_end":13371413,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371414,"byte_end":13371419,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371420,"byte_end":13371427,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372821,"byte_end":13372824,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `OnceCell` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `OnceCell` instance.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372765,"byte_end":13372809,"line_start":128,"line_end":128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373251,"byte_end":13373259,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `OnceCell` that contains the provided value, if any.","sig":null,"attributes":[{"value":"/ Creates a new `OnceCell` that contains the provided value, if any.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373025,"byte_end":13373095,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373100,"byte_end":13373103,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the `Option` is `None`, this is equivalent to `OnceCell::new`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373108,"byte_end":13373177,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373182,"byte_end":13373185,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13373190,"byte_end":13373239,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13374501,"byte_end":13374512,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `OnceCell` currently contains a value, and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `OnceCell` currently contains a value, and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13374394,"byte_end":13374470,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13374475,"byte_end":13374489,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13375925,"byte_end":13375928,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value currently stored in the `OnceCell`, or\n `None` if the `OnceCell` is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value currently stored in the `OnceCell`, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13375795,"byte_end":13375870,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ `None` if the `OnceCell` is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13375875,"byte_end":13375913,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376432,"byte_end":13376439,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value currently stored in the\n `OnceCell`, or `None` if the `OnceCell` is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value currently stored in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376089,"byte_end":13376157,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ `OnceCell`, or `None` if the `OnceCell` is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376162,"byte_end":13376215,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376220,"byte_end":13376223,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `OnceCell` mutably, it is safe to mutate the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376228,"byte_end":13376304,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ value inside the `OnceCell` — the mutable borrow statically guarantees","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376309,"byte_end":13376385,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ no other references exist.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376390,"byte_end":13376420,"line_start":239,"line_end":239,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13377201,"byte_end":13377204,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `OnceCell` to the given value if the `OnceCell` is\n empty.","sig":null,"attributes":[{"value":"/ Sets the value of the `OnceCell` to the given value if the `OnceCell` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376616,"byte_end":13376692,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376697,"byte_end":13376707,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376712,"byte_end":13376715,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` already has a value, this call will fail with an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376720,"byte_end":13376790,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ [`SetError::AlreadyInitializedError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376795,"byte_end":13376837,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376842,"byte_end":13376845,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` is empty, but some other task is currently trying to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376850,"byte_end":13376924,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ set the value, this call will fail with [`SetError::InitializingError`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13376929,"byte_end":13377005,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13377010,"byte_end":13377013,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13377018,"byte_end":13377107,"line_start":257,"line_end":257,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13377112,"byte_end":13377189,"line_start":258,"line_end":258,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378945,"byte_end":13378956,"line_start":299,"line_end":299,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378262,"byte_end":13378335,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378340,"byte_end":13378373,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378378,"byte_end":13378381,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378386,"byte_end":13378461,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378466,"byte_end":13378542,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378547,"byte_end":13378580,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378585,"byte_end":13378588,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the provided operation is cancelled or panics, the initialization","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378593,"byte_end":13378665,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ attempt is cancelled. If there are other tasks waiting for the value to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378670,"byte_end":13378745,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ be initialized, one of them will start another attempt at initializing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378750,"byte_end":13378824,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378829,"byte_end":13378843,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378848,"byte_end":13378851,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13378856,"byte_end":13378927,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380937,"byte_end":13380952,"line_start":347,"line_end":347,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380236,"byte_end":13380309,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380314,"byte_end":13380347,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380352,"byte_end":13380355,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380360,"byte_end":13380435,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380440,"byte_end":13380516,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380521,"byte_end":13380554,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380559,"byte_end":13380562,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the provided operation returns an error, is cancelled or panics, the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380567,"byte_end":13380642,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ initialization attempt is cancelled. If there are other tasks waiting","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380647,"byte_end":13380720,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ for the value to be initialized, one of them will start another attempt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380725,"byte_end":13380800,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ at initializing the value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380805,"byte_end":13380835,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380840,"byte_end":13380843,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13380848,"byte_end":13380919,"line_start":346,"line_end":346,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382516,"byte_end":13382526,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value from the cell, destroying the cell in the process.\n Returns `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes the value from the cell, destroying the cell in the process.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382389,"byte_end":13382459,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382464,"byte_end":13382504,"line_start":386,"line_end":386,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382980,"byte_end":13382984,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell empty.  Returns\n `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell empty.  Returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382857,"byte_end":13382931,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ `None` if the cell is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13382936,"byte_end":13382968,"line_start":398,"line_end":398,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383989,"byte_end":13384012,"line_start":424,"line_end":424,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" The cell was already initialized when [`OnceCell::set`] was called.","sig":null,"attributes":[{"value":"/ The cell was already initialized when [`OnceCell::set`] was called.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383851,"byte_end":13383922,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383927,"byte_end":13383930,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383935,"byte_end":13383984,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384071,"byte_end":13384088,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" The cell is currently being initialized.\n","sig":null,"attributes":[{"value":"/ The cell is currently being initialized.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384022,"byte_end":13384066,"line_start":426,"line_end":426,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383833,"byte_end":13383841,"line_start":420,"line_end":420,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> { AlreadyInitializedError(T), InitializingError(T), }","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3574}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`].","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383686,"byte_end":13383741,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383742,"byte_end":13383745,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383746,"byte_end":13383795,"line_start":418,"line_end":418,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384552,"byte_end":13384571,"line_start":443,"line_end":443,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384478,"byte_end":13384540,"line_start":442,"line_end":442,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384809,"byte_end":13384828,"line_start":451,"line_end":451,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384742,"byte_end":13384797,"line_start":450,"line_end":450,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3586},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3603},{"krate":0,"index":3607},{"krate":0,"index":3614},{"krate":0,"index":3276},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3342},{"krate":0,"index":3345}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/cfg.rs","byte_start":25978,"byte_end":26002,"line_start":288,"line_end":288,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385069,"byte_end":13385148,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385149,"byte_end":13385159,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385160,"byte_end":13385163,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385164,"byte_end":13385240,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385241,"byte_end":13385315,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385316,"byte_end":13385319,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385320,"byte_end":13385331,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385332,"byte_end":13385335,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385336,"byte_end":13385416,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385417,"byte_end":13385493,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385494,"byte_end":13385564,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385565,"byte_end":13385641,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385642,"byte_end":13385683,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385684,"byte_end":13385687,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385688,"byte_end":13385702,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385703,"byte_end":13385706,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385707,"byte_end":13385714,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385715,"byte_end":13385742,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385743,"byte_end":13385746,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385747,"byte_end":13385811,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385812,"byte_end":13385863,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385864,"byte_end":13385867,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385868,"byte_end":13385901,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385902,"byte_end":13385948,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13385949,"byte_end":13386007,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386008,"byte_end":13386021,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386022,"byte_end":13386033,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386034,"byte_end":13386037,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386038,"byte_end":13386064,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386065,"byte_end":13386077,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386078,"byte_end":13386085,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386086,"byte_end":13386093,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386094,"byte_end":13386097,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386098,"byte_end":13386111,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386112,"byte_end":13386115,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386116,"byte_end":13386193,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386194,"byte_end":13386272,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386273,"byte_end":13386353,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386354,"byte_end":13386357,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386358,"byte_end":13386377,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386378,"byte_end":13386381,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386382,"byte_end":13386462,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386463,"byte_end":13386542,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386543,"byte_end":13386615,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386616,"byte_end":13386619,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386620,"byte_end":13386662,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386663,"byte_end":13386709,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386710,"byte_end":13386776,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386777,"byte_end":13386841,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386842,"byte_end":13386886,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386887,"byte_end":13386951,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13386952,"byte_end":13387010,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387586,"byte_end":13387594,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387224,"byte_end":13387290,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387291,"byte_end":13387294,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387295,"byte_end":13387361,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387362,"byte_end":13387365,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387366,"byte_end":13387440,"line_start":68,"line_end":68,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387441,"byte_end":13387453,"line_start":69,"line_end":69,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387454,"byte_end":13387457,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387458,"byte_end":13387557,"line_start":71,"line_end":71,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387885,"byte_end":13387891,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3595}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387720,"byte_end":13387785,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387786,"byte_end":13387789,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387790,"byte_end":13387856,"line_start":83,"line_end":83,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388212,"byte_end":13388215,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":3602}],"decl_id":null,"docs":" Returns a reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387928,"byte_end":13387971,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387972,"byte_end":13387975,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13387976,"byte_end":13388052,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388053,"byte_end":13388132,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388133,"byte_end":13388183,"line_start":93,"line_end":93,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388794,"byte_end":13388799,"line_start":120,"line_end":120,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3617},{"krate":0,"index":3621},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3285},{"krate":0,"index":3287}],"decl_id":null,"docs":" Watch error types.\n","sig":null,"attributes":[{"value":"/ Watch error types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388806,"byte_end":13388828,"line_start":121,"line_end":121,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388936,"byte_end":13388945,"line_start":127,"line_end":127,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388853,"byte_end":13388899,"line_start":125,"line_end":125,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13388949,"byte_end":13388954,"line_start":127,"line_end":127,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::watch::error::SendError::0","value":"T","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389337,"byte_end":13389346,"line_start":141,"line_end":141,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389244,"byte_end":13389300,"line_start":139,"line_end":139,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392399,"byte_end":13392406,"line_start":248,"line_end":248,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391636,"byte_end":13391712,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391713,"byte_end":13391716,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391717,"byte_end":13391799,"line_start":223,"line_end":223,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391800,"byte_end":13391876,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391877,"byte_end":13391913,"line_start":225,"line_end":225,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391914,"byte_end":13391917,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391918,"byte_end":13391932,"line_start":227,"line_end":227,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391933,"byte_end":13391936,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391937,"byte_end":13391944,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391945,"byte_end":13391972,"line_start":230,"line_end":230,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391973,"byte_end":13391976,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13391977,"byte_end":13392041,"line_start":232,"line_end":232,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392042,"byte_end":13392093,"line_start":233,"line_end":233,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392094,"byte_end":13392097,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392098,"byte_end":13392131,"line_start":235,"line_end":235,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392132,"byte_end":13392178,"line_start":236,"line_end":236,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392179,"byte_end":13392237,"line_start":237,"line_end":237,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392238,"byte_end":13392251,"line_start":238,"line_end":238,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392252,"byte_end":13392263,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392264,"byte_end":13392267,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392268,"byte_end":13392294,"line_start":241,"line_end":241,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392295,"byte_end":13392307,"line_start":242,"line_end":242,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392308,"byte_end":13392315,"line_start":243,"line_end":243,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392316,"byte_end":13392323,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392324,"byte_end":13392327,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392328,"byte_end":13392357,"line_start":246,"line_end":246,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392358,"byte_end":13392391,"line_start":247,"line_end":247,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393848,"byte_end":13393854,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393133,"byte_end":13393189,"line_start":278,"line_end":278,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393194,"byte_end":13393197,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method does not mark the returned value as seen, so future calls to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393202,"byte_end":13393278,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ [`changed`] may return immediately even if you have already seen the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393283,"byte_end":13393355,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ value with a call to `borrow`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393360,"byte_end":13393394,"line_start":282,"line_end":282,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393399,"byte_end":13393402,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393407,"byte_end":13393483,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393488,"byte_end":13393564,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393569,"byte_end":13393600,"line_start":286,"line_end":286,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393605,"byte_end":13393608,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393613,"byte_end":13393647,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393652,"byte_end":13393655,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393660,"byte_end":13393674,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393679,"byte_end":13393682,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393687,"byte_end":13393694,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393699,"byte_end":13393726,"line_start":293,"line_end":293,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393731,"byte_end":13393734,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393739,"byte_end":13393781,"line_start":295,"line_end":295,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393786,"byte_end":13393824,"line_start":296,"line_end":296,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393829,"byte_end":13393836,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394506,"byte_end":13394523,"line_start":315,"line_end":315,"column_start":12,"column_end":29},"name":"borrow_and_update","qualname":"<Receiver<T>>::borrow_and_update","value":"pub fn borrow_and_update(&mut Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value and mark that value\n as seen.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value and mark that value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13393966,"byte_end":13394041,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ as seen.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394046,"byte_end":13394058,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394063,"byte_end":13394066,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This method marks the value as seen, so [`changed`] will not return","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394071,"byte_end":13394142,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ immediately if the newest value is one previously returned by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394147,"byte_end":13394212,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ `borrow_and_update`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394217,"byte_end":13394241,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394246,"byte_end":13394249,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394254,"byte_end":13394330,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394335,"byte_end":13394411,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394416,"byte_end":13394447,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394452,"byte_end":13394455,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394460,"byte_end":13394494,"line_start":314,"line_end":314,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13396135,"byte_end":13396142,"line_start":360,"line_end":360,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a change notification, then marks the newest value as seen.","sig":null,"attributes":[{"value":"/ Waits for a change notification, then marks the newest value as seen.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394698,"byte_end":13394771,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394776,"byte_end":13394779,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ If the newest value in the channel has not yet been marked seen when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394784,"byte_end":13394856,"line_start":323,"line_end":323,"column_start":5,"column_end":77}},{"value":"/ this method is called, the method marks that value seen and returns","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394861,"byte_end":13394932,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/ immediately. If the newest value has already been marked seen, then the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13394937,"byte_end":13395012,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ method sleeps until a new message is sent by the [`Sender`] connected to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395017,"byte_end":13395093,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ this `Receiver`, or until the [`Sender`] is dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395098,"byte_end":13395154,"line_start":327,"line_end":327,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395159,"byte_end":13395162,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if and only if the [`Sender`] is dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395167,"byte_end":13395241,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395246,"byte_end":13395249,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395254,"byte_end":13395273,"line_start":331,"line_end":331,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395278,"byte_end":13395281,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If you use it as the event in a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395286,"byte_end":13395349,"line_start":333,"line_end":333,"column_start":5,"column_end":68}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395354,"byte_end":13395423,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ completes first, then it is guaranteed that no values have been marked","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395428,"byte_end":13395502,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ seen by this call to `changed`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395507,"byte_end":13395542,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395547,"byte_end":13395550,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395555,"byte_end":13395584,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395589,"byte_end":13395592,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395597,"byte_end":13395611,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395616,"byte_end":13395619,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395624,"byte_end":13395631,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395636,"byte_end":13395663,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395668,"byte_end":13395671,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395676,"byte_end":13395694,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395699,"byte_end":13395720,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395725,"byte_end":13395776,"line_start":347,"line_end":347,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395781,"byte_end":13395784,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395789,"byte_end":13395822,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395827,"byte_end":13395867,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395872,"byte_end":13395883,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395888,"byte_end":13395891,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395896,"byte_end":13395940,"line_start":353,"line_end":353,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395945,"byte_end":13395989,"line_start":354,"line_end":354,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13395994,"byte_end":13395997,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13396002,"byte_end":13396045,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13396050,"byte_end":13396095,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13396100,"byte_end":13396105,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13396110,"byte_end":13396117,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398231,"byte_end":13398235,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398030,"byte_end":13398093,"line_start":426,"line_end":426,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398098,"byte_end":13398101,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This method fails if the channel has been closed, which happens when","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398106,"byte_end":13398178,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/ every receiver has been dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398183,"byte_end":13398219,"line_start":429,"line_end":429,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399087,"byte_end":13399099,"line_start":456,"line_end":456,"column_start":12,"column_end":24},"name":"send_replace","qualname":"<Sender<T>>::send_replace","value":"pub fn send_replace(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers and returning\n the previous value in the channel.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers and returning","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398546,"byte_end":13398622,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ the previous value in the channel.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398627,"byte_end":13398665,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398670,"byte_end":13398673,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This can be useful for reusing the buffers inside a watched value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398678,"byte_end":13398748,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/ Additionally, this method permits sending values even when there are no","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398753,"byte_end":13398828,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ receivers.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398833,"byte_end":13398847,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398852,"byte_end":13398855,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398860,"byte_end":13398874,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398879,"byte_end":13398882,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398887,"byte_end":13398894,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398899,"byte_end":13398926,"line_start":450,"line_end":450,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398931,"byte_end":13398934,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let (tx, _rx) = watch::channel(1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398939,"byte_end":13398977,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(2), 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398982,"byte_end":13399020,"line_start":453,"line_end":453,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(3), 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399025,"byte_end":13399063,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399068,"byte_end":13399075,"line_start":455,"line_end":455,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400257,"byte_end":13400263,"line_start":494,"line_end":494,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399795,"byte_end":13399850,"line_start":480,"line_end":480,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399855,"byte_end":13399858,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399863,"byte_end":13399939,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13399944,"byte_end":13400020,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400025,"byte_end":13400056,"line_start":484,"line_end":484,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400061,"byte_end":13400064,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400069,"byte_end":13400083,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400088,"byte_end":13400091,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400096,"byte_end":13400103,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400108,"byte_end":13400135,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400140,"byte_end":13400143,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400148,"byte_end":13400190,"line_start":491,"line_end":491,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400195,"byte_end":13400233,"line_start":492,"line_end":492,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400238,"byte_end":13400245,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400691,"byte_end":13400700,"line_start":511,"line_end":511,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400375,"byte_end":13400449,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400454,"byte_end":13400471,"line_start":500,"line_end":500,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400476,"byte_end":13400479,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400484,"byte_end":13400498,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400503,"byte_end":13400506,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400511,"byte_end":13400518,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400523,"byte_end":13400574,"line_start":505,"line_end":505,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400579,"byte_end":13400608,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400613,"byte_end":13400616,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400621,"byte_end":13400634,"line_start":508,"line_end":508,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400639,"byte_end":13400667,"line_start":509,"line_end":509,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400672,"byte_end":13400679,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401621,"byte_end":13401627,"line_start":544,"line_end":544,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400764,"byte_end":13400810,"line_start":515,"line_end":515,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400815,"byte_end":13400818,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400823,"byte_end":13400897,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400902,"byte_end":13400957,"line_start":518,"line_end":518,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400962,"byte_end":13400965,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400970,"byte_end":13400989,"line_start":520,"line_end":520,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13400994,"byte_end":13400997,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401002,"byte_end":13401077,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401082,"byte_end":13401151,"line_start":523,"line_end":523,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401156,"byte_end":13401159,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401164,"byte_end":13401178,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401183,"byte_end":13401186,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401191,"byte_end":13401198,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401203,"byte_end":13401230,"line_start":528,"line_end":528,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401235,"byte_end":13401238,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401243,"byte_end":13401261,"line_start":530,"line_end":530,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401266,"byte_end":13401287,"line_start":531,"line_end":531,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401292,"byte_end":13401339,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401344,"byte_end":13401347,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401352,"byte_end":13401385,"line_start":534,"line_end":534,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401390,"byte_end":13401413,"line_start":535,"line_end":535,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401418,"byte_end":13401439,"line_start":536,"line_end":536,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401444,"byte_end":13401455,"line_start":537,"line_end":537,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401460,"byte_end":13401463,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401468,"byte_end":13401501,"line_start":539,"line_end":539,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401506,"byte_end":13401532,"line_start":540,"line_end":540,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401537,"byte_end":13401581,"line_start":541,"line_end":541,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401586,"byte_end":13401591,"line_start":542,"line_end":542,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401596,"byte_end":13401603,"line_start":543,"line_end":543,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403662,"byte_end":13403671,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] connected to this `Sender`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] connected to this `Sender`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13401998,"byte_end":13402056,"line_start":558,"line_end":558,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402061,"byte_end":13402064,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ All messages sent before this call to `subscribe` are initially marked","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402069,"byte_end":13402143,"line_start":560,"line_end":560,"column_start":5,"column_end":79}},{"value":"/ as seen by the new `Receiver`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402148,"byte_end":13402182,"line_start":561,"line_end":561,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402187,"byte_end":13402190,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ This method can be called even if there are no other receivers. In this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402195,"byte_end":13402270,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ case, the channel is reopened.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402275,"byte_end":13402309,"line_start":564,"line_end":564,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402314,"byte_end":13402317,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402322,"byte_end":13402336,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402341,"byte_end":13402344,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ The new channel will receive messages sent on this `Sender`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402349,"byte_end":13402413,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402418,"byte_end":13402421,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402426,"byte_end":13402433,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402438,"byte_end":13402465,"line_start":571,"line_end":571,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402470,"byte_end":13402473,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402478,"byte_end":13402496,"line_start":573,"line_end":573,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402501,"byte_end":13402522,"line_start":574,"line_end":574,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402527,"byte_end":13402572,"line_start":575,"line_end":575,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402577,"byte_end":13402580,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402585,"byte_end":13402613,"line_start":577,"line_end":577,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402618,"byte_end":13402621,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     let rx = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402626,"byte_end":13402658,"line_start":579,"line_end":579,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(5, *rx.borrow());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402663,"byte_end":13402699,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402704,"byte_end":13402707,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402712,"byte_end":13402741,"line_start":582,"line_end":582,"column_start":5,"column_end":34}},{"value":"/     assert_eq!(10, *rx.borrow());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402746,"byte_end":13402783,"line_start":583,"line_end":583,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402788,"byte_end":13402793,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402798,"byte_end":13402805,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402810,"byte_end":13402813,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The most recent message is considered seen by the channel, so this test","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402818,"byte_end":13402893,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ is guaranteed to pass.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402898,"byte_end":13402924,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402929,"byte_end":13402932,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402937,"byte_end":13402944,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402949,"byte_end":13402976,"line_start":591,"line_end":591,"column_start":5,"column_end":32}},{"value":"/ use tokio::time::Duration;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13402981,"byte_end":13403011,"line_start":592,"line_end":592,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403016,"byte_end":13403019,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403024,"byte_end":13403042,"line_start":594,"line_end":594,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403047,"byte_end":13403068,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403073,"byte_end":13403118,"line_start":596,"line_end":596,"column_start":5,"column_end":50}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403123,"byte_end":13403151,"line_start":597,"line_end":597,"column_start":5,"column_end":33}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403156,"byte_end":13403192,"line_start":598,"line_end":598,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403197,"byte_end":13403200,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403205,"byte_end":13403238,"line_start":600,"line_end":600,"column_start":5,"column_end":38}},{"value":"/         // by spawning and sleeping, the message is sent after `main`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403243,"byte_end":13403316,"line_start":601,"line_end":601,"column_start":5,"column_end":78}},{"value":"/         // hits the call to `changed`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403321,"byte_end":13403363,"line_start":602,"line_end":602,"column_start":5,"column_end":47}},{"value":"/         # if false {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403368,"byte_end":13403392,"line_start":603,"line_end":603,"column_start":5,"column_end":29}},{"value":"/         tokio::time::sleep(Duration::from_millis(10)).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403397,"byte_end":13403461,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/         # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403466,"byte_end":13403481,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/         tx.send(100).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403486,"byte_end":13403520,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403525,"byte_end":13403536,"line_start":607,"line_end":607,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403541,"byte_end":13403544,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/     rx.changed().await.unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403549,"byte_end":13403585,"line_start":609,"line_end":609,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(100, *rx.borrow());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403590,"byte_end":13403628,"line_start":610,"line_end":610,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403633,"byte_end":13403638,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13403643,"byte_end":13403650,"line_start":612,"line_end":612,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404442,"byte_end":13404456,"line_start":640,"line_end":640,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers that currently exist.","sig":null,"attributes":[{"value":"/ Returns the number of receivers that currently exist.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404002,"byte_end":13404059,"line_start":622,"line_end":622,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404064,"byte_end":13404067,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404072,"byte_end":13404086,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404091,"byte_end":13404094,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404099,"byte_end":13404106,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404111,"byte_end":13404138,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404143,"byte_end":13404146,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404151,"byte_end":13404169,"line_start":629,"line_end":629,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404174,"byte_end":13404195,"line_start":630,"line_end":630,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx1) = watch::channel(\"hello\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404200,"byte_end":13404248,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404253,"byte_end":13404256,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404261,"byte_end":13404304,"line_start":633,"line_end":633,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404309,"byte_end":13404312,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = rx1.clone();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404317,"byte_end":13404352,"line_start":635,"line_end":635,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404357,"byte_end":13404360,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404365,"byte_end":13404408,"line_start":637,"line_end":637,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404413,"byte_end":13404418,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404423,"byte_end":13404430,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":876},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127241,"byte_end":127272,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127273,"byte_end":127276,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127277,"byte_end":127299,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127300,"byte_end":127303,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127304,"byte_end":127385,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127386,"byte_end":127466,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127467,"byte_end":127547,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127548,"byte_end":127622,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127623,"byte_end":127698,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127699,"byte_end":127721,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127722,"byte_end":127725,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127726,"byte_end":127761,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127762,"byte_end":127765,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127766,"byte_end":127840,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127841,"byte_end":127920,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127921,"byte_end":127993,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":127994,"byte_end":128069,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128070,"byte_end":128123,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128124,"byte_end":128127,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128128,"byte_end":128205,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128206,"byte_end":128279,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128280,"byte_end":128359,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128360,"byte_end":128438,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128439,"byte_end":128511,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128512,"byte_end":128587,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128588,"byte_end":128662,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128663,"byte_end":128738,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128739,"byte_end":128769,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128770,"byte_end":128773,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128774,"byte_end":128852,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128853,"byte_end":128928,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":128929,"byte_end":129006,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129007,"byte_end":129086,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129087,"byte_end":129165,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129166,"byte_end":129241,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129242,"byte_end":129317,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129318,"byte_end":129379,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129380,"byte_end":129383,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129384,"byte_end":129408,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129409,"byte_end":129473,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129474,"byte_end":129534,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129535,"byte_end":129624,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129625,"byte_end":129713,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129714,"byte_end":129717,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129718,"byte_end":129743,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129744,"byte_end":129747,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129748,"byte_end":129815,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129816,"byte_end":129819,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129820,"byte_end":129836,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129837,"byte_end":129840,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129841,"byte_end":129920,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":129921,"byte_end":130000,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130001,"byte_end":130080,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130081,"byte_end":130148,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130149,"byte_end":130152,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130153,"byte_end":130160,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130161,"byte_end":130181,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130182,"byte_end":130185,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130186,"byte_end":130208,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130209,"byte_end":130232,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130233,"byte_end":130269,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130270,"byte_end":130277,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130278,"byte_end":130285,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130286,"byte_end":130293,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130294,"byte_end":130297,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130298,"byte_end":130377,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130378,"byte_end":130456,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130457,"byte_end":130491,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130492,"byte_end":130495,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130496,"byte_end":130503,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130504,"byte_end":130524,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130525,"byte_end":130528,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130529,"byte_end":130609,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130610,"byte_end":130644,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130645,"byte_end":130659,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130660,"byte_end":130682,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130683,"byte_end":130690,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130691,"byte_end":130694,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130695,"byte_end":130705,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130706,"byte_end":130709,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130710,"byte_end":130754,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130755,"byte_end":130784,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130785,"byte_end":130824,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130825,"byte_end":130837,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130838,"byte_end":130845,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130846,"byte_end":130853,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130854,"byte_end":130857,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130858,"byte_end":130938,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":130939,"byte_end":131014,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131015,"byte_end":131027,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131028,"byte_end":131031,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131032,"byte_end":131039,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131040,"byte_end":131060,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131061,"byte_end":131064,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131065,"byte_end":131103,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131104,"byte_end":131138,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131139,"byte_end":131180,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131181,"byte_end":131188,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131189,"byte_end":131192,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131193,"byte_end":131251,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131252,"byte_end":131285,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131286,"byte_end":131293,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131294,"byte_end":131301,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131302,"byte_end":131305,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131306,"byte_end":131374,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131375,"byte_end":131403,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131404,"byte_end":131407,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131408,"byte_end":131449,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131450,"byte_end":131483,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131484,"byte_end":131530,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131531,"byte_end":131574,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131575,"byte_end":131617,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131618,"byte_end":131659,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131660,"byte_end":131663,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131664,"byte_end":131693,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131694,"byte_end":131697,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131698,"byte_end":131778,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131779,"byte_end":131858,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131859,"byte_end":131938,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131939,"byte_end":131979,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131980,"byte_end":131983,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":131984,"byte_end":132058,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132059,"byte_end":132139,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132140,"byte_end":132143,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132144,"byte_end":132224,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132225,"byte_end":132302,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132303,"byte_end":132383,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132384,"byte_end":132399,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132400,"byte_end":132403,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132404,"byte_end":132427,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132428,"byte_end":132431,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132432,"byte_end":132512,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132513,"byte_end":132579,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132580,"byte_end":132647,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132648,"byte_end":132722,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132723,"byte_end":132735,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132736,"byte_end":132739,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132740,"byte_end":132747,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132748,"byte_end":132768,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132769,"byte_end":132772,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132773,"byte_end":132796,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132797,"byte_end":132826,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132827,"byte_end":132889,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132890,"byte_end":132897,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132898,"byte_end":132905,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132906,"byte_end":132913,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132914,"byte_end":132917,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132918,"byte_end":132992,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":132993,"byte_end":133060,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133061,"byte_end":133064,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133065,"byte_end":133076,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133077,"byte_end":133099,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133100,"byte_end":133164,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133165,"byte_end":133205,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133206,"byte_end":133268,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133269,"byte_end":133297,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133298,"byte_end":133305,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133306,"byte_end":133309,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133310,"byte_end":133339,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133340,"byte_end":133385,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133386,"byte_end":133398,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133399,"byte_end":133406,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133407,"byte_end":133414,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133415,"byte_end":133418,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133419,"byte_end":133442,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133443,"byte_end":133446,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133447,"byte_end":133537,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133538,"byte_end":133612,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133613,"byte_end":133689,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133690,"byte_end":133764,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133765,"byte_end":133844,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133845,"byte_end":133927,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133928,"byte_end":133949,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133950,"byte_end":133953,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133954,"byte_end":133970,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133971,"byte_end":133974,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133975,"byte_end":133982,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":133983,"byte_end":134003,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134004,"byte_end":134007,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134008,"byte_end":134031,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134032,"byte_end":134074,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134075,"byte_end":134137,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134138,"byte_end":134166,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134167,"byte_end":134174,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134175,"byte_end":134178,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134179,"byte_end":134224,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134225,"byte_end":134232,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134233,"byte_end":134240,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134241,"byte_end":134244,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134245,"byte_end":134263,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134264,"byte_end":134267,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134268,"byte_end":134342,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134343,"byte_end":134421,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134422,"byte_end":134498,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134499,"byte_end":134556,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134557,"byte_end":134635,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134636,"byte_end":134664,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134665,"byte_end":134668,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134669,"byte_end":134680,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134681,"byte_end":134701,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134702,"byte_end":134705,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134706,"byte_end":134744,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134745,"byte_end":134756,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134757,"byte_end":134784,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134785,"byte_end":134803,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134804,"byte_end":134846,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134847,"byte_end":134858,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134859,"byte_end":134862,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134863,"byte_end":134930,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134931,"byte_end":134963,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":134964,"byte_end":135000,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135001,"byte_end":135006,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135007,"byte_end":135020,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135021,"byte_end":135028,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135029,"byte_end":135036,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135037,"byte_end":135040,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135041,"byte_end":135071,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135072,"byte_end":135075,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135076,"byte_end":135153,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135154,"byte_end":135233,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135234,"byte_end":135307,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135308,"byte_end":135384,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135385,"byte_end":135462,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135463,"byte_end":135539,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135540,"byte_end":135605,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135606,"byte_end":135609,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135610,"byte_end":135646,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135647,"byte_end":135650,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135651,"byte_end":135658,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135659,"byte_end":135703,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135704,"byte_end":135760,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135761,"byte_end":135810,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135811,"byte_end":135816,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135817,"byte_end":135824,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135825,"byte_end":135828,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135829,"byte_end":135904,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135905,"byte_end":135984,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":135985,"byte_end":136059,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136060,"byte_end":136063,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136064,"byte_end":136143,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136144,"byte_end":136216,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136217,"byte_end":136220,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136221,"byte_end":136224,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136225,"byte_end":136247,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136248,"byte_end":136251,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136252,"byte_end":136342,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136343,"byte_end":136441,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136442,"byte_end":136465,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136466,"byte_end":136469,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136470,"byte_end":136477,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136478,"byte_end":136498,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136499,"byte_end":136522,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136523,"byte_end":136557,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136558,"byte_end":136561,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136562,"byte_end":136583,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136584,"byte_end":136637,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136638,"byte_end":136641,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136642,"byte_end":136668,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136669,"byte_end":136701,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136702,"byte_end":136801,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136802,"byte_end":136895,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136896,"byte_end":136924,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136925,"byte_end":136934,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136935,"byte_end":136941,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136942,"byte_end":136945,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136946,"byte_end":136981,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136982,"byte_end":136989,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136990,"byte_end":136997,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":136998,"byte_end":137001,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137002,"byte_end":137059,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137060,"byte_end":137117,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137118,"byte_end":137181,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137182,"byte_end":137231,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137232,"byte_end":137281,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137282,"byte_end":137339,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/task/mod.rs","byte_start":137340,"byte_end":137386,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":938},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142644,"byte_end":142650,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142553,"byte_end":142582,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142587,"byte_end":142590,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142595,"byte_end":142634,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":939},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142681,"byte_end":142687,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":937},"children":[],"decl_id":null,"docs":" Node type.\n","sig":null,"attributes":[{"value":"/ Node type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142657,"byte_end":142671,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":985},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17517,"byte_end":17523,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16021,"byte_end":16102,"line_start":432,"line_end":432,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16103,"byte_end":16192,"line_start":433,"line_end":433,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16193,"byte_end":16203,"line_start":434,"line_end":434,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16204,"byte_end":16207,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16208,"byte_end":16257,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16258,"byte_end":16261,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16262,"byte_end":16338,"line_start":438,"line_end":438,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16339,"byte_end":16414,"line_start":439,"line_end":439,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16415,"byte_end":16493,"line_start":440,"line_end":440,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16494,"byte_end":16571,"line_start":441,"line_end":441,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16572,"byte_end":16651,"line_start":442,"line_end":442,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16652,"byte_end":16734,"line_start":443,"line_end":443,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16735,"byte_end":16770,"line_start":444,"line_end":444,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16771,"byte_end":16774,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16775,"byte_end":16854,"line_start":446,"line_end":446,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16855,"byte_end":16937,"line_start":447,"line_end":447,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":16938,"byte_end":17017,"line_start":448,"line_end":448,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17018,"byte_end":17021,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17022,"byte_end":17072,"line_start":450,"line_end":450,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17073,"byte_end":17123,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17124,"byte_end":17178,"line_start":452,"line_end":452,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17179,"byte_end":17182,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17183,"byte_end":17196,"line_start":454,"line_end":454,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17197,"byte_end":17200,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17201,"byte_end":17260,"line_start":456,"line_end":456,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17261,"byte_end":17264,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17265,"byte_end":17283,"line_start":458,"line_end":458,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17284,"byte_end":17310,"line_start":459,"line_end":459,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17311,"byte_end":17314,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17315,"byte_end":17365,"line_start":461,"line_end":461,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17366,"byte_end":17369,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17370,"byte_end":17410,"line_start":463,"line_end":463,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17411,"byte_end":17459,"line_start":464,"line_end":464,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17460,"byte_end":17483,"line_start":465,"line_end":465,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17484,"byte_end":17493,"line_start":466,"line_end":466,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17494,"byte_end":17500,"line_start":467,"line_end":467,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":17501,"byte_end":17508,"line_start":468,"line_end":468,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34522,"byte_end":34528,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34742,"byte_end":34748,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34890,"byte_end":34896,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015451,"byte_end":13015456,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015483,"byte_end":13015488,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47900,"byte_end":47903,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":48063,"byte_end":48066,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":48695,"byte_end":48701,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51768,"byte_end":51771,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51914,"byte_end":51917,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":52586,"byte_end":52592,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55586,"byte_end":55589,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55732,"byte_end":55735,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":56126,"byte_end":56132,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":65890,"byte_end":65893,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":66041,"byte_end":66044,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":66921,"byte_end":66924,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":67722,"byte_end":67728,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":68531,"byte_end":68537,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":69343,"byte_end":69349,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":70150,"byte_end":70156,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72197,"byte_end":72204,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":81182,"byte_end":81189,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84300,"byte_end":84310,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84350,"byte_end":84360,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84662,"byte_end":84674,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84714,"byte_end":84726,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":85023,"byte_end":85035,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":85075,"byte_end":85087,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":95837,"byte_end":95846,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96020,"byte_end":96029,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96176,"byte_end":96185,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96298,"byte_end":96307,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96651,"byte_end":96660,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96685,"byte_end":96694,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96704,"byte_end":96713,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":97205,"byte_end":97214,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":97499,"byte_end":97508,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97849,"byte_end":97858,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97883,"byte_end":97892,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97902,"byte_end":97911,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":98096,"byte_end":98105,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":98390,"byte_end":98399,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100707,"byte_end":100715,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100740,"byte_end":100748,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100758,"byte_end":100766,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100947,"byte_end":100955,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":101239,"byte_end":101247,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101587,"byte_end":101598,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101623,"byte_end":101634,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101644,"byte_end":101655,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102344,"byte_end":102355,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102645,"byte_end":102656,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102820,"byte_end":102831,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/mutex.rs","byte_start":103164,"byte_end":103169,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/unsafe_cell.rs","byte_start":103847,"byte_end":103857,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109056,"byte_end":109066,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109331,"byte_end":109341,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109867,"byte_end":109872,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":114638,"byte_end":114648,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":114757,"byte_end":114769,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":115124,"byte_end":115140,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":116405,"byte_end":116421,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":117016,"byte_end":117028,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":117208,"byte_end":117213,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":108103,"byte_end":108106,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":108195,"byte_end":108198,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":119684,"byte_end":119690,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":121339,"byte_end":121349,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":122323,"byte_end":122339,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":122471,"byte_end":122487,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":124227,"byte_end":124233,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034276,"byte_end":13034283,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037539,"byte_end":13037556,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044987,"byte_end":13044996,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045172,"byte_end":13045181,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045829,"byte_end":13045838,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046143,"byte_end":13046152,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13047075,"byte_end":13047087,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13047465,"byte_end":13047477,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049456,"byte_end":13049460,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049505,"byte_end":13049509,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052283,"byte_end":13052289,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052326,"byte_end":13052332,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052370,"byte_end":13052378,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052415,"byte_end":13052423,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052439,"byte_end":13052445,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058055,"byte_end":13058059,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058451,"byte_end":13058457,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058637,"byte_end":13058643,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058797,"byte_end":13058805,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063668,"byte_end":13063676,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1308},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13068136,"byte_end":13068144,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13068770,"byte_end":13068774,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13069553,"byte_end":13069557,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13070218,"byte_end":13070222,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13070970,"byte_end":13070976,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071391,"byte_end":13071397,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071541,"byte_end":13071549,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071684,"byte_end":13071693,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071866,"byte_end":13071875,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13078746,"byte_end":13078751,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13088790,"byte_end":13088796,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13089278,"byte_end":13089284,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093366,"byte_end":13093374,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101932,"byte_end":13101940,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102136,"byte_end":13102144,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102160,"byte_end":13102166,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123902,"byte_end":13123908,"line_start":988,"line_end":988,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124040,"byte_end":13124046,"line_start":996,"line_end":996,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124258,"byte_end":13124264,"line_start":1006,"line_end":1006,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125514,"byte_end":13125520,"line_start":1049,"line_end":1049,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125987,"byte_end":13125993,"line_start":1066,"line_end":1066,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126209,"byte_end":13126220,"line_start":1076,"line_end":1076,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13129003,"byte_end":13129014,"line_start":1163,"line_end":1163,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13129677,"byte_end":13129688,"line_start":1186,"line_end":1186,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13130461,"byte_end":13130463,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13130757,"byte_end":13130759,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13131697,"byte_end":13131701,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132334,"byte_end":13132342,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132608,"byte_end":13132612,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132661,"byte_end":13132665,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13133172,"byte_end":13133174,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13133784,"byte_end":13133786,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13134336,"byte_end":13134338,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13134677,"byte_end":13134679,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13135002,"byte_end":13135004,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13139397,"byte_end":13139399,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13139811,"byte_end":13139815,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13140000,"byte_end":13140004,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13141005,"byte_end":13141016,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13143058,"byte_end":13143060,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13148774,"byte_end":13148776,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13149053,"byte_end":13149055,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13153378,"byte_end":13153380,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154054,"byte_end":13154069,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154210,"byte_end":13154225,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154898,"byte_end":13154915,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155914,"byte_end":13155931,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161462,"byte_end":13161477,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165851,"byte_end":13165860,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166020,"byte_end":13166029,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166515,"byte_end":13166527,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166560,"byte_end":13166572,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166912,"byte_end":13166924,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167475,"byte_end":13167487,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167772,"byte_end":13167784,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13168027,"byte_end":13168036,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13168187,"byte_end":13168196,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176125,"byte_end":13176130,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176184,"byte_end":13176189,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176243,"byte_end":13176253,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176318,"byte_end":13176333,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176398,"byte_end":13176414,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176481,"byte_end":13176497,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177178,"byte_end":13177190,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177327,"byte_end":13177339,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178147,"byte_end":13178152,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185322,"byte_end":13185327,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185411,"byte_end":13185416,"line_start":490,"line_end":490,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185548,"byte_end":13185553,"line_start":499,"line_end":499,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185944,"byte_end":13185954,"line_start":515,"line_end":515,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2072},{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189668,"byte_end":13189678,"line_start":638,"line_end":638,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189779,"byte_end":13189789,"line_start":644,"line_end":644,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189936,"byte_end":13189946,"line_start":651,"line_end":651,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190103,"byte_end":13190113,"line_start":657,"line_end":657,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190279,"byte_end":13190289,"line_start":663,"line_end":663,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190458,"byte_end":13190473,"line_start":671,"line_end":671,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191376,"byte_end":13191391,"line_start":700,"line_end":700,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191488,"byte_end":13191503,"line_start":706,"line_end":706,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191646,"byte_end":13191661,"line_start":713,"line_end":713,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191814,"byte_end":13191829,"line_start":719,"line_end":719,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191991,"byte_end":13192006,"line_start":725,"line_end":725,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192176,"byte_end":13192192,"line_start":733,"line_end":733,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2117}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194030,"byte_end":13194046,"line_start":785,"line_end":785,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194146,"byte_end":13194162,"line_start":791,"line_end":791,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194305,"byte_end":13194321,"line_start":798,"line_end":798,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194474,"byte_end":13194490,"line_start":804,"line_end":804,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194660,"byte_end":13194676,"line_start":810,"line_end":810,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199682,"byte_end":13199690,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199723,"byte_end":13199731,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200682,"byte_end":13200688,"line_start":203,"line_end":203,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13209076,"byte_end":13209082,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13210992,"byte_end":13211000,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13211512,"byte_end":13211520,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13217382,"byte_end":13217390,"line_start":676,"line_end":676,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13219253,"byte_end":13219259,"line_start":722,"line_end":722,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228172,"byte_end":13228181,"line_start":328,"line_end":328,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228343,"byte_end":13228352,"line_start":334,"line_end":334,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228421,"byte_end":13228433,"line_start":338,"line_end":338,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228732,"byte_end":13228744,"line_start":347,"line_end":347,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13229609,"byte_end":13229613,"line_start":379,"line_end":379,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2322},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231650,"byte_end":13231656,"line_start":458,"line_end":458,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2339},{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240212,"byte_end":13240218,"line_start":724,"line_end":724,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240357,"byte_end":13240365,"line_start":732,"line_end":732,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245198,"byte_end":13245206,"line_start":890,"line_end":890,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245353,"byte_end":13245361,"line_start":898,"line_end":898,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245824,"byte_end":13245829,"line_start":914,"line_end":914,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249717,"byte_end":13249722,"line_start":1025,"line_end":1025,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249759,"byte_end":13249764,"line_start":1026,"line_end":1026,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249865,"byte_end":13249870,"line_start":1032,"line_end":1032,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13250247,"byte_end":13250252,"line_start":1050,"line_end":1050,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13251304,"byte_end":13251309,"line_start":1084,"line_end":1084,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13254266,"byte_end":13254271,"line_start":1177,"line_end":1177,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13258358,"byte_end":13258367,"line_start":108,"line_end":108,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13269433,"byte_end":13269442,"line_start":400,"line_end":400,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13269641,"byte_end":13269647,"line_start":408,"line_end":408,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13270513,"byte_end":13270520,"line_start":437,"line_end":437,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13271198,"byte_end":13271205,"line_start":461,"line_end":461,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13272003,"byte_end":13272010,"line_start":491,"line_end":491,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273260,"byte_end":13273267,"line_start":521,"line_end":521,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273314,"byte_end":13273326,"line_start":525,"line_end":525,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273419,"byte_end":13273431,"line_start":531,"line_end":531,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273575,"byte_end":13273587,"line_start":537,"line_end":537,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273634,"byte_end":13273649,"line_start":541,"line_end":541,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2510},{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274167,"byte_end":13274182,"line_start":556,"line_end":556,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274468,"byte_end":13274483,"line_start":565,"line_end":565,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274576,"byte_end":13274582,"line_start":570,"line_end":570,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279160,"byte_end":13279169,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293031,"byte_end":13293046,"line_start":536,"line_end":536,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2566}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293291,"byte_end":13293311,"line_start":545,"line_end":545,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293565,"byte_end":13293580,"line_start":554,"line_end":554,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293688,"byte_end":13293708,"line_start":560,"line_end":560,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319184,"byte_end":13319204,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322277,"byte_end":13322297,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322438,"byte_end":13322458,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322644,"byte_end":13322664,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322846,"byte_end":13322866,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323887,"byte_end":13323908,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329580,"byte_end":13329601,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329731,"byte_end":13329752,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329873,"byte_end":13329894,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13330066,"byte_end":13330087,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13330255,"byte_end":13330276,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331379,"byte_end":13331406,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334954,"byte_end":13334981,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335125,"byte_end":13335152,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335287,"byte_end":13335314,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335500,"byte_end":13335527,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335709,"byte_end":13335736,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336438,"byte_end":13336453,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339868,"byte_end":13339883,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340018,"byte_end":13340033,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340213,"byte_end":13340228,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340404,"byte_end":13340419,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341204,"byte_end":13341220,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2868},{"krate":0,"index":2871},{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347219,"byte_end":13347235,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347369,"byte_end":13347385,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2880}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347514,"byte_end":13347530,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347710,"byte_end":13347726,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347902,"byte_end":13347918,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348777,"byte_end":13348799,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2922}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352640,"byte_end":13352662,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352796,"byte_end":13352818,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352947,"byte_end":13352969,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13353149,"byte_end":13353171,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13353347,"byte_end":13353369,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299155,"byte_end":13299161,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299215,"byte_end":13299221,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299455,"byte_end":13299470,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299528,"byte_end":13299543,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299750,"byte_end":13299770,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299865,"byte_end":13299885,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299984,"byte_end":13300000,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300065,"byte_end":13300086,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300147,"byte_end":13300169,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300237,"byte_end":13300264,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300611,"byte_end":13300627,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300692,"byte_end":13300713,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300774,"byte_end":13300796,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300864,"byte_end":13300891,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300983,"byte_end":13300989,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3003},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318250,"byte_end":13318256,"line_start":714,"line_end":714,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318348,"byte_end":13318354,"line_start":720,"line_end":720,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3026}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13354821,"byte_end":13354832,"line_start":31,"line_end":31,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13354856,"byte_end":13354867,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13359806,"byte_end":13359817,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368694,"byte_end":13368705,"line_start":345,"line_end":345,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368791,"byte_end":13368802,"line_start":351,"line_end":351,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368935,"byte_end":13368946,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368971,"byte_end":13368982,"line_start":358,"line_end":358,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13369078,"byte_end":13369083,"line_start":365,"line_end":365,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371568,"byte_end":13371576,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371684,"byte_end":13371692,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371897,"byte_end":13371905,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372038,"byte_end":13372046,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372162,"byte_end":13372170,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372195,"byte_end":13372203,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372455,"byte_end":13372463,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372747,"byte_end":13372755,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3221},{"krate":0,"index":3227},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383445,"byte_end":13383453,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383670,"byte_end":13383678,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384121,"byte_end":13384129,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384436,"byte_end":13384444,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384460,"byte_end":13384468,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389034,"byte_end":13389043,"line_start":131,"line_end":131,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3282}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389223,"byte_end":13389232,"line_start":137,"line_end":137,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389425,"byte_end":13389434,"line_start":145,"line_end":145,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389596,"byte_end":13389605,"line_start":151,"line_end":151,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390407,"byte_end":13390414,"line_start":177,"line_end":177,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390571,"byte_end":13390584,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390882,"byte_end":13390893,"line_start":196,"line_end":196,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392844,"byte_end":13392852,"line_start":269,"line_end":269,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13397444,"byte_end":13397452,"line_start":405,"line_end":405,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13397636,"byte_end":13397644,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398014,"byte_end":13398020,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404548,"byte_end":13404554,"line_start":645,"line_end":645,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404730,"byte_end":13404733,"line_start":654,"line_end":654,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/wake_list.rs","byte_start":139889,"byte_end":139897,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/wake_list.rs","byte_start":140917,"byte_end":140925,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":141980,"byte_end":141990,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142060,"byte_end":142070,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144695,"byte_end":144703,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144740,"byte_end":144748,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144799,"byte_end":144809,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":145044,"byte_end":145054,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148060,"byte_end":148070,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148427,"byte_end":148437,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148624,"byte_end":148634,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":150016,"byte_end":150024,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":151607,"byte_end":151615,"line_start":336,"line_end":336,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15407,"byte_end":15413,"line_start":376,"line_end":376,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/macros/mod.rs","byte_start":19948,"byte_end":19955,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":55}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15466,"byte_end":15468,"line_start":384,"line_end":384,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":102}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15478,"byte_end":15481,"line_start":385,"line_end":385,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":351}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15884,"byte_end":15888,"line_start":415,"line_end":415,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1128}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031410,"byte_end":13031419,"line_start":439,"line_end":439,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":1154}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031434,"byte_end":13031438,"line_start":441,"line_end":441,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1355}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/mod.rs","byte_start":13076170,"byte_end":13076175,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1948}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13031614,"byte_end":13031621,"line_start":449,"line_end":449,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2246}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mod.rs","byte_start":13032360,"byte_end":13032365,"line_start":472,"line_end":472,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":3250}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/lib.rs","byte_start":15933,"byte_end":15937,"line_start":421,"line_end":421,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":876}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34522,"byte_end":34528,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34742,"byte_end":34748,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/poll_fn.rs","byte_start":34890,"byte_end":34896,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015451,"byte_end":13015456,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/future/ready.rs","byte_start":13015483,"byte_end":13015488,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":45441,"byte_end":45450,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":165},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":47900,"byte_end":47903,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":314},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":48063,"byte_end":48066,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":44742},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_buf_read.rs","byte_start":48695,"byte_end":48701,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":123}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51768,"byte_end":51771,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":314},"to":{"krate":0,"index":165}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":51914,"byte_end":51917,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":44742},"to":{"krate":0,"index":165}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_read.rs","byte_start":52586,"byte_end":52592,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":165}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55586,"byte_end":55589,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":314},"to":{"krate":0,"index":204}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":55732,"byte_end":55735,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":44742},"to":{"krate":0,"index":204}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_seek.rs","byte_start":56126,"byte_end":56132,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":204}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":65890,"byte_end":65893,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":314},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":66041,"byte_end":66044,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":44742},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":66921,"byte_end":66924,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":7064},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":67722,"byte_end":67728,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":68531,"byte_end":68537,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":69343,"byte_end":69349,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/async_write.rs","byte_start":70150,"byte_end":70156,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":10313},"to":{"krate":0,"index":244}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":72197,"byte_end":72204,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/io/read_buf.rs","byte_start":81182,"byte_end":81189,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":83630,"byte_end":83647,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":433},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84300,"byte_end":84310,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":10530},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84350,"byte_end":84360,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10530},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84662,"byte_end":84674,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10554},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":84714,"byte_end":84726,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10554},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":85023,"byte_end":85035,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10557},"to":{"krate":0,"index":378}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/net/addr.rs","byte_start":85075,"byte_end":85087,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":10557},"to":{"krate":0,"index":433}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":95837,"byte_end":95846,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96020,"byte_end":96029,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96176,"byte_end":96185,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_ptr.rs","byte_start":96298,"byte_end":96307,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96651,"byte_end":96660,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96685,"byte_end":96694,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":96704,"byte_end":96713,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":97205,"byte_end":97214,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u16.rs","byte_start":97499,"byte_end":97508,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":481},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97849,"byte_end":97858,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97883,"byte_end":97892,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":97902,"byte_end":97911,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":98096,"byte_end":98105,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u32.rs","byte_start":98390,"byte_end":98399,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100707,"byte_end":100715,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":525},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100740,"byte_end":100748,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":525},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100758,"byte_end":100766,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":100947,"byte_end":100955,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":525},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_u8.rs","byte_start":101239,"byte_end":101247,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":525},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101587,"byte_end":101598,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101623,"byte_end":101634,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":101644,"byte_end":101655,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102344,"byte_end":102355,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102645,"byte_end":102656,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/atomic_usize.rs","byte_start":102820,"byte_end":102831,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/mutex.rs","byte_start":103164,"byte_end":103169,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/loom/std/unsafe_cell.rs","byte_start":103847,"byte_end":103857,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109056,"byte_end":109066,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109331,"byte_end":109341,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1072},"to":{"krate":0,"index":839}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":109867,"byte_end":109872,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":114638,"byte_end":114648,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1072},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":114757,"byte_end":114769,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1076},"to":{"krate":0,"index":846}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":115124,"byte_end":115140,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":116405,"byte_end":116421,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1092},"to":{"krate":0,"index":839}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":117016,"byte_end":117028,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/thread.rs","byte_start":117208,"byte_end":117213,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":107622,"byte_end":107626,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":846}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":107629,"byte_end":107633,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":846}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":108103,"byte_end":108106,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":314},"to":{"krate":0,"index":846}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/park/mod.rs","byte_start":108195,"byte_end":108198,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":5967},"to":{"krate":0,"index":846}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":119684,"byte_end":119690,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":121339,"byte_end":121349,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":122323,"byte_end":122339,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":122471,"byte_end":122487,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/coop.rs","byte_start":124227,"byte_end":124233,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13034276,"byte_end":13034283,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/barrier.rs","byte_start":13037539,"byte_end":13037556,"line_start":135,"line_end":135,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13044987,"byte_end":13044996,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3368},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045172,"byte_end":13045181,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3368},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13045829,"byte_end":13045838,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3375},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13046143,"byte_end":13046152,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3375},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13047075,"byte_end":13047087,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13047465,"byte_end":13047477,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3387},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049456,"byte_end":13049460,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13049505,"byte_end":13049509,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052283,"byte_end":13052289,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052326,"byte_end":13052332,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052370,"byte_end":13052378,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052415,"byte_end":13052423,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13052439,"byte_end":13052445,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058055,"byte_end":13058059,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058451,"byte_end":13058457,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058637,"byte_end":13058643,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13058797,"byte_end":13058805,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13063668,"byte_end":13063676,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13068136,"byte_end":13068144,"line_start":935,"line_end":935,"column_start":18,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13068770,"byte_end":13068774,"line_start":958,"line_end":958,"column_start":13,"column_end":17},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13069553,"byte_end":13069557,"line_start":984,"line_end":984,"column_start":24,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13070218,"byte_end":13070222,"line_start":1004,"line_end":1004,"column_start":22,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1261},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13070970,"byte_end":13070976,"line_start":1030,"line_end":1030,"column_start":35,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1252},"to":{"krate":0,"index":937}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071391,"byte_end":13071397,"line_start":1047,"line_end":1047,"column_start":24,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071541,"byte_end":13071549,"line_start":1053,"line_end":1053,"column_start":24,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071684,"byte_end":13071693,"line_start":1059,"line_end":1059,"column_start":13,"column_end":22},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/broadcast.rs","byte_start":13071866,"byte_end":13071875,"line_start":1068,"line_end":1068,"column_start":22,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13078746,"byte_end":13078751,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13088790,"byte_end":13088796,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/block.rs","byte_start":13089278,"byte_end":13089284,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":3312}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13093366,"byte_end":13093374,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13101932,"byte_end":13101940,"line_start":359,"line_end":359,"column_start":24,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102136,"byte_end":13102144,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1494},"to":{"krate":2,"index":3057}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13102160,"byte_end":13102166,"line_start":369,"line_end":369,"column_start":9,"column_end":15},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13123902,"byte_end":13123908,"line_start":988,"line_end":988,"column_start":19,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124040,"byte_end":13124046,"line_start":996,"line_end":996,"column_start":24,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13124258,"byte_end":13124264,"line_start":1006,"line_end":1006,"column_start":9,"column_end":15},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125514,"byte_end":13125520,"line_start":1049,"line_end":1049,"column_start":18,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1487},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13125987,"byte_end":13125993,"line_start":1066,"line_end":1066,"column_start":24,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1487},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13126209,"byte_end":13126220,"line_start":1076,"line_end":1076,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13129003,"byte_end":13129014,"line_start":1163,"line_end":1163,"column_start":18,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/bounded.rs","byte_start":13129677,"byte_end":13129688,"line_start":1186,"line_end":1186,"column_start":24,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1491},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13130461,"byte_end":13130463,"line_start":22,"line_end":22,"column_start":39,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13130757,"byte_end":13130759,"line_start":33,"line_end":33,"column_start":51,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1662},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13131697,"byte_end":13131701,"line_start":71,"line_end":71,"column_start":27,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1675},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132334,"byte_end":13132342,"line_start":95,"line_end":95,"column_start":24,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1688},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132608,"byte_end":13132612,"line_start":104,"line_end":104,"column_start":40,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1675},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13132661,"byte_end":13132665,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1675},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13133172,"byte_end":13133174,"line_start":127,"line_end":127,"column_start":12,"column_end":14},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13133784,"byte_end":13133786,"line_start":152,"line_end":152,"column_start":23,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13134336,"byte_end":13134338,"line_start":170,"line_end":170,"column_start":22,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13134677,"byte_end":13134679,"line_start":182,"line_end":182,"column_start":21,"column_end":23},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13135002,"byte_end":13135004,"line_start":198,"line_end":198,"column_start":23,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13139397,"byte_end":13139399,"line_start":316,"line_end":316,"column_start":32,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1662},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13139811,"byte_end":13139815,"line_start":334,"line_end":334,"column_start":12,"column_end":16},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13140000,"byte_end":13140004,"line_start":344,"line_end":344,"column_start":21,"column_end":25},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1675},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/chan.rs","byte_start":13141005,"byte_end":13141016,"line_start":384,"line_end":384,"column_start":20,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":546},"to":{"krate":0,"index":1670}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13143058,"byte_end":13143060,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13148774,"byte_end":13148776,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1820},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13149053,"byte_end":13149055,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/list.rs","byte_start":13153378,"byte_end":13153380,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1824},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154054,"byte_end":13154069,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1886},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154210,"byte_end":13154225,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1886},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13154898,"byte_end":13154915,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1895},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13155914,"byte_end":13155931,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/unbounded.rs","byte_start":13161462,"byte_end":13161477,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13165851,"byte_end":13165860,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3403},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166020,"byte_end":13166029,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3403},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166515,"byte_end":13166527,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3410},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166560,"byte_end":13166572,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3410},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13166912,"byte_end":13166924,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3410},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167475,"byte_end":13167487,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3421},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13167772,"byte_end":13167784,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3421},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13168027,"byte_end":13168036,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3437},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mpsc/error.rs","byte_start":13168187,"byte_end":13168196,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3437},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176125,"byte_end":13176130,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176184,"byte_end":13176189,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176243,"byte_end":13176253,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176318,"byte_end":13176333,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176398,"byte_end":13176414,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13176481,"byte_end":13176497,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177178,"byte_end":13177190,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13177327,"byte_end":13177339,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3442},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13178147,"byte_end":13178152,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185322,"byte_end":13185327,"line_start":484,"line_end":484,"column_start":21,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185411,"byte_end":13185416,"line_start":490,"line_end":490,"column_start":21,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185548,"byte_end":13185553,"line_start":499,"line_end":499,"column_start":37,"column_end":42},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13185944,"byte_end":13185954,"line_start":515,"line_end":515,"column_start":21,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189668,"byte_end":13189678,"line_start":638,"line_end":638,"column_start":26,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189779,"byte_end":13189789,"line_start":644,"line_end":644,"column_start":27,"column_end":37},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13189936,"byte_end":13189946,"line_start":651,"line_end":651,"column_start":30,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190103,"byte_end":13190113,"line_start":657,"line_end":657,"column_start":45,"column_end":55},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190279,"byte_end":13190289,"line_start":663,"line_end":663,"column_start":49,"column_end":59},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2009},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13190458,"byte_end":13190473,"line_start":671,"line_end":671,"column_start":17,"column_end":32},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191376,"byte_end":13191391,"line_start":700,"line_end":700,"column_start":26,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191488,"byte_end":13191503,"line_start":706,"line_end":706,"column_start":27,"column_end":42},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191646,"byte_end":13191661,"line_start":713,"line_end":713,"column_start":30,"column_end":45},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191814,"byte_end":13191829,"line_start":719,"line_end":719,"column_start":45,"column_end":60},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13191991,"byte_end":13192006,"line_start":725,"line_end":725,"column_start":49,"column_end":64},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13192176,"byte_end":13192192,"line_start":733,"line_end":733,"column_start":21,"column_end":37},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194030,"byte_end":13194046,"line_start":785,"line_end":785,"column_start":30,"column_end":46},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194146,"byte_end":13194162,"line_start":791,"line_end":791,"column_start":31,"column_end":47},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194305,"byte_end":13194321,"line_start":798,"line_end":798,"column_start":34,"column_end":50},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194474,"byte_end":13194490,"line_start":804,"line_end":804,"column_start":49,"column_end":65},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/mutex.rs","byte_start":13194660,"byte_end":13194676,"line_start":810,"line_end":810,"column_start":53,"column_end":69},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199682,"byte_end":13199690,"line_start":160,"line_end":160,"column_start":26,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13199723,"byte_end":13199731,"line_start":161,"line_end":161,"column_start":26,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13200682,"byte_end":13200688,"line_start":203,"line_end":203,"column_start":6,"column_end":12},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13209076,"byte_end":13209082,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3447},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13210992,"byte_end":13211000,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13211512,"byte_end":13211520,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13217382,"byte_end":13217390,"line_start":676,"line_end":676,"column_start":15,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3469},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/notify.rs","byte_start":13219253,"byte_end":13219259,"line_start":722,"line_end":722,"column_start":35,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3462},"to":{"krate":0,"index":937}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228172,"byte_end":13228181,"line_start":328,"line_end":328,"column_start":27,"column_end":36},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3499},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228343,"byte_end":13228352,"line_start":334,"line_end":334,"column_start":32,"column_end":41},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3499},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228421,"byte_end":13228433,"line_start":338,"line_end":338,"column_start":27,"column_end":39},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3511},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13228732,"byte_end":13228744,"line_start":347,"line_end":347,"column_start":32,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3511},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13229609,"byte_end":13229613,"line_start":379,"line_end":379,"column_start":6,"column_end":10},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13231650,"byte_end":13231656,"line_start":458,"line_end":458,"column_start":9,"column_end":15},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240212,"byte_end":13240218,"line_start":724,"line_end":724,"column_start":18,"column_end":24},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13240357,"byte_end":13240365,"line_start":732,"line_end":732,"column_start":9,"column_end":17},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245198,"byte_end":13245206,"line_start":890,"line_end":890,"column_start":18,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245353,"byte_end":13245361,"line_start":898,"line_end":898,"column_start":20,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13245824,"byte_end":13245829,"line_start":914,"line_end":914,"column_start":9,"column_end":14},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249717,"byte_end":13249722,"line_start":1025,"line_end":1025,"column_start":31,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249759,"byte_end":13249764,"line_start":1026,"line_end":1026,"column_start":31,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13249865,"byte_end":13249870,"line_start":1032,"line_end":1032,"column_start":18,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13250247,"byte_end":13250252,"line_start":1050,"line_end":1050,"column_start":36,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2306},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13251304,"byte_end":13251309,"line_start":1084,"line_end":1084,"column_start":6,"column_end":11},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/oneshot.rs","byte_start":13254266,"byte_end":13254271,"line_start":1177,"line_end":1177,"column_start":21,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3524},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13258358,"byte_end":13258367,"line_start":108,"line_end":108,"column_start":6,"column_end":15},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13269433,"byte_end":13269442,"line_start":400,"line_end":400,"column_start":21,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2452},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13269641,"byte_end":13269647,"line_start":408,"line_end":408,"column_start":6,"column_end":12},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13270513,"byte_end":13270520,"line_start":437,"line_end":437,"column_start":17,"column_end":24},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":12755}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13271198,"byte_end":13271205,"line_start":461,"line_end":461,"column_start":10,"column_end":17},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13272003,"byte_end":13272010,"line_start":491,"line_end":491,"column_start":15,"column_end":22},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273260,"byte_end":13273267,"line_start":521,"line_end":521,"column_start":22,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273314,"byte_end":13273326,"line_start":525,"line_end":525,"column_start":6,"column_end":18},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273419,"byte_end":13273431,"line_start":531,"line_end":531,"column_start":23,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3540},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273575,"byte_end":13273587,"line_start":537,"line_end":537,"column_start":28,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3540},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13273634,"byte_end":13273649,"line_start":541,"line_end":541,"column_start":6,"column_end":21},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274167,"byte_end":13274182,"line_start":556,"line_end":556,"column_start":23,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3530},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274468,"byte_end":13274483,"line_start":565,"line_end":565,"column_start":28,"column_end":43},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3530},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/batch_semaphore.rs","byte_start":13274576,"byte_end":13274582,"line_start":570,"line_end":570,"column_start":35,"column_end":41},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2464},"to":{"krate":0,"index":937}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13279160,"byte_end":13279169,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293031,"byte_end":13293046,"line_start":536,"line_end":536,"column_start":10,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293291,"byte_end":13293311,"line_start":545,"line_end":545,"column_start":6,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293565,"byte_end":13293580,"line_start":554,"line_end":554,"column_start":19,"column_end":34},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/semaphore.rs","byte_start":13293688,"byte_end":13293708,"line_start":560,"line_end":560,"column_start":15,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3556},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13319184,"byte_end":13319204,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322277,"byte_end":13322297,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322438,"byte_end":13322458,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322644,"byte_end":13322664,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_read_guard.rs","byte_start":13322846,"byte_end":13322866,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13323887,"byte_end":13323908,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329580,"byte_end":13329601,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329731,"byte_end":13329752,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13329873,"byte_end":13329894,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13330066,"byte_end":13330087,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard.rs","byte_start":13330255,"byte_end":13330276,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13331379,"byte_end":13331406,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13334954,"byte_end":13334981,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335125,"byte_end":13335152,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335287,"byte_end":13335314,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335500,"byte_end":13335527,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":13335709,"byte_end":13335736,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13336438,"byte_end":13336453,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13339868,"byte_end":13339883,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340018,"byte_end":13340033,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340213,"byte_end":13340228,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/read_guard.rs","byte_start":13340404,"byte_end":13340419,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13341204,"byte_end":13341220,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347219,"byte_end":13347235,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347369,"byte_end":13347385,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347514,"byte_end":13347530,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347710,"byte_end":13347726,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard.rs","byte_start":13347902,"byte_end":13347918,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13348777,"byte_end":13348799,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352640,"byte_end":13352662,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352796,"byte_end":13352818,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13352947,"byte_end":13352969,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13353149,"byte_end":13353171,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":13353347,"byte_end":13353369,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299155,"byte_end":13299161,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299215,"byte_end":13299221,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299455,"byte_end":13299470,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299528,"byte_end":13299543,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2802},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299750,"byte_end":13299770,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299865,"byte_end":13299885,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2632},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13299984,"byte_end":13300000,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300065,"byte_end":13300086,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300147,"byte_end":13300169,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300237,"byte_end":13300264,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300611,"byte_end":13300627,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2855},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300692,"byte_end":13300713,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2693},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300774,"byte_end":13300796,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2909},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300864,"byte_end":13300891,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13300983,"byte_end":13300989,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318250,"byte_end":13318256,"line_start":714,"line_end":714,"column_start":21,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/rwlock.rs","byte_start":13318348,"byte_end":13318354,"line_start":720,"line_end":720,"column_start":29,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3561},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13354821,"byte_end":13354832,"line_start":31,"line_end":31,"column_start":24,"column_end":35},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":8378}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13354856,"byte_end":13354867,"line_start":32,"line_end":32,"column_start":21,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":8377}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13359806,"byte_end":13359817,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368694,"byte_end":13368705,"line_start":345,"line_end":345,"column_start":18,"column_end":29},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368791,"byte_end":13368802,"line_start":351,"line_end":351,"column_start":21,"column_end":32},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368935,"byte_end":13368946,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13368971,"byte_end":13368982,"line_start":358,"line_end":358,"column_start":22,"column_end":33},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3089},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/task/atomic_waker.rs","byte_start":13369078,"byte_end":13369083,"line_start":365,"line_end":365,"column_start":19,"column_end":24},"kind":{"Impl":{"id":281}},"from":{"krate":2,"index":13021},"to":{"krate":0,"index":3121}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371568,"byte_end":13371576,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371684,"byte_end":13371692,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13371897,"byte_end":13371905,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372038,"byte_end":13372046,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372162,"byte_end":13372170,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372195,"byte_end":13372203,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372455,"byte_end":13372463,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13372747,"byte_end":13372755,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383445,"byte_end":13383453,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13383670,"byte_end":13383678,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384121,"byte_end":13384129,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3569},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384436,"byte_end":13384444,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3569},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/once_cell.rs","byte_start":13384460,"byte_end":13384468,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389034,"byte_end":13389043,"line_start":131,"line_end":131,"column_start":42,"column_end":51},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389223,"byte_end":13389232,"line_start":137,"line_end":137,"column_start":47,"column_end":56},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3617},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389425,"byte_end":13389434,"line_start":145,"line_end":145,"column_start":27,"column_end":36},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3624},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13389596,"byte_end":13389605,"line_start":151,"line_end":151,"column_start":32,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3624},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390407,"byte_end":13390414,"line_start":177,"line_end":177,"column_start":10,"column_end":17},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390571,"byte_end":13390584,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13390882,"byte_end":13390893,"line_start":196,"line_end":196,"column_start":10,"column_end":21},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13392844,"byte_end":13392852,"line_start":269,"line_end":269,"column_start":9,"column_end":17},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13397444,"byte_end":13397452,"line_start":405,"line_end":405,"column_start":19,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3586},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13397636,"byte_end":13397644,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3586},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13398014,"byte_end":13398020,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404548,"byte_end":13404554,"line_start":645,"line_end":645,"column_start":18,"column_end":24},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3593},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/sync/watch.rs","byte_start":13404730,"byte_end":13404733,"line_start":654,"line_end":654,"column_start":24,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3599},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/wake_list.rs","byte_start":139889,"byte_end":139897,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/wake_list.rs","byte_start":140917,"byte_end":140925,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":889},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":141980,"byte_end":141990,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":142060,"byte_end":142070,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144695,"byte_end":144703,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":943},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144740,"byte_end":144748,"line_start":102,"line_end":102,"column_start":31,"column_end":39},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":943},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":144799,"byte_end":144809,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":145044,"byte_end":145054,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148060,"byte_end":148070,"line_start":211,"line_end":211,"column_start":30,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148427,"byte_end":148437,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":148624,"byte_end":148634,"line_start":233,"line_end":233,"column_start":27,"column_end":37},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":927},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":150016,"byte_end":150024,"line_start":287,"line_end":287,"column_start":9,"column_end":17},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.14.0/src/util/linked_list.rs","byte_start":151607,"byte_end":151615,"line_start":336,"line_end":336,"column_start":24,"column_end":32},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":943},"to":{"krate":2,"index":9413}}]}